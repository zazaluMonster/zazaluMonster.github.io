{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-cactus/source/CNAME","path":"CNAME","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/css/rtl.styl","path":"css/rtl.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/images/favicon-192x192.png","path":"images/favicon-192x192.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/waifu-tips.json","path":"live2d/waifu-tips.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/waifu-tips.js","path":"live2d/waifu-tips.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Black.woff","path":"lib/vazir-font/Vazir-Black.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Black.woff2","path":"lib/vazir-font/Vazir-Black.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Bold.woff","path":"lib/vazir-font/Vazir-Bold.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Bold.woff2","path":"lib/vazir-font/Vazir-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Light.woff","path":"lib/vazir-font/Vazir-Light.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Light.woff2","path":"lib/vazir-font/Vazir-Light.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Medium.woff","path":"lib/vazir-font/Vazir-Medium.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Medium.woff2","path":"lib/vazir-font/Vazir-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Thin.woff","path":"lib/vazir-font/Vazir-Thin.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Thin.woff2","path":"lib/vazir-font/Vazir-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir.woff","path":"lib/vazir-font/Vazir.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/font-face.css","path":"lib/vazir-font/font-face.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir.woff2","path":"lib/vazir-font/Vazir.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/model.json","path":"live2d/Pio/model.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/model.json","path":"live2d/Tia/model.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/css/waifu.css","path":"live2d/css/waifu.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/html/live2d.html","path":"live2d/html/live2d.html","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/live2d.js","path":"live2d/live2d.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Black.eot","path":"lib/vazir-font/Vazir-Black.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Black.ttf","path":"lib/vazir-font/Vazir-Black.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Bold.eot","path":"lib/vazir-font/Vazir-Bold.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Bold.ttf","path":"lib/vazir-font/Vazir-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Light.eot","path":"lib/vazir-font/Vazir-Light.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Light.ttf","path":"lib/vazir-font/Vazir-Light.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Medium.eot","path":"lib/vazir-font/Vazir-Medium.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Medium.ttf","path":"lib/vazir-font/Vazir-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Thin.eot","path":"lib/vazir-font/Vazir-Thin.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Thin.ttf","path":"lib/vazir-font/Vazir-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir.eot","path":"lib/vazir-font/Vazir.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir.ttf","path":"lib/vazir-font/Vazir.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/model.moc","path":"live2d/Pio/model.moc","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/model.moc","path":"live2d/Tia/model.moc","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/images/tmpImage/安装前磁盘分区情况.JPG","path":"images/tmpImage/安装前磁盘分区情况.JPG","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-regular-400.eot","path":"lib/font-awesome/webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-regular-400.ttf","path":"lib/font-awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff","path":"lib/font-awesome/webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/justified-gallery/css/justifiedGallery.min.css","path":"lib/justified-gallery/css/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","path":"lib/justified-gallery/js/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath Dere1.mtn","path":"live2d/Pio/motions/Breath Dere1.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath Dere2.mtn","path":"live2d/Pio/motions/Breath Dere2.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath Dere3.mtn","path":"live2d/Pio/motions/Breath Dere3.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath1.mtn","path":"live2d/Pio/motions/Breath1.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath2.mtn","path":"live2d/Pio/motions/Breath2.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath3.mtn","path":"live2d/Pio/motions/Breath3.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath4.mtn","path":"live2d/Pio/motions/Breath4.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath5.mtn","path":"live2d/Pio/motions/Breath5.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath7.mtn","path":"live2d/Pio/motions/Breath7.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Fail.mtn","path":"live2d/Pio/motions/Fail.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Sleeping.mtn","path":"live2d/Pio/motions/Sleeping.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Success.mtn","path":"live2d/Pio/motions/Success.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Sukebei1.mtn","path":"live2d/Pio/motions/Sukebei1.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Sukebei2.mtn","path":"live2d/Pio/motions/Sukebei2.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Sukebei3.mtn","path":"live2d/Pio/motions/Sukebei3.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch Dere1.mtn","path":"live2d/Pio/motions/Touch Dere1.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch Dere2.mtn","path":"live2d/Pio/motions/Touch Dere2.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch Dere3.mtn","path":"live2d/Pio/motions/Touch Dere3.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch Dere4.mtn","path":"live2d/Pio/motions/Touch Dere4.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch Dere5.mtn","path":"live2d/Pio/motions/Touch Dere5.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch Dere6.mtn","path":"live2d/Pio/motions/Touch Dere6.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch1.mtn","path":"live2d/Pio/motions/Touch1.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch2.mtn","path":"live2d/Pio/motions/Touch2.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch3.mtn","path":"live2d/Pio/motions/Touch3.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch4.mtn","path":"live2d/Pio/motions/Touch4.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch5.mtn","path":"live2d/Pio/motions/Touch5.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch6.mtn","path":"live2d/Pio/motions/Touch6.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/WakeUp.mtn","path":"live2d/Pio/motions/WakeUp.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath Dere1.mtn","path":"live2d/Tia/motions/Breath Dere1.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath Dere2.mtn","path":"live2d/Tia/motions/Breath Dere2.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath Dere3.mtn","path":"live2d/Tia/motions/Breath Dere3.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath1.mtn","path":"live2d/Tia/motions/Breath1.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath2.mtn","path":"live2d/Tia/motions/Breath2.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath3.mtn","path":"live2d/Tia/motions/Breath3.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath4.mtn","path":"live2d/Tia/motions/Breath4.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath5.mtn","path":"live2d/Tia/motions/Breath5.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath6.mtn","path":"live2d/Tia/motions/Breath6.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath7.mtn","path":"live2d/Tia/motions/Breath7.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath8.mtn","path":"live2d/Tia/motions/Breath8.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath9.mtn","path":"live2d/Tia/motions/Breath9.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Fail.mtn","path":"live2d/Tia/motions/Fail.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Sleeping.mtn","path":"live2d/Tia/motions/Sleeping.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Success.mtn","path":"live2d/Tia/motions/Success.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Sukebei1.mtn","path":"live2d/Tia/motions/Sukebei1.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Sukebei2.mtn","path":"live2d/Tia/motions/Sukebei2.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Sukebei3.mtn","path":"live2d/Tia/motions/Sukebei3.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch Dere1.mtn","path":"live2d/Tia/motions/Touch Dere1.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch Dere2.mtn","path":"live2d/Tia/motions/Touch Dere2.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch Dere3.mtn","path":"live2d/Tia/motions/Touch Dere3.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch Dere4.mtn","path":"live2d/Tia/motions/Touch Dere4.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch Dere5.mtn","path":"live2d/Tia/motions/Touch Dere5.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch Dere6.mtn","path":"live2d/Tia/motions/Touch Dere6.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch1.mtn","path":"live2d/Tia/motions/Touch1.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch2.mtn","path":"live2d/Tia/motions/Touch2.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch3.mtn","path":"live2d/Tia/motions/Touch3.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch4.mtn","path":"live2d/Tia/motions/Touch4.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch5.mtn","path":"live2d/Tia/motions/Touch5.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch6.mtn","path":"live2d/Tia/motions/Touch6.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/WakeUp.mtn","path":"live2d/Tia/motions/WakeUp.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/HELP-US-OUT.txt","path":"live2d/css/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/bower.json","path":"live2d/css/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-brands-400.ttf","path":"lib/font-awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff","path":"lib/font-awesome/webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff","path":"lib/font-awesome/webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath6.mtn","path":"live2d/Pio/motions/Breath6.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath8.mtn","path":"live2d/Pio/motions/Breath8.mtn","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/images/tmpImage/logo.png","path":"images/tmpImage/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-regular-400.svg","path":"lib/font-awesome/webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-solid-900.eot","path":"lib/font-awesome/webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/css/font-awesome.css","path":"live2d/css/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/css/font-awesome.css.map","path":"live2d/css/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/css/font-awesome.min.css","path":"live2d/css/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-brands-400.eot","path":"lib/font-awesome/webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-solid-900.ttf","path":"lib/font-awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/fonts/FontAwesome.otf","path":"live2d/css/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/fonts/fontawesome-webfont.eot","path":"live2d/css/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/fonts/fontawesome-webfont.woff","path":"live2d/css/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/fonts/fontawesome-webfont.woff2","path":"live2d/css/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGL-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGM-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGM-Italic.ttf","path":"lib/meslo-LG/MesloLGM-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGS-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGS-Italic.ttf","path":"lib/meslo-LG/MesloLGS-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/fonts/fontawesome-webfont.ttf","path":"live2d/css/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGL-Regular.ttf","path":"lib/meslo-LG/MesloLGL-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGL-Italic.ttf","path":"lib/meslo-LG/MesloLGL-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGM-Bold.ttf","path":"lib/meslo-LG/MesloLGM-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGS-Bold.ttf","path":"lib/meslo-LG/MesloLGS-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGS-Regular.ttf","path":"lib/meslo-LG/MesloLGS-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/textures/jersey-costume-blue.png","path":"live2d/Tia/textures/jersey-costume-blue.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGL-Bold.ttf","path":"lib/meslo-LG/MesloLGL-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/textures/pajamas-costume.png","path":"live2d/Pio/textures/pajamas-costume.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/textures/default-costume.png","path":"live2d/Tia/textures/default-costume.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/textures/pajamas-costume-green.png","path":"live2d/Tia/textures/pajamas-costume-green.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGM-Regular.ttf","path":"lib/meslo-LG/MesloLGM-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/fonts/fontawesome-webfont.svg","path":"live2d/css/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/textures/school-costume.png","path":"live2d/Pio/textures/school-costume.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-solid-900.svg","path":"lib/font-awesome/webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/textures/default-costume.png","path":"live2d/Pio/textures/default-costume.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-brands-400.svg","path":"lib/font-awesome/webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-cactus/source/images/tmpImage/使用Rufus创造U盘启动盘.JPG","path":"images/tmpImage/使用Rufus创造U盘启动盘.JPG","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"42be8cd38e581ba629ba9d238f14851fe8bc24b0","modified":1556612868000},{"_id":"themes/hexo-theme-cactus/.DS_Store","hash":"a803879e930c3cd399f72b6cffec384d26a783d1","modified":1556613403000},{"_id":"themes/hexo-theme-cactus/.jshintrc","hash":"2548bd6ce44422edc7e6f9f68061ab47f26c4f57","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/.stylintrc","hash":"eb5f48e83657928cb0cbee031373b2cd36ca0083","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/LICENSE","hash":"346ece39a983b0e7858c11f785cd846cef9eb875","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/README.md","hash":"859d11941c46be4f7b4a6d62297ccbeb4f732bc9","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/_config.yml","hash":"0b9ab2dbb4145424f67cfbaec45c5c32d1d8a2d2","modified":1556110844000},{"_id":"themes/hexo-theme-cactus/gulpfile.js","hash":"2bae290993507026a509665ee5a5326b616f8d68","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/package.json","hash":"5bbdbc429e9d46acf97baf7ac5654edde0781064","modified":1556079966000},{"_id":"source/_posts/Servlet的总结.md","hash":"95ee0ec8e109606e21f0c7dbb76908d460129d3d","modified":1556162229000},{"_id":"source/_posts/hexo-next主题自定义css格式切换.md","hash":"27eed669528305db2d26b5dfae84fe737c0e98f6","modified":1556162229000},{"_id":"source/_posts/hexo博客多环境同步使用.md","hash":"60d72e2369189dcc28ecf0f8bc821a251dfad5c3","modified":1556592553000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1556527979000},{"_id":"source/_posts/使用JavaSeurity进行数字签名-一.md","hash":"31bbf2b098a547067285329dff7a96d32bb896cc","modified":1556162229000},{"_id":"source/_posts/2017俺の年终总结.md","hash":"944cd443b75c5012745fe1e71bc4fbfc1d5200af","modified":1556162229000},{"_id":"source/_posts/在我的双硬盘windows电脑上安装ubuntu18-04-Desktop-LTS.md","hash":"77c5fc24b9a62fd8fce7ea92c0b0978db2c3181c","modified":1556629427000},{"_id":"source/_posts/使用JavaSeurity进行数字签名-二.md","hash":"fd2e7445eead0a6177c54a47903bf9eb069cbcbb","modified":1556162229000},{"_id":"source/_posts/2019我的个人电脑机械硬盘问题引发的故事.md","hash":"d94fbec5a980363d6d0c218f4b43faf6ec3b68c7","modified":1556162229000},{"_id":"source/_posts/我的字符编码总结.md","hash":"f2481f91ff9527cc0ba04135d7bb9ec5145d4f9f","modified":1556162229000},{"_id":"source/_posts/大学的日子-二.md","hash":"c95f8ba7b4ddde91d0437b312750559c7a6c9e5f","modified":1556162229000},{"_id":"source/_posts/大学的日子-一.md","hash":"71048fc9ee2ae72ac21c5b23930dc00001be50e5","modified":1556162229000},{"_id":"source/_posts/hexo备份之路.md","hash":"18c48f247c27e559ea208323467f9226cbe9e0aa","modified":1556164194000},{"_id":"source/_posts/我的恋爱文字冒险游戏答卷.md","hash":"2ea24050778557ccd4a687fe8dbc5a1ee2cec894","modified":1556162229000},{"_id":"source/_posts/自由软件许可证杂谈.md","hash":"ea79f91f97ad138fd2aea3f69d6027b6c6b83f63","modified":1556162229000},{"_id":"source/_posts/踩坑的Bug总集.md","hash":"f1d1133b2120c8c2ef9acfa98cd44a4c6a7af265","modified":1556162229000},{"_id":"source/about/index.md","hash":"f8a4da2ef3255c21a4a08487ae2e392af0b535ad","modified":1556162229000},{"_id":"source/categories/index.md","hash":"aab4b717fb7fec3b7dfb17fe36307b2927344561","modified":1556162229000},{"_id":"source/search/index.md","hash":"fd2a28c7c8f0c55b7664771aec2b6d7ea399e197","modified":1556162229000},{"_id":"source/tags/index.md","hash":"bd525fa3256799710d0ec661ebc7fdeef009efb4","modified":1556162229000},{"_id":"themes/hexo-theme-cactus/languages/ca.yml","hash":"b79dd2c21dc6697c635e92db1f661a4b8d5d2305","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/languages/en.yml","hash":"ea91a271db1a49386f97955ed72b2a668e2aea5e","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/languages/es.yml","hash":"2b1fc8b0d636123e9ee39017fa20053bd1913a5a","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/languages/fa.yml","hash":"63f32e50953af1c4bd0308a4fca5862b5287c2cb","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/languages/fr.yml","hash":"4fea266d3c522903f3eee4fffee6e66c44775005","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/languages/it.yml","hash":"62800bcae1f2d2454f87f4bcf4d7593848424f61","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/languages/nl.yml","hash":"ac0573352ad2c737a7686bcca498b985e7bd6447","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/languages/pl.yml","hash":"8a2d6dc874d86c38d42c2c861c39590647b5d536","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/languages/pt-br.yml","hash":"4859aba788a050c2d5d0b997693b0c8c24b349f7","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/languages/ru.yml","hash":"81b57fcd1977ef534f4bf303dbc1b4710cc7f057","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/languages/tr.yml","hash":"2702914007e6bade9d6861078c0e179ac05bf48c","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/languages/vi.yml","hash":"f84893c3ec3e45875c90069e14b17ed3016ed973","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/languages/zh-TW.yml","hash":"2f4e050c9b35a67f4a7278cec3a949533c2ac16a","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/languages/zh-CN.yml","hash":"ca5582329d9721d58fe8504725108769080e9993","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/.DS_Store","hash":"3b7052f5f6fe23f8dde58a035a3df736174492dc","modified":1556612855000},{"_id":"themes/hexo-theme-cactus/layout/archive.ejs","hash":"53de8817e37be01b3ba8fa5ca31b9cafa2f3c011","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/index.ejs","hash":"c53484094a7c30ab82b0ea984404157ab9711e71","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/layout.ejs","hash":"bbf937d07a705ca88cdeab5507bd9cdbf37e7971","modified":1556106551000},{"_id":"themes/hexo-theme-cactus/layout/page.ejs","hash":"c5465d5315a7544aa466b01fd8cfb62917a8bb1d","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/post.ejs","hash":"a7d164ce888a60cd3eddd9c04bc6762428fa66bb","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/scripts/merge-configs.js","hash":"2048c3415d96b17b9d84aa44bc0c25f1210525f8","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/scripts/meta.js","hash":"fa6055a39851c9953d033e70c1614547b94dce60","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/scripts/page_title.js","hash":"fa662dbdb82779af1b95e35ed7ccdf4866a53dee","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/scripts/thumbnail.js","hash":"df8829fd8c3119650037eba5ec11bdce06acff9d","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/CNAME","hash":"caffe4d914002a4f50e2764448d4e29c48e9a0e5","modified":1476112363000},{"_id":"themes/hexo-theme-cactus/source/.DS_Store","hash":"06b5fe8b6ccca6fafd2a7f9edccdbb05c0f50194","modified":1556613403000},{"_id":"themes/hexo-theme-cactus/languages/default.yml","hash":"ea91a271db1a49386f97955ed72b2a668e2aea5e","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/_partial/footer.ejs","hash":"b66f21638b5b917905d9a97bb340914c7c2f987b","modified":1556166154000},{"_id":"themes/hexo-theme-cactus/layout/_partial/.DS_Store","hash":"0af4458db0eb004a5a78c033931219532df46e65","modified":1556092929000},{"_id":"themes/hexo-theme-cactus/layout/_partial/comments.ejs","hash":"4cf8d0059e5f8bc8ae1dd1a426293583fd398052","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/_partial/head.ejs","hash":"753dcb513c6f21f6f46e673942c7261cf50da886","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/_partial/header.ejs","hash":"9b2b7d6e9ab514107adf408c7ec8530fd612b3d5","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/_partial/pagination.ejs","hash":"23bf862b3b8a3cd831850504d9b5a24d21b005e7","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/_partial/scripts.ejs","hash":"64c5b7920dc36117573d89bb8dafe4be4fa28f04","modified":1556090906000},{"_id":"themes/hexo-theme-cactus/layout/_partial/search.ejs","hash":"8b4bf9cf5db0ce762a31fc3baae0f2fc004bece4","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/_partial/styles.ejs","hash":"d983e8203c05a813032aee6733f79be5f415b03d","modified":1556093920000},{"_id":"themes/hexo-theme-cactus/source/css/.DS_Store","hash":"f175c0b73343e27f62de5643ec33ba6772df1999","modified":1556109087000},{"_id":"themes/hexo-theme-cactus/source/css/_extend.styl","hash":"2c8751d132e62f5f068dc3a184d160670737ba1f","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_fonts.styl","hash":"354809b5a64e8a47a66c66fd1a28ac597c1460a6","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_mixins.styl","hash":"1a9e309523df9685e8d088dcff0a809c58e2c392","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_variables.styl","hash":"02079fb71b7d1c01d15fa512a1948ad4cbb416b5","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/rtl.styl","hash":"98355abe9ef3a398a5b4cb40d3d33bf86ac8d1d4","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_util.styl","hash":"2bfeb2e2605dd5235693b00c71a212646d2e0410","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/style.styl","hash":"d9be82f7e7145cde78e04183afc8ff13d6a16059","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/images/.DS_Store","hash":"923520cf581c0ff7bfc82e0e550ea8370292371d","modified":1556613413000},{"_id":"themes/hexo-theme-cactus/source/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/js/main.js","hash":"584c5a69ac81a483a1c4377a2e2cf326c2795e7b","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/js/search.js","hash":"a74d0c601f820160825a2e4ad13618074d714933","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/.DS_Store","hash":"dcfdb711c0e929e609ecea57a89ccb09d4808eea","modified":1556093908000},{"_id":"themes/hexo-theme-cactus/source/live2d/.DS_Store","hash":"0b81dc4066ac964fbd20a401306912c80bd86b02","modified":1556105943000},{"_id":"themes/hexo-theme-cactus/source/live2d/waifu-tips.json","hash":"82ba64b27020a63c4859ff0b2a8b002f46819fda","modified":1556094759000},{"_id":"themes/hexo-theme-cactus/source/live2d/waifu-tips.js","hash":"71285609066eb822275d01b60ceea0f09f51eab5","modified":1556105875000},{"_id":"themes/hexo-theme-cactus/layout/_partial/post/actions_desktop.ejs","hash":"38aadd1ed890303dde582b722486138afee09b0a","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/_partial/post/actions_mobile.ejs","hash":"79b234ff3c264e66b2e71c819228e62bf92b48e4","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/_partial/post/category.ejs","hash":"b5bfa049f17868fb09d9d2a7e1d5279fa0381d37","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/_partial/post/date.ejs","hash":"6f2d1aa9562df343b797d25705f1945323c465fb","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/_partial/post/gallery.ejs","hash":"9aecd8908e8a684f33dc20c02497c0f1774137c7","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/_partial/post/share.ejs","hash":"847a400e79b775246ca9067e40c3f104d571413d","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/_partial/post/tag.ejs","hash":"e08fae30da060f49c087f6c121868b08eb55c795","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/layout/_partial/post/title.ejs","hash":"a060f1c6e3718494a6b1d0e1981ea0bf4e549828","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_colors/classic.styl","hash":"0f0ec41a4165814ce69688425d5ac4d701b7cc70","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_colors/dark.styl","hash":"9c9655b42b85f754b8a573a1d4634c23c680e1bf","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_colors/light.styl","hash":"d09f781cb02394850737b3a9efc6693307d5bf09","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_colors/white.styl","hash":"2b25ad24573bded8b42f9d80112eab9fadbed1a5","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/agate.styl","hash":"53027913ed8d4f75ac3e49e76aad824f0df62da3","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/androidstudio.styl","hash":"2af0861725f97f0ee2ded67c3d2d4548c62b2d16","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/arta.styl","hash":"b3e81e3e694ceb8deed178adb8b91013c5120e30","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-cave-dark.styl","hash":"ce63dd8548688d88254405eedfa75b1d7c82449e","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-dune-dark.styl","hash":"c196ff0ee064af0e507823694ae39020addfc280","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-estuary-dark.styl","hash":"0bb16a4eff93688f40787abc2f9e56e7d5cc93e7","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-forest-dark.styl","hash":"effbc5d75fa87203c847039869c22031b40d5b7d","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-heath-dark.styl","hash":"9a2e9a1d0a01bbdf158560c3ed1c134e098b2c68","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-lakeside-dark.styl","hash":"10ee3882fca7b97a37bd309d2d35fce9868647bb","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-plateau-dark.styl","hash":"84c80e6f67f62fce958d25817c277d2360272617","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-savanna-dark.styl","hash":"e32c1c70def8060fce5e790979a126da650ac642","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-seaside-dark.styl","hash":"2edf385215bbe1985b1a10106525d362667d28c2","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"538a14321193cd8abf2ddc484306631e54149ffb","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/codepen-embed.styl","hash":"8b7b34484f76a6c2c3b1a9e49abb9b382f439ae8","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/dark.styl","hash":"f5e6e75958de59e87fc6be3a1668e870e20bc836","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/darkula.styl","hash":"9717efa9194837ba3fb4d762997d33075dcf8bfa","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/far.styl","hash":"aaac3028f5e33123cd123a583cddc9290c45ec8e","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/gruvbox-dark.styl","hash":"76b744c14fd5600bea64731c05df97c2df75523f","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/hopscotch.styl","hash":"1378a6bc67a32c0cbff72ab771268b53f9aa586d","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/hybrid.styl","hash":"b8eb5c69d12f2ee5ebc50265ae271699d7f1a8d3","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/ir-black.styl","hash":"53e5d74326a4527b92272bbd6946d4fec92720e8","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/kimbie.styl","hash":"51b889ca7c6fe178cfbbe28d875a6ea427184441","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/monokai-sublime.styl","hash":"c385b11345894be7e6ce3c5f08663e199933b8e4","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/monokai.styl","hash":"f87be027848ea6bee623a08ad1e17b2f5b7937ee","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/obsidian.styl","hash":"199e28326be8590883f0813ebbd54fcfaa4750fd","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/paraiso.styl","hash":"75f181eece6b71d033ea0c8d6cf00ae7efb9e29b","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/pojoaque.styl","hash":"4e7b6b046b8575ac749f6aec4e953a62ada27a36","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/railscasts.styl","hash":"b6674db9210e0c4444e4835fff2d1361f3ebd64c","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/rainbow.styl","hash":"c0cf97aae3e10fdcd10414547a711c9effbc39b8","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/solarized-dark.styl","hash":"90c9da5aa594383697e5b18892a7f95beb053f55","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/sunburst.styl","hash":"af3eec0fd56151e55bbd49c31b151f36717611d8","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/tomorrow-night-blue.styl","hash":"f24c17d0ab815dcfaab3438cb9fe2ab4839f5e0d","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/tomorrow-night-bright.styl","hash":"7674fecb6d27350727dc0d2dc93bc018382ebbd0","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/tomorrow-night-eighties.styl","hash":"28d751075ebabf7d0327a36f725076fe82fdf626","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/tomorrow-night.styl","hash":"16ba09b2db501e4e3e2e7d62595d9bf935bf27c4","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_highlight/zenburn.styl","hash":"68ff9332ccc03f9389b15b713415cde016f8088f","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_partial/archive.styl","hash":"ef8fc52337c4c7b010cad7c427cb78009b30f9d8","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_partial/article.styl","hash":"7ff5b6a28dc3f2cd4ebfc4f5351054a18800bf96","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_partial/categories.styl","hash":"a43f00e61b3507f130b8a3f8108a4eeca147c2a0","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_partial/comments.styl","hash":"1e90f1fb9d4c155df518cacb5a537e9de9c042c1","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_partial/footer.styl","hash":"d9b13e402808175dc90761cc4fdfe3d4808034f8","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_partial/header.styl","hash":"662667942cc9a2caf55caa84a0fc73617d0c3aa4","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_partial/index.styl","hash":"59c99f4ea3a73bf47ce030df166c5e33d5de31fb","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_partial/pagination.styl","hash":"950bf517bbe7adb9a9aa4eb5ddec74ffc7598787","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_partial/search.styl","hash":"159be002780c62a77f46947cf854a7342fba24f4","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_partial/tags.styl","hash":"d571d5c7c960300d29c5f0ec3fe1140322ecd6b3","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/.DS_Store","hash":"16247f7786d424b3d6fb6b7ffeb3e59a49957b07","modified":1556093479000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Black.woff","hash":"37443d0040f0d7af381c955e4c15919a15d0349e","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Black.woff2","hash":"0a257c8b60e0f20802c1dc8daeed2d3cb0d44f17","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Bold.woff","hash":"df15fd1e74b6f4a50bea57e2b44d9627f38495b5","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Bold.woff2","hash":"62447a951d48b21c4696ae72df4bc4adef636e26","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Light.woff","hash":"32ae5c0d1d5943c8bb8e0f6ab07c3269c6f8b8a8","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Light.woff2","hash":"ef07a250766fea840c1049e67c0405d9216ee0a8","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Medium.woff","hash":"f5653059b2a5929516e4aab02329a978600b9b67","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Medium.woff2","hash":"668400ae92700965f03f2371faaee0ab8c8347c3","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Thin.woff","hash":"ad4d46a99a1daf6353c86c79ac3a2b030213859c","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Thin.woff2","hash":"c3be79b553ec394db71268d604b1d29183b867dc","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir.woff","hash":"bbee70033f0f5882e9869e417b69c6a38f56f187","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/font-face.css","hash":"8f2bf6b59ae1f2ed4c2fead6cea4b8314fcf62e5","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir.woff2","hash":"30ce165216db078951a690a6ad665b9b78f5dd81","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/.DS_Store","hash":"7a6f14f0b39a2dfa5c22f325ad31441e5fd6fa50","modified":1556096869000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/model.json","hash":"1b2b2c255a575c769d7b6f3bf1335b1e6fd11248","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/model.json","hash":"6ec2b9494b70e08417217a41f33f1900047e57e6","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/.DS_Store","hash":"9f596ed1cfd553fafffc5d6947e5de801b478d6f","modified":1556097713000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/waifu.css","hash":"52b669e381afb2e8d20840498c9bfd611abc79a7","modified":1556103737000},{"_id":"themes/hexo-theme-cactus/source/live2d/html/live2d.html","hash":"de39ff9342e14f0c19726dfb9db5e1b8bcb65836","modified":1556105965000},{"_id":"themes/hexo-theme-cactus/source/live2d/live2d.js","hash":"86dcec89139bf72a8be0a17feaeca631721ffee7","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/images/logo.png","hash":"0e3029251dfda26adee2761f71377297e8c26871","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/jquery/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Black.eot","hash":"13d026ff857c853cbd0dc519b6e58669db309441","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Black.ttf","hash":"594dc3344ad14903c247615427d1009709f0f5a4","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Bold.eot","hash":"f76ec625e15522ff60d21f7a9a3b71c65bc27556","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Bold.ttf","hash":"2e6c9df9f775373fb1988ae8529aa8f05313dae6","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Light.eot","hash":"3edffd7bb61eee8cd46b57225f9f9e5264e3362b","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Light.ttf","hash":"9f1e2934098a6a4a7c5584c8f3fa24a707070da3","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Medium.eot","hash":"1f5a73db7947ef22c8a2bb19d6449b80496c03c4","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Medium.ttf","hash":"295f7e02c9b157e7ea63ad09613b00ceab85c5cd","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Thin.eot","hash":"08e1503d1181188690fd9c81860d6c890c1465f6","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir-Thin.ttf","hash":"a6aa450ee6e0f85786474ca6b04827ef97e81af4","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir.eot","hash":"31a9219c25fe1991fb745ec8dbbcf45c6094a702","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/vazir-font/Vazir.ttf","hash":"f22b219824026e490a581ddb3b36b07997dff0e3","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/model.moc","hash":"0f883ea279bda9133028124003b11c7f3edf20bb","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/model.moc","hash":"ec4becdfb64a722a878aa69ed8429043402f7259","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/css/_partial/post/actions_desktop.styl","hash":"4ef72ea70f7c840b2843bf7717aaafae3b6fc241","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/css/_partial/post/actions_mobile.styl","hash":"0d2966c1d870392476864af8ee3ba312ba30cb82","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/images/tmpImage/安装前磁盘分区情况.JPG","hash":"719a82315e44e31dbf2ae007065a0a206b317fed","modified":1556613666000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/css/all.min.css","hash":"cf1a3fd771900af34f2af22142beecfb47367548","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-regular-400.eot","hash":"42ff503f20e97503cef8e5b2ec10ae07699d7c01","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"c140085833a38abec6b7df99d4ccac93eb266031","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff","hash":"7b3f44b4d3028f3c87ddf0f4bd62511c9bf4a87e","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"9784edb76f8a2ed595ea4bf74d46cda4eff3b303","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"92da6e3c7121e21cdfde25ef08797a3937a683e1","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/justified-gallery/css/justifiedGallery.min.css","hash":"92bb6e468a1db7fbd99ccb960e15e28572254263","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath Dere1.mtn","hash":"11f7cbf6068937965aeda4a3ebbce3fba58a0495","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath Dere2.mtn","hash":"b1b280ba08365d986a219f843601d478802c84af","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath Dere3.mtn","hash":"421f00d9b263eb1ba5ae7744d3e36b874f3574cd","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath1.mtn","hash":"8b9830960269c57540f235550b662bd8bb2eb9e7","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath2.mtn","hash":"2f1d687ac155865af6176d77e0ec6f4a4d29071b","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath3.mtn","hash":"848c2740a0b824a53c592c8052ce06453b1ca346","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath4.mtn","hash":"e046b214762c0cf59d41c5a794aa0f48ebbfadab","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath5.mtn","hash":"df45551eb085bd60ec0da2aa053bf50d362f8f98","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath7.mtn","hash":"cbab9298b360f3548e2365813ec0ed95ab111135","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Fail.mtn","hash":"ee758e7fc4f7080de4576b05ad685834c995ac47","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Sleeping.mtn","hash":"14371217f96d56b7920c89e8336aa19d2dc1b457","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Success.mtn","hash":"fb2c6350010c0841598d645e354fb8f301e21593","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Sukebei1.mtn","hash":"7baa2802152d82bba7eb0edb31b0ddc054d85180","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Sukebei2.mtn","hash":"d684cbcc31e794dae0cecd6d940167ae372f946f","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Sukebei3.mtn","hash":"deb7994cc055443e6287b0e983351efa46129326","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch Dere1.mtn","hash":"408960c3b98c4d43c30e33cd3d8c34a24b96fdc5","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch Dere2.mtn","hash":"a6e1c2437d0280b59d9f937fca7e5957a0fbb9d2","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch Dere3.mtn","hash":"9f4f5ed6831fb262afbabc9536c87262fa10c471","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch Dere4.mtn","hash":"e556a3618d394848488b056561d7219b8dd6b086","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch Dere5.mtn","hash":"340ee5d25c44de3d899e5d42e93a140207e820e2","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch Dere6.mtn","hash":"1dbc118605f33ec4e0e82dee60499d69ef07a741","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch1.mtn","hash":"9089e535269648f14d45edee01d108cd9c93fcf6","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch2.mtn","hash":"b6c6c3022aae612d4f0ce7cd59f99db1f6241a43","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch3.mtn","hash":"ccf97daf9208ea25865fc409bfdc713be31e41f7","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch4.mtn","hash":"21925fa7aac4003a10a7cd46006cfa9b13374ff9","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch5.mtn","hash":"19bd0390dc69b28437a908373895dccf2bb8d7eb","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Touch6.mtn","hash":"3bb0a1a1fe5dc13146fb4347f3b408f496280898","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/WakeUp.mtn","hash":"8778f42f1ce509ca2fc4a385db96a4976f44647e","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath Dere1.mtn","hash":"11f7cbf6068937965aeda4a3ebbce3fba58a0495","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath Dere2.mtn","hash":"b1b280ba08365d986a219f843601d478802c84af","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath Dere3.mtn","hash":"421f00d9b263eb1ba5ae7744d3e36b874f3574cd","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath1.mtn","hash":"e9fe2ad68ba66ae2cbf8d2f4662bae9b3144b1cc","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath2.mtn","hash":"1c1b35419e237327e5d6f7187b7738d2b853fa92","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath3.mtn","hash":"848c2740a0b824a53c592c8052ce06453b1ca346","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath4.mtn","hash":"c291bd06b3b072fe22a790d3412358ec003e7aba","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath5.mtn","hash":"df45551eb085bd60ec0da2aa053bf50d362f8f98","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath6.mtn","hash":"4394ca06d4791c76e4fa0c913e3bf0b08883c5e9","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath7.mtn","hash":"1cfccb24f92a073e9f644caaa66d4f642695d873","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath8.mtn","hash":"d2b8adfbcaf107f617cd9401cf7cbac266b921c7","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Breath9.mtn","hash":"e18ba38b62b417dcb3e2df7be15ccb9c487788d6","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Fail.mtn","hash":"2282256817cf3df568dc99e0b26c78e02ed6aa69","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Sleeping.mtn","hash":"7cd4c2a961eab44f9cac8cf49de96850c5dbd20d","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Success.mtn","hash":"80bbe4a27282dfe30edf0944ddba314f8d1600ac","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Sukebei1.mtn","hash":"c48e9d14f9e040f93d0dbd2996be2986d319da70","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Sukebei2.mtn","hash":"d684cbcc31e794dae0cecd6d940167ae372f946f","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Sukebei3.mtn","hash":"deb7994cc055443e6287b0e983351efa46129326","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch Dere1.mtn","hash":"408960c3b98c4d43c30e33cd3d8c34a24b96fdc5","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch Dere2.mtn","hash":"a6e1c2437d0280b59d9f937fca7e5957a0fbb9d2","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch Dere3.mtn","hash":"e664a4d0dc4003bceb6c65e7df1ceecfb538da8c","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch Dere4.mtn","hash":"e556a3618d394848488b056561d7219b8dd6b086","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch Dere5.mtn","hash":"2195fa2b5aabe06aa110730477e307cee88333ba","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch Dere6.mtn","hash":"118498c1bad58056ac926d6533d6af68ca03f0f5","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch1.mtn","hash":"9089e535269648f14d45edee01d108cd9c93fcf6","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch2.mtn","hash":"2c07642b2feb01472ea5381d9256e003703b1c40","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch3.mtn","hash":"ccf97daf9208ea25865fc409bfdc713be31e41f7","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch4.mtn","hash":"21925fa7aac4003a10a7cd46006cfa9b13374ff9","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch5.mtn","hash":"19bd0390dc69b28437a908373895dccf2bb8d7eb","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/Touch6.mtn","hash":"3bb0a1a1fe5dc13146fb4347f3b408f496280898","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/motions/WakeUp.mtn","hash":"99508a5176a2d1864fa1088f46b36d39eb9cd76c","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1474979561000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1474979561000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1474979561000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1474979561000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1474979561000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/.DS_Store","hash":"19d95472db341f9af3bdd81e24b25d091a271682","modified":1556097370000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"19e302760e39e25a5f8d90d6cd0164ef6cd74f8c","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff","hash":"f9d835a0f9248b1bb33d66968e87c4a50103ed8d","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"d902f8db3e021155f177f698a252fb98d6e61768","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff","hash":"80d33a73cbb60e206ef6f5c898988641576c7dda","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath6.mtn","hash":"222e9801e2394950398c4904897b5ad89244f429","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/motions/Breath8.mtn","hash":"366b357fb26bcc39ed3f6d397f280d0e6381be0c","modified":1556051899000},{"_id":"themes/hexo-theme-cactus/source/images/tmpImage/logo.png","hash":"0e3029251dfda26adee2761f71377297e8c26871","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-regular-400.svg","hash":"33e86c0ad6fb9c5c0c8c2af4cb2d790c6b14a8aa","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-solid-900.eot","hash":"10740942ec6b3f4985529d343402d0bf32f9f847","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1474979561000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1474979561000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1474979561000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-brands-400.eot","hash":"644ece8263d2f96b087eebf7f6d4e309e5898eb5","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"c445864a9646948e0d7ff44930ad732ee61427d8","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1474979561000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1474979561000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1474979561000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1474979561000},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"b7d24ab1e4fad720f31a2b0cca1904ce1740d846","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"b542b9591fbf33925d93f0695b6e123a9f0cfd43","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"93ebc5098cf57a32b7b8d297681f31692c09bdfa","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"926035f0156cccf1b0ca507347f39bf9c510f51e","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"9d757cc9f928fc83b2133283dd639c12b11d94ad","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1474979561000},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"6c090d6bff3928fbf8a5f4104e58ed7f421aea7c","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"9a23c6898b0943bd3d96c04df9a0f66e919451d8","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"58be4b7760e9a84daa81929d046f9a15c4fd1c1a","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"f9918fb93d6ab6850f5d38069a999c311af78816","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"de559f8d70d5b1ab2810597bfd0b1b9506f3ef01","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/textures/jersey-costume-blue.png","hash":"55d7108d2da804ed87d61062a9182f86ba7d8ae1","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"34f7db59f1d023294e69976aa20b7d52b86165a4","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/textures/pajamas-costume.png","hash":"a0bf4a08335eeee7fb68a372c91d91372c8d08ec","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/textures/default-costume.png","hash":"cdd979265d0b854dd8679119d73c2eea30e0e37d","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/live2d/Tia/textures/pajamas-costume-green.png","hash":"0bf40e12faee07faff7d33c799404c6fc4c327ff","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"20ce1fc7ae1254558ca044ae48283faaa58897e5","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/live2d/css/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1474979561000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/textures/school-costume.png","hash":"77f79821d879f5027c950de3adedf5b8fb4b2904","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-solid-900.svg","hash":"ed6c1ed8f24df909f40fe5e5c652d7ff9570c821","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/live2d/Pio/textures/default-costume.png","hash":"badeb207fa62b28ae3b4cc8a3e9ad06d873f4808","modified":1556051900000},{"_id":"themes/hexo-theme-cactus/source/lib/font-awesome/webfonts/fa-brands-400.svg","hash":"b0bb9e6ac7709206b9510f1718516d89aead5b21","modified":1556079966000},{"_id":"themes/hexo-theme-cactus/source/images/tmpImage/使用Rufus创造U盘启动盘.JPG","hash":"5b834722337e0b264454749d9145486716719e43","modified":1556616723000}],"Category":[{"name":"IT","_id":"cjv3k3jua0004lk9vdnqxsegd"},{"name":"生活","_id":"cjv3k3jup000hlk9v60xer5wa"},{"name":"计算机","_id":"cjv3k3juw000ylk9vakpaifhf"},{"name":"游戏","_id":"cjv3k3jw8001nlk9vpvjs4th9"}],"Data":[],"Page":[{"title":"about","date":"2019-04-24T04:46:21.000Z","_content":"\n## 网名\nzazalu，因大学时玩游戏觉得取名十分的麻烦，随后任意敲打了键盘后，屏幕上出现了zazalu的字样，觉得十分简单好记，遂用到今日(2019.04.24)\n\n## 来历\n浙江绍兴上虞人，高中就读于春晖中学，大学就读于西安电子科技大学，目前从事Java开发工作\n\n## 学习\n自小是一个朴实无华，死读书的人，学习能力中等，不讨厌学习，但是也不喜欢一直不停的学习。学习欲望从高中的强烈，到大学的低迷，最后再到工作期间的强烈。学习的内容，从高中的语文数学等，到大学的IT技术，最后到生活中的所有能学习的能化为我自身力量的知识。\n一直想自学日语，但因自控能力太差，休息时间全拿去娱乐，遂目前日语水平只停留在能听懂日常用语，看不懂日语。\n不拒绝除java以外的IT技术学习，其实有段时间很沉迷前端的vue.js\n\n## 计算机\n从小因经常看哥哥们玩电脑，自幼开始就对电脑有好感，小时候不怎么外出和小伙伴一起玩，而是经常宅在家里不停捣鼓windows电脑，高中时候就特别喜欢上计算机课，当时觉得课上教的东西对我来说非常简单。高中毕业后第一志愿填了西安电子科技大学的软件工程专业，从此开始了IT的学习道路。大学期间因自控能力较低，大一大二基本都过着娱乐为主的生活，大三开始专注学业，放弃了windows系统，转投了OS X，有效减少了我的游戏时间，毕业后总算混了口饭吃，也开始不断提升自我，直到今日\n\n## 目标\n最终目标是能够在杭州站稳脚步，IT行业特别是Java行业，渐进饱和，再由自己能力欠佳，没能进入鹅厂，阿里巴巴等大厂，目前对自己的未来存在较大的迷茫，不过唯有努力生活，才能笑到最后\n\n## 心态\n有一颗乐观向上的积极心态，觉得只是还活着就是一种快乐。喜欢名言\"留有青山在不怕没柴烧\"\n\n## 爱好\n是一个彻头彻底的ACG的爱好者，虽然没有狂热到买手办，买周边，也没有逛过漫展，但是提到ACG相关话题，我就非常健谈，也非常欢迎ACG爱好者加我QQ做个ACG同好网友\n也非常喜欢IT，IT就像一个我始终摸不透的女人，总有新问题难倒我，并且每次克服它的时候，总能感觉它是那么的美丽动人\n目前还是非常讨厌资产阶级，认为资产阶级是限制人类想象力的存在，但是也不否认没有资产阶级的推动是没有现在的发达社会的\n\n## 联系\n手机：18767578219\nQQ：451558654\n微博：自由之翼\nTwitter：zazalu\nEmail：hejiajun1432@gmail.com; 451558654@qq.com\n\n\n\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2019-04-24 12:46:21\n---\n\n## 网名\nzazalu，因大学时玩游戏觉得取名十分的麻烦，随后任意敲打了键盘后，屏幕上出现了zazalu的字样，觉得十分简单好记，遂用到今日(2019.04.24)\n\n## 来历\n浙江绍兴上虞人，高中就读于春晖中学，大学就读于西安电子科技大学，目前从事Java开发工作\n\n## 学习\n自小是一个朴实无华，死读书的人，学习能力中等，不讨厌学习，但是也不喜欢一直不停的学习。学习欲望从高中的强烈，到大学的低迷，最后再到工作期间的强烈。学习的内容，从高中的语文数学等，到大学的IT技术，最后到生活中的所有能学习的能化为我自身力量的知识。\n一直想自学日语，但因自控能力太差，休息时间全拿去娱乐，遂目前日语水平只停留在能听懂日常用语，看不懂日语。\n不拒绝除java以外的IT技术学习，其实有段时间很沉迷前端的vue.js\n\n## 计算机\n从小因经常看哥哥们玩电脑，自幼开始就对电脑有好感，小时候不怎么外出和小伙伴一起玩，而是经常宅在家里不停捣鼓windows电脑，高中时候就特别喜欢上计算机课，当时觉得课上教的东西对我来说非常简单。高中毕业后第一志愿填了西安电子科技大学的软件工程专业，从此开始了IT的学习道路。大学期间因自控能力较低，大一大二基本都过着娱乐为主的生活，大三开始专注学业，放弃了windows系统，转投了OS X，有效减少了我的游戏时间，毕业后总算混了口饭吃，也开始不断提升自我，直到今日\n\n## 目标\n最终目标是能够在杭州站稳脚步，IT行业特别是Java行业，渐进饱和，再由自己能力欠佳，没能进入鹅厂，阿里巴巴等大厂，目前对自己的未来存在较大的迷茫，不过唯有努力生活，才能笑到最后\n\n## 心态\n有一颗乐观向上的积极心态，觉得只是还活着就是一种快乐。喜欢名言\"留有青山在不怕没柴烧\"\n\n## 爱好\n是一个彻头彻底的ACG的爱好者，虽然没有狂热到买手办，买周边，也没有逛过漫展，但是提到ACG相关话题，我就非常健谈，也非常欢迎ACG爱好者加我QQ做个ACG同好网友\n也非常喜欢IT，IT就像一个我始终摸不透的女人，总有新问题难倒我，并且每次克服它的时候，总能感觉它是那么的美丽动人\n目前还是非常讨厌资产阶级，认为资产阶级是限制人类想象力的存在，但是也不否认没有资产阶级的推动是没有现在的发达社会的\n\n## 联系\n手机：18767578219\nQQ：451558654\n微博：自由之翼\nTwitter：zazalu\nEmail：hejiajun1432@gmail.com; 451558654@qq.com\n\n\n\n","updated":"2019-04-25T03:17:09.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjv3k3ju60001lk9vqw2ne11t","content":"<h2 id=\"网名\"><a href=\"#网名\" class=\"headerlink\" title=\"网名\"></a>网名</h2><p>zazalu，因大学时玩游戏觉得取名十分的麻烦，随后任意敲打了键盘后，屏幕上出现了zazalu的字样，觉得十分简单好记，遂用到今日(2019.04.24)</p>\n<h2 id=\"来历\"><a href=\"#来历\" class=\"headerlink\" title=\"来历\"></a>来历</h2><p>浙江绍兴上虞人，高中就读于春晖中学，大学就读于西安电子科技大学，目前从事Java开发工作</p>\n<h2 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h2><p>自小是一个朴实无华，死读书的人，学习能力中等，不讨厌学习，但是也不喜欢一直不停的学习。学习欲望从高中的强烈，到大学的低迷，最后再到工作期间的强烈。学习的内容，从高中的语文数学等，到大学的IT技术，最后到生活中的所有能学习的能化为我自身力量的知识。<br>一直想自学日语，但因自控能力太差，休息时间全拿去娱乐，遂目前日语水平只停留在能听懂日常用语，看不懂日语。<br>不拒绝除java以外的IT技术学习，其实有段时间很沉迷前端的vue.js</p>\n<h2 id=\"计算机\"><a href=\"#计算机\" class=\"headerlink\" title=\"计算机\"></a>计算机</h2><p>从小因经常看哥哥们玩电脑，自幼开始就对电脑有好感，小时候不怎么外出和小伙伴一起玩，而是经常宅在家里不停捣鼓windows电脑，高中时候就特别喜欢上计算机课，当时觉得课上教的东西对我来说非常简单。高中毕业后第一志愿填了西安电子科技大学的软件工程专业，从此开始了IT的学习道路。大学期间因自控能力较低，大一大二基本都过着娱乐为主的生活，大三开始专注学业，放弃了windows系统，转投了OS X，有效减少了我的游戏时间，毕业后总算混了口饭吃，也开始不断提升自我，直到今日</p>\n<h2 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h2><p>最终目标是能够在杭州站稳脚步，IT行业特别是Java行业，渐进饱和，再由自己能力欠佳，没能进入鹅厂，阿里巴巴等大厂，目前对自己的未来存在较大的迷茫，不过唯有努力生活，才能笑到最后</p>\n<h2 id=\"心态\"><a href=\"#心态\" class=\"headerlink\" title=\"心态\"></a>心态</h2><p>有一颗乐观向上的积极心态，觉得只是还活着就是一种快乐。喜欢名言”留有青山在不怕没柴烧”</p>\n<h2 id=\"爱好\"><a href=\"#爱好\" class=\"headerlink\" title=\"爱好\"></a>爱好</h2><p>是一个彻头彻底的ACG的爱好者，虽然没有狂热到买手办，买周边，也没有逛过漫展，但是提到ACG相关话题，我就非常健谈，也非常欢迎ACG爱好者加我QQ做个ACG同好网友<br>也非常喜欢IT，IT就像一个我始终摸不透的女人，总有新问题难倒我，并且每次克服它的时候，总能感觉它是那么的美丽动人<br>目前还是非常讨厌资产阶级，认为资产阶级是限制人类想象力的存在，但是也不否认没有资产阶级的推动是没有现在的发达社会的</p>\n<h2 id=\"联系\"><a href=\"#联系\" class=\"headerlink\" title=\"联系\"></a>联系</h2><p>手机：18767578219<br>QQ：451558654<br>微博：自由之翼<br>Twitter：zazalu<br>Email：<a href=\"mailto:hejiajun1432@gmail.com\" target=\"_blank\" rel=\"noopener\">hejiajun1432@gmail.com</a>; <a href=\"mailto:451558654@qq.com\" target=\"_blank\" rel=\"noopener\">451558654@qq.com</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"网名\"><a href=\"#网名\" class=\"headerlink\" title=\"网名\"></a>网名</h2><p>zazalu，因大学时玩游戏觉得取名十分的麻烦，随后任意敲打了键盘后，屏幕上出现了zazalu的字样，觉得十分简单好记，遂用到今日(2019.04.24)</p>\n<h2 id=\"来历\"><a href=\"#来历\" class=\"headerlink\" title=\"来历\"></a>来历</h2><p>浙江绍兴上虞人，高中就读于春晖中学，大学就读于西安电子科技大学，目前从事Java开发工作</p>\n<h2 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h2><p>自小是一个朴实无华，死读书的人，学习能力中等，不讨厌学习，但是也不喜欢一直不停的学习。学习欲望从高中的强烈，到大学的低迷，最后再到工作期间的强烈。学习的内容，从高中的语文数学等，到大学的IT技术，最后到生活中的所有能学习的能化为我自身力量的知识。<br>一直想自学日语，但因自控能力太差，休息时间全拿去娱乐，遂目前日语水平只停留在能听懂日常用语，看不懂日语。<br>不拒绝除java以外的IT技术学习，其实有段时间很沉迷前端的vue.js</p>\n<h2 id=\"计算机\"><a href=\"#计算机\" class=\"headerlink\" title=\"计算机\"></a>计算机</h2><p>从小因经常看哥哥们玩电脑，自幼开始就对电脑有好感，小时候不怎么外出和小伙伴一起玩，而是经常宅在家里不停捣鼓windows电脑，高中时候就特别喜欢上计算机课，当时觉得课上教的东西对我来说非常简单。高中毕业后第一志愿填了西安电子科技大学的软件工程专业，从此开始了IT的学习道路。大学期间因自控能力较低，大一大二基本都过着娱乐为主的生活，大三开始专注学业，放弃了windows系统，转投了OS X，有效减少了我的游戏时间，毕业后总算混了口饭吃，也开始不断提升自我，直到今日</p>\n<h2 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h2><p>最终目标是能够在杭州站稳脚步，IT行业特别是Java行业，渐进饱和，再由自己能力欠佳，没能进入鹅厂，阿里巴巴等大厂，目前对自己的未来存在较大的迷茫，不过唯有努力生活，才能笑到最后</p>\n<h2 id=\"心态\"><a href=\"#心态\" class=\"headerlink\" title=\"心态\"></a>心态</h2><p>有一颗乐观向上的积极心态，觉得只是还活着就是一种快乐。喜欢名言”留有青山在不怕没柴烧”</p>\n<h2 id=\"爱好\"><a href=\"#爱好\" class=\"headerlink\" title=\"爱好\"></a>爱好</h2><p>是一个彻头彻底的ACG的爱好者，虽然没有狂热到买手办，买周边，也没有逛过漫展，但是提到ACG相关话题，我就非常健谈，也非常欢迎ACG爱好者加我QQ做个ACG同好网友<br>也非常喜欢IT，IT就像一个我始终摸不透的女人，总有新问题难倒我，并且每次克服它的时候，总能感觉它是那么的美丽动人<br>目前还是非常讨厌资产阶级，认为资产阶级是限制人类想象力的存在，但是也不否认没有资产阶级的推动是没有现在的发达社会的</p>\n<h2 id=\"联系\"><a href=\"#联系\" class=\"headerlink\" title=\"联系\"></a>联系</h2><p>手机：18767578219<br>QQ：451558654<br>微博：自由之翼<br>Twitter：zazalu<br>Email：<a href=\"mailto:hejiajun1432@gmail.com\" target=\"_blank\" rel=\"noopener\">hejiajun1432@gmail.com</a>; <a href=\"mailto:451558654@qq.com\" target=\"_blank\" rel=\"noopener\">451558654@qq.com</a></p>\n"},{"title":"categories","date":"2019-04-24T04:49:16.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-04-24 12:49:16\ntype: categories\n---\n","updated":"2019-04-25T03:17:09.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjv3k3ju90003lk9v327ukaah","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"search","date":"2019-04-24T04:43:45.000Z","type":"search","_content":"","source":"search/index.md","raw":"---\ntitle: search\ndate: 2019-04-24 12:43:45\ntype: search\n---\n","updated":"2019-04-25T03:17:09.000Z","path":"search/index.html","comments":1,"layout":"page","_id":"cjv3k3jud0007lk9vs6tl8rgn","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2019-04-24T04:47:00.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-04-24 12:47:00\ntype: \"tags\"\n---\n","updated":"2019-04-25T03:17:09.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjv3k3juf0009lk9vairevbwn","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"hexo next主题自定义css格式切换","date":"2019-04-24T06:15:52.000Z","_content":"\n当我每次想要进行自己的hexo next博客的外观变更的时候,每次都需要去修改配置文件,会非常的麻烦,而且容易忘记.所以自己稍微研究了下,做了一些bat批处理文件,用于控制博客的页面外观(css)的自动转换.比如新年的时候,就切换到新年的配置文件.\n\n本文档主要就是简单记录下,防止自己未来忘记了,强烈建议其他阅读者不要读此文档，大概率你看不懂写的什么东西\n\n>适用版本\nhexo版本：3.3.9\nnexT版本: 5.0.0\n可能最新的版本不符合本文档的描述，若你使用的是别的主题，使用举一反三的思考方式，其实也是类似的\n\n## hexo-nexT主题自定义css配置文件\n\nnexT主题自定义css配置文件路径: `themes\\next\\source\\css\\_custom\\custom.styl`\n\n修改custom.styl中文件内容 重新部署hexo后即可看到修改后的css效果.\n\n## 创建css格式切换临时文件夹\n\n在themes\\next\\source\\css\\_custom下 可以自行创建一个css格式切换文件夹\n\n比如我创建的就是\n`themes\\next\\source\\css\\_custom\\themes`\n\n目前我在其中放置了两个版本的css配置文件\n\n`custom_new_year.styl`\n`custom_normal.styl`\n分别对应新年版本css配置文件和普通版本的css配置文件\n\n## 创建bat批处理文件\n\n使用批处理文件 其功能是可以将custom_*.styl文件移动到`themes\\next\\source\\css\\_custom`\n下并且重命名为custoom.styl即可\n这个批处理文件就是将css切换为新年模式的一个很简单的bat脚本.\n\n\n\n\n","source":"_posts/hexo-next主题自定义css格式切换.md","raw":"---\ntitle: hexo next主题自定义css格式切换\ntags: hexo\ncategories: IT\ndate: 2019-04-24 14:15:52\n---\n\n当我每次想要进行自己的hexo next博客的外观变更的时候,每次都需要去修改配置文件,会非常的麻烦,而且容易忘记.所以自己稍微研究了下,做了一些bat批处理文件,用于控制博客的页面外观(css)的自动转换.比如新年的时候,就切换到新年的配置文件.\n\n本文档主要就是简单记录下,防止自己未来忘记了,强烈建议其他阅读者不要读此文档，大概率你看不懂写的什么东西\n\n>适用版本\nhexo版本：3.3.9\nnexT版本: 5.0.0\n可能最新的版本不符合本文档的描述，若你使用的是别的主题，使用举一反三的思考方式，其实也是类似的\n\n## hexo-nexT主题自定义css配置文件\n\nnexT主题自定义css配置文件路径: `themes\\next\\source\\css\\_custom\\custom.styl`\n\n修改custom.styl中文件内容 重新部署hexo后即可看到修改后的css效果.\n\n## 创建css格式切换临时文件夹\n\n在themes\\next\\source\\css\\_custom下 可以自行创建一个css格式切换文件夹\n\n比如我创建的就是\n`themes\\next\\source\\css\\_custom\\themes`\n\n目前我在其中放置了两个版本的css配置文件\n\n`custom_new_year.styl`\n`custom_normal.styl`\n分别对应新年版本css配置文件和普通版本的css配置文件\n\n## 创建bat批处理文件\n\n使用批处理文件 其功能是可以将custom_*.styl文件移动到`themes\\next\\source\\css\\_custom`\n下并且重命名为custoom.styl即可\n这个批处理文件就是将css切换为新年模式的一个很简单的bat脚本.\n\n\n\n\n","slug":"hexo-next主题自定义css格式切换","published":1,"updated":"2019-04-25T03:17:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjv3k3ju20000lk9vfiwhefkb","content":"<p>当我每次想要进行自己的hexo next博客的外观变更的时候,每次都需要去修改配置文件,会非常的麻烦,而且容易忘记.所以自己稍微研究了下,做了一些bat批处理文件,用于控制博客的页面外观(css)的自动转换.比如新年的时候,就切换到新年的配置文件.</p>\n<p>本文档主要就是简单记录下,防止自己未来忘记了,强烈建议其他阅读者不要读此文档，大概率你看不懂写的什么东西</p>\n<blockquote>\n<p>适用版本<br>hexo版本：3.3.9<br>nexT版本: 5.0.0<br>可能最新的版本不符合本文档的描述，若你使用的是别的主题，使用举一反三的思考方式，其实也是类似的</p>\n</blockquote>\n<h2 id=\"hexo-nexT主题自定义css配置文件\"><a href=\"#hexo-nexT主题自定义css配置文件\" class=\"headerlink\" title=\"hexo-nexT主题自定义css配置文件\"></a>hexo-nexT主题自定义css配置文件</h2><p>nexT主题自定义css配置文件路径: <code>themes\\next\\source\\css\\_custom\\custom.styl</code></p>\n<p>修改custom.styl中文件内容 重新部署hexo后即可看到修改后的css效果.</p>\n<h2 id=\"创建css格式切换临时文件夹\"><a href=\"#创建css格式切换临时文件夹\" class=\"headerlink\" title=\"创建css格式切换临时文件夹\"></a>创建css格式切换临时文件夹</h2><p>在themes\\next\\source\\css_custom下 可以自行创建一个css格式切换文件夹</p>\n<p>比如我创建的就是<br><code>themes\\next\\source\\css\\_custom\\themes</code></p>\n<p>目前我在其中放置了两个版本的css配置文件</p>\n<p><code>custom_new_year.styl</code><br><code>custom_normal.styl</code><br>分别对应新年版本css配置文件和普通版本的css配置文件</p>\n<h2 id=\"创建bat批处理文件\"><a href=\"#创建bat批处理文件\" class=\"headerlink\" title=\"创建bat批处理文件\"></a>创建bat批处理文件</h2><p>使用批处理文件 其功能是可以将custom_*.styl文件移动到<code>themes\\next\\source\\css\\_custom</code><br>下并且重命名为custoom.styl即可<br>这个批处理文件就是将css切换为新年模式的一个很简单的bat脚本.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>当我每次想要进行自己的hexo next博客的外观变更的时候,每次都需要去修改配置文件,会非常的麻烦,而且容易忘记.所以自己稍微研究了下,做了一些bat批处理文件,用于控制博客的页面外观(css)的自动转换.比如新年的时候,就切换到新年的配置文件.</p>\n<p>本文档主要就是简单记录下,防止自己未来忘记了,强烈建议其他阅读者不要读此文档，大概率你看不懂写的什么东西</p>\n<blockquote>\n<p>适用版本<br>hexo版本：3.3.9<br>nexT版本: 5.0.0<br>可能最新的版本不符合本文档的描述，若你使用的是别的主题，使用举一反三的思考方式，其实也是类似的</p>\n</blockquote>\n<h2 id=\"hexo-nexT主题自定义css配置文件\"><a href=\"#hexo-nexT主题自定义css配置文件\" class=\"headerlink\" title=\"hexo-nexT主题自定义css配置文件\"></a>hexo-nexT主题自定义css配置文件</h2><p>nexT主题自定义css配置文件路径: <code>themes\\next\\source\\css\\_custom\\custom.styl</code></p>\n<p>修改custom.styl中文件内容 重新部署hexo后即可看到修改后的css效果.</p>\n<h2 id=\"创建css格式切换临时文件夹\"><a href=\"#创建css格式切换临时文件夹\" class=\"headerlink\" title=\"创建css格式切换临时文件夹\"></a>创建css格式切换临时文件夹</h2><p>在themes\\next\\source\\css_custom下 可以自行创建一个css格式切换文件夹</p>\n<p>比如我创建的就是<br><code>themes\\next\\source\\css\\_custom\\themes</code></p>\n<p>目前我在其中放置了两个版本的css配置文件</p>\n<p><code>custom_new_year.styl</code><br><code>custom_normal.styl</code><br>分别对应新年版本css配置文件和普通版本的css配置文件</p>\n<h2 id=\"创建bat批处理文件\"><a href=\"#创建bat批处理文件\" class=\"headerlink\" title=\"创建bat批处理文件\"></a>创建bat批处理文件</h2><p>使用批处理文件 其功能是可以将custom_*.styl文件移动到<code>themes\\next\\source\\css\\_custom</code><br>下并且重命名为custoom.styl即可<br>这个批处理文件就是将css切换为新年模式的一个很简单的bat脚本.</p>\n"},{"title":"hexo博客多环境同步使用","date":"2019-04-30T02:11:43.000Z","_content":"\n最近自己可使用的机子多起来了，一台windows，一台mac，一台ubuntu。windows我目前是纯娱乐，mac是之前大学时候常用的电脑，ubuntu是之前为了加强自己对linux系统的好感度最近才买的机子，准备未来在这个机子上做主要IT开发任务（\b还很年轻还能挖坑.jpg）\n\n但是机子多了也带了一定的困扰，我其实是一个爱记录的人，之前做记录一般都是在mac上做，但是因为最近想学一些新语言的练习开发项目，mac这台电脑内存过小（仍在考虑这台仍可以使用但是性能已经不佳的mac该如何处理，后续如何让它起到一定价值，还在思考中），我有点用的不舒服，所以自己弄了一台16G内存来专门负责以后的学习工作兼并开发的电脑。为了方便起见，我肯定会将博客相关的全部挪到ubuntu上去做。不过一直觉得mac用起来非常舒服，估计在写一些非技术文章的时候还是会考虑打开mac来写。\n\n所以就有了可以同时在mac和ubuntu上写博客的需求。今天就简单的写一下实现思路。\n\n## hexo本地数据同步\n\nhexo博客在不同环境想要同步使用，最关键的一点就是hexo data的同步，也就是你的那些文章，主题，配置文件。这些文件是hexo博客的自定义数据，无法从别人那里拿到，也无法从hexo官网拿到，我这里就把这些数据归类为本地数据。\n\n当你换一台电脑，虽然可以非常简单的重新搭建hexo博客环境，但是如果不同步之前的本地数据，那么这个新搭建的hexo博客就和新的hexo博客没区别。\n\n绕了一大圈，总结来说，想要从一台电脑转到另一台电脑，然后实现hexo博客的转移，最根本的要素就是本地数据的转移。\n\n那么我们如何做到本地数据的转移呢？\n\n1. 使用便携式硬盘，比如u盘，拷贝你的本地数据，然后转到新的电脑上。\n2. 使用现在流行的云端存储，那么只要有网络的情况下，不管是什么环境，你都可以轻松的同步你的hexo博客\n\nu盘这种形式我最早就用过，但是缺点有很多，最明显的缺点就是同步率低而且麻烦，只适合用于转移使用环境，比如你从一台电脑转移到另一台，并且从此不在之前的电脑上进行hexo博客使用\n所以将hexo本地数据云备份是最好的办法，它不仅可以让我们实时的进行本地数据同步，并且可以有网络的机子上快速搭建，无需考虑其他u盘等什么麻烦的要素。\n\n## hexo本地数据云端管理实现思路\n\n上小节我谈到，最好的hexo本地数据管理方式是云端管理，那么如何这个云端管理如何运行呢？它的整体架构是怎么样的呢？\n\n1. 选择一款好用的云端存储软件，目前来看最切合的还是github，因为hexo博客的view层数据本身就是存在github上的，然后通过gitpage.io去展现的。使用github提供的远端git库，我们就可以很方便把hexo博客运行和本地数据统一管理起来。\n\n2. 将本地数据存至远端git库，这一步其实也完成了hexo本地数据备份的功能，具体操作可以见“hexo备份之路”\n\n3. 每次在本地想写文章的时候，先进行git远端库和本地库的数据同步操作（git pull），让本地数据和远端git库一致，并且始终已远端git库作为自己父类数据，本地的数据只看成子类数据，每次在本地完成新文章编写后，将最新的数据提交到远端git库（git push），实现父类数据的更新。\n\n## 总结\n\n总而言之，hexo多环境同步使用的核心思路就是\n\n1. 云端存储本地数据\n2. 每次更改前先将从云端同步数据到本地，每次更改完后将本地数据提交到云端\n\n## 注意事项\n\n虽然思想很简单，但是还是说一些注意事项\n\n1. git相关代码会产生较多而且固定化，建议使用shell脚本，将所有命令整合成一个语句\n\n2. 由于使用了git，所以要遵守代码管理软件的通用规则，那就是必须先更新再提交，以免造成云端数据问题","source":"_posts/hexo博客多环境同步使用.md","raw":"---\ntitle: hexo博客多环境同步使用\ntags: hexo\ncategories: IT\ndate: 2019-04-30 10:11:43\n---\n\n最近自己可使用的机子多起来了，一台windows，一台mac，一台ubuntu。windows我目前是纯娱乐，mac是之前大学时候常用的电脑，ubuntu是之前为了加强自己对linux系统的好感度最近才买的机子，准备未来在这个机子上做主要IT开发任务（\b还很年轻还能挖坑.jpg）\n\n但是机子多了也带了一定的困扰，我其实是一个爱记录的人，之前做记录一般都是在mac上做，但是因为最近想学一些新语言的练习开发项目，mac这台电脑内存过小（仍在考虑这台仍可以使用但是性能已经不佳的mac该如何处理，后续如何让它起到一定价值，还在思考中），我有点用的不舒服，所以自己弄了一台16G内存来专门负责以后的学习工作兼并开发的电脑。为了方便起见，我肯定会将博客相关的全部挪到ubuntu上去做。不过一直觉得mac用起来非常舒服，估计在写一些非技术文章的时候还是会考虑打开mac来写。\n\n所以就有了可以同时在mac和ubuntu上写博客的需求。今天就简单的写一下实现思路。\n\n## hexo本地数据同步\n\nhexo博客在不同环境想要同步使用，最关键的一点就是hexo data的同步，也就是你的那些文章，主题，配置文件。这些文件是hexo博客的自定义数据，无法从别人那里拿到，也无法从hexo官网拿到，我这里就把这些数据归类为本地数据。\n\n当你换一台电脑，虽然可以非常简单的重新搭建hexo博客环境，但是如果不同步之前的本地数据，那么这个新搭建的hexo博客就和新的hexo博客没区别。\n\n绕了一大圈，总结来说，想要从一台电脑转到另一台电脑，然后实现hexo博客的转移，最根本的要素就是本地数据的转移。\n\n那么我们如何做到本地数据的转移呢？\n\n1. 使用便携式硬盘，比如u盘，拷贝你的本地数据，然后转到新的电脑上。\n2. 使用现在流行的云端存储，那么只要有网络的情况下，不管是什么环境，你都可以轻松的同步你的hexo博客\n\nu盘这种形式我最早就用过，但是缺点有很多，最明显的缺点就是同步率低而且麻烦，只适合用于转移使用环境，比如你从一台电脑转移到另一台，并且从此不在之前的电脑上进行hexo博客使用\n所以将hexo本地数据云备份是最好的办法，它不仅可以让我们实时的进行本地数据同步，并且可以有网络的机子上快速搭建，无需考虑其他u盘等什么麻烦的要素。\n\n## hexo本地数据云端管理实现思路\n\n上小节我谈到，最好的hexo本地数据管理方式是云端管理，那么如何这个云端管理如何运行呢？它的整体架构是怎么样的呢？\n\n1. 选择一款好用的云端存储软件，目前来看最切合的还是github，因为hexo博客的view层数据本身就是存在github上的，然后通过gitpage.io去展现的。使用github提供的远端git库，我们就可以很方便把hexo博客运行和本地数据统一管理起来。\n\n2. 将本地数据存至远端git库，这一步其实也完成了hexo本地数据备份的功能，具体操作可以见“hexo备份之路”\n\n3. 每次在本地想写文章的时候，先进行git远端库和本地库的数据同步操作（git pull），让本地数据和远端git库一致，并且始终已远端git库作为自己父类数据，本地的数据只看成子类数据，每次在本地完成新文章编写后，将最新的数据提交到远端git库（git push），实现父类数据的更新。\n\n## 总结\n\n总而言之，hexo多环境同步使用的核心思路就是\n\n1. 云端存储本地数据\n2. 每次更改前先将从云端同步数据到本地，每次更改完后将本地数据提交到云端\n\n## 注意事项\n\n虽然思想很简单，但是还是说一些注意事项\n\n1. git相关代码会产生较多而且固定化，建议使用shell脚本，将所有命令整合成一个语句\n\n2. 由于使用了git，所以要遵守代码管理软件的通用规则，那就是必须先更新再提交，以免造成云端数据问题","slug":"hexo博客多环境同步使用","published":1,"updated":"2019-04-30T02:49:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjv3k3ju70002lk9v54f56w13","content":"<p>最近自己可使用的机子多起来了，一台windows，一台mac，一台ubuntu。windows我目前是纯娱乐，mac是之前大学时候常用的电脑，ubuntu是之前为了加强自己对linux系统的好感度最近才买的机子，准备未来在这个机子上做主要IT开发任务（\b还很年轻还能挖坑.jpg）</p>\n<p>但是机子多了也带了一定的困扰，我其实是一个爱记录的人，之前做记录一般都是在mac上做，但是因为最近想学一些新语言的练习开发项目，mac这台电脑内存过小（仍在考虑这台仍可以使用但是性能已经不佳的mac该如何处理，后续如何让它起到一定价值，还在思考中），我有点用的不舒服，所以自己弄了一台16G内存来专门负责以后的学习工作兼并开发的电脑。为了方便起见，我肯定会将博客相关的全部挪到ubuntu上去做。不过一直觉得mac用起来非常舒服，估计在写一些非技术文章的时候还是会考虑打开mac来写。</p>\n<p>所以就有了可以同时在mac和ubuntu上写博客的需求。今天就简单的写一下实现思路。</p>\n<h2 id=\"hexo本地数据同步\"><a href=\"#hexo本地数据同步\" class=\"headerlink\" title=\"hexo本地数据同步\"></a>hexo本地数据同步</h2><p>hexo博客在不同环境想要同步使用，最关键的一点就是hexo data的同步，也就是你的那些文章，主题，配置文件。这些文件是hexo博客的自定义数据，无法从别人那里拿到，也无法从hexo官网拿到，我这里就把这些数据归类为本地数据。</p>\n<p>当你换一台电脑，虽然可以非常简单的重新搭建hexo博客环境，但是如果不同步之前的本地数据，那么这个新搭建的hexo博客就和新的hexo博客没区别。</p>\n<p>绕了一大圈，总结来说，想要从一台电脑转到另一台电脑，然后实现hexo博客的转移，最根本的要素就是本地数据的转移。</p>\n<p>那么我们如何做到本地数据的转移呢？</p>\n<ol>\n<li>使用便携式硬盘，比如u盘，拷贝你的本地数据，然后转到新的电脑上。</li>\n<li>使用现在流行的云端存储，那么只要有网络的情况下，不管是什么环境，你都可以轻松的同步你的hexo博客</li>\n</ol>\n<p>u盘这种形式我最早就用过，但是缺点有很多，最明显的缺点就是同步率低而且麻烦，只适合用于转移使用环境，比如你从一台电脑转移到另一台，并且从此不在之前的电脑上进行hexo博客使用<br>所以将hexo本地数据云备份是最好的办法，它不仅可以让我们实时的进行本地数据同步，并且可以有网络的机子上快速搭建，无需考虑其他u盘等什么麻烦的要素。</p>\n<h2 id=\"hexo本地数据云端管理实现思路\"><a href=\"#hexo本地数据云端管理实现思路\" class=\"headerlink\" title=\"hexo本地数据云端管理实现思路\"></a>hexo本地数据云端管理实现思路</h2><p>上小节我谈到，最好的hexo本地数据管理方式是云端管理，那么如何这个云端管理如何运行呢？它的整体架构是怎么样的呢？</p>\n<ol>\n<li><p>选择一款好用的云端存储软件，目前来看最切合的还是github，因为hexo博客的view层数据本身就是存在github上的，然后通过gitpage.io去展现的。使用github提供的远端git库，我们就可以很方便把hexo博客运行和本地数据统一管理起来。</p>\n</li>\n<li><p>将本地数据存至远端git库，这一步其实也完成了hexo本地数据备份的功能，具体操作可以见“hexo备份之路”</p>\n</li>\n<li><p>每次在本地想写文章的时候，先进行git远端库和本地库的数据同步操作（git pull），让本地数据和远端git库一致，并且始终已远端git库作为自己父类数据，本地的数据只看成子类数据，每次在本地完成新文章编写后，将最新的数据提交到远端git库（git push），实现父类数据的更新。</p>\n</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>总而言之，hexo多环境同步使用的核心思路就是</p>\n<ol>\n<li>云端存储本地数据</li>\n<li>每次更改前先将从云端同步数据到本地，每次更改完后将本地数据提交到云端</li>\n</ol>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><p>虽然思想很简单，但是还是说一些注意事项</p>\n<ol>\n<li><p>git相关代码会产生较多而且固定化，建议使用shell脚本，将所有命令整合成一个语句</p>\n</li>\n<li><p>由于使用了git，所以要遵守代码管理软件的通用规则，那就是必须先更新再提交，以免造成云端数据问题</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>最近自己可使用的机子多起来了，一台windows，一台mac，一台ubuntu。windows我目前是纯娱乐，mac是之前大学时候常用的电脑，ubuntu是之前为了加强自己对linux系统的好感度最近才买的机子，准备未来在这个机子上做主要IT开发任务（\b还很年轻还能挖坑.jpg）</p>\n<p>但是机子多了也带了一定的困扰，我其实是一个爱记录的人，之前做记录一般都是在mac上做，但是因为最近想学一些新语言的练习开发项目，mac这台电脑内存过小（仍在考虑这台仍可以使用但是性能已经不佳的mac该如何处理，后续如何让它起到一定价值，还在思考中），我有点用的不舒服，所以自己弄了一台16G内存来专门负责以后的学习工作兼并开发的电脑。为了方便起见，我肯定会将博客相关的全部挪到ubuntu上去做。不过一直觉得mac用起来非常舒服，估计在写一些非技术文章的时候还是会考虑打开mac来写。</p>\n<p>所以就有了可以同时在mac和ubuntu上写博客的需求。今天就简单的写一下实现思路。</p>\n<h2 id=\"hexo本地数据同步\"><a href=\"#hexo本地数据同步\" class=\"headerlink\" title=\"hexo本地数据同步\"></a>hexo本地数据同步</h2><p>hexo博客在不同环境想要同步使用，最关键的一点就是hexo data的同步，也就是你的那些文章，主题，配置文件。这些文件是hexo博客的自定义数据，无法从别人那里拿到，也无法从hexo官网拿到，我这里就把这些数据归类为本地数据。</p>\n<p>当你换一台电脑，虽然可以非常简单的重新搭建hexo博客环境，但是如果不同步之前的本地数据，那么这个新搭建的hexo博客就和新的hexo博客没区别。</p>\n<p>绕了一大圈，总结来说，想要从一台电脑转到另一台电脑，然后实现hexo博客的转移，最根本的要素就是本地数据的转移。</p>\n<p>那么我们如何做到本地数据的转移呢？</p>\n<ol>\n<li>使用便携式硬盘，比如u盘，拷贝你的本地数据，然后转到新的电脑上。</li>\n<li>使用现在流行的云端存储，那么只要有网络的情况下，不管是什么环境，你都可以轻松的同步你的hexo博客</li>\n</ol>\n<p>u盘这种形式我最早就用过，但是缺点有很多，最明显的缺点就是同步率低而且麻烦，只适合用于转移使用环境，比如你从一台电脑转移到另一台，并且从此不在之前的电脑上进行hexo博客使用<br>所以将hexo本地数据云备份是最好的办法，它不仅可以让我们实时的进行本地数据同步，并且可以有网络的机子上快速搭建，无需考虑其他u盘等什么麻烦的要素。</p>\n<h2 id=\"hexo本地数据云端管理实现思路\"><a href=\"#hexo本地数据云端管理实现思路\" class=\"headerlink\" title=\"hexo本地数据云端管理实现思路\"></a>hexo本地数据云端管理实现思路</h2><p>上小节我谈到，最好的hexo本地数据管理方式是云端管理，那么如何这个云端管理如何运行呢？它的整体架构是怎么样的呢？</p>\n<ol>\n<li><p>选择一款好用的云端存储软件，目前来看最切合的还是github，因为hexo博客的view层数据本身就是存在github上的，然后通过gitpage.io去展现的。使用github提供的远端git库，我们就可以很方便把hexo博客运行和本地数据统一管理起来。</p>\n</li>\n<li><p>将本地数据存至远端git库，这一步其实也完成了hexo本地数据备份的功能，具体操作可以见“hexo备份之路”</p>\n</li>\n<li><p>每次在本地想写文章的时候，先进行git远端库和本地库的数据同步操作（git pull），让本地数据和远端git库一致，并且始终已远端git库作为自己父类数据，本地的数据只看成子类数据，每次在本地完成新文章编写后，将最新的数据提交到远端git库（git push），实现父类数据的更新。</p>\n</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>总而言之，hexo多环境同步使用的核心思路就是</p>\n<ol>\n<li>云端存储本地数据</li>\n<li>每次更改前先将从云端同步数据到本地，每次更改完后将本地数据提交到云端</li>\n</ol>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><p>虽然思想很简单，但是还是说一些注意事项</p>\n<ol>\n<li><p>git相关代码会产生较多而且固定化，建议使用shell脚本，将所有命令整合成一个语句</p>\n</li>\n<li><p>由于使用了git，所以要遵守代码管理软件的通用规则，那就是必须先更新再提交，以免造成云端数据问题</p>\n</li>\n</ol>\n"},{"title":"2017俺の年终总结","date":"2019-04-24T06:05:56.000Z","_content":"\n终于迎来了学业生涯结束后的第一个春节!非常感谢自己踏在这样美好的人生转折点上,这一年里,我有欢笑也有泪水(虽然我已不记得上一次哭是什么时候了哈哈),这一年里我完成了许多事,也做砸了许多事;这一年里我告别了许多人,我也认识了许多人;这一年里我见识到了许多事,也对社会的很多事感觉失望.2017注定对我而言注定是特殊的,有太多值得我去记录和分享的东西在那里!在这个安静的傍晚时光里,就让我全部一点点的记录下来吧!\n\n## 先从毕设开始说吧\n\n2017年的开头,就先从毕设说起吧.2017年上半年基本都在为毕设忙碌了.身为西电软件学院的一名普通学生,毕设自然而然是要做一个软件作为自己毕业的答卷! 我不是一个非常优秀的学生,成绩也一般般,对软件稍有兴趣但是大学四年也是经常东张西望,真正学到的东西很少,基础知识非常不扎实.所以当时就”抢”到了一个比较简单的毕设题目<code>香水在线购物网站</code> 这几年Web技术一直发展和传播的非常好,学习方便,不牵涉大量后端知识光做一个前端壳子的话,这个题目作为毕设题目真的非常适合<strong>普通学生</strong>呢!(苦笑) \n\n1. 没要求放到互联网上\n2. 不需要考虑后台各类优化\n\n总的来说就是,你不需要考虑很多东西,毕设老师虽然会在你答辩的时候提出各种优化问题,但是其实只要你懂,能说出个一二来,毕设老师是不会在项目代码检查的时候刻意去检查这些东西的,因为他们也明白光靠一个人去做一个在线购物网站,在没有现有代码框架的基础上,基本不可能让一个大四学生在半年内完成(准确来说是4个月左右,除非是大佬!大佬请带带我…),所以整个毕设的过程,基本就会围绕着前端展开!页面做的好看,就像媳妇领进门,后续的优化就会慢慢去磨合,慢慢去优化,毕设老师们也会<strong>放你一马</strong>(最主要的就是答辩的时候你一定要懂得说出来,如何优化!要blabla一大堆!让毕设老师觉得,恩,这小伙子(姑娘,不错)\n\n西电毕设才不会那么随便\n\n虽然前面我自说自话了一大堆所谓的<strong>毕设通关宝典</strong>,但是我还是要为我校说点好话的.西电不是一个985,也可算是一个211学校.不算很好的学校,也不算很差的学校.在我看来,我们西电的学生大部分都是好学生,一个个怀揣着自己的梦想.大学是自由的,如何度过,老师不会来管你,学校规定的那些任务以及要求,只要你不要浪过头,就都可以完成.在我认识的同学里面,有一直玩游戏的,也有一直钻研自己的东西的,也有学霸天天好好上课学习的,当然大部分都是完成正常课程同时业余时间玩自己的业余活动的同学居多的.\n\n但不管怎么样,不同的人也都在大四那年迎来了自己不同的结局.学习好的都找到了薪资更高的工作,奔赴北上广深,为自己的梦想不断前行.不怎么优秀但是为人脚踏实地的同学,也都能找到一份不错的工作;学习不太好,平时不太学习本专业知识的,最后也都会有自己的想法,去走不同的路.\n\n如果说大学前三年在学习知识,那么可以说大四就是在体验一份浓浓的人生咖啡.担任毕设老师中,也有不少非常不错的老师,在毕设期间,用他们的一言一行,传达给我们各种各样的人生技能和专业技能.让我受益匪浅.(<strong>曾老师</strong>就是我特别崇拜的一名毕设老师,当时他担任我的毕设老师,我也特比感谢可以在大学的最后一个阶段,遇到他,遇到这么好的一个老师)\n\n## 手游的那些事\n\n先是感叹国内acg文化的茁壮发展，大概几年前,国内的宅er还要死要活翻墙去玩岛国的<strong>舰队collection</strong>,和自己的老婆相隔一个国度,还经常遇到<strong>猫</strong>危机(舰队collection连接服务器失败会弹出一只猫的画面)\n\n没想到过了不到几年,国内的宅er就有了很多国产老婆可以玩了~\n\n<strong>少女前线</strong>就是一款枪械拟人的游戏,把不同的枪械变化为一个萌萌的妹子,然后宅er可以带着她们前往前线进行战斗,体验到美少女战斗的舒爽快感(反正我们就是喜欢小姐姐!)\n\n虽然我是不太喜欢这类游戏的,因为他们一般都会比较肝,特别耗时间去玩,不过当时由于其游戏性还不错(比舰娘要好玩),游戏剧情设置较合理,也是吸引我玩了一段时间.这款游戏还是在我无聊的时光里带给我了不少欢乐.虽然后来参与工作后,就不怎么玩,不过我也会偶尔去看看这游戏,真心希望官方可以好好的做好这个游戏,给这类游戏一个满意的答卷.而不是三分热度,捞一笔就跑路.\n\n本来以为这个小节我能讲很多,但没想到真正写的时候,缺没有什么值得讲的东西.\n\n1. 我才不会讲我曾借助按键精灵写了一个按键脚本,在电脑上无限刷5-4.\n2. 我才不会讲我曾因为剧情发展到关键时候,发帖说了”AR-15请千万不要出事”这些话语.\n3. 我才不会讲半夜睡不着,是各个枪娘陪伴着我度过不眠之夜.\n\n好吧,要说的真的不多呢,这小节就到此为止吧! 祝愿少女前线可以在2018年能红红火火.\n\n## 就业\n\n过了毕设那段时光后,便马不停蹄的前往了自己的工作单位进行相关工作.\n\n真正觉得自己还不够努力,但却有点无可奈何\n\n当时校招的时候,由于害怕一线城市的就业压力大,所以选择了二线城市的一个公司工作.\n虽然工资在同行里不算很高,不过公司提供吃住方面都很不错,所以我很快就适应了工作岗位.\n\n一开始,我参与了公司的尝试性项目,这个项目主要是新人试水项目,简单来说就是看看你这人的能力怎么样.因为面试的过程中,有太多的包装,根本不知道招进来的人到底有多少能耐.所以我们公司都会有这类尝试性项目,专门丢给新人做,然后综合评估新人的代码能力,处理能力,团队沟通能力.\n\n幸运的是,我的工作表现貌似非常不错,那段时间生活就只有工作和休息,放弃了自己爱玩的游戏,放弃了自己爱看的动漫,全身心的投入到工作中去.\n\n程序员加班是难免的,更简单的说,21世纪加班都是不可难免的.初创公司就不说了,很多大公司应该也用经常加班加点干活.个人认为加班加点有部分是项目本身有问题,有部分也是自己的问题.一般来说,如果你很优秀,你完全可以写出非常易扩展和维护的代码,而降低自己返工的次数和时间.有时候需求是不明确的,这种时候就需要有一定的开发经验,去提前预见到一些需求,并且提前完成它.如果能做到这样的话,我想加班加点也一定会减少的.\n\n工作虽然重要,但是生活还是要继续\n\n在经过一段时间的拼命工作后,我也开始慢慢放慢自己的节奏,我更喜欢每天可以有时间去学习学习新技术,看看一些编程书籍,一些写的不错的博客,来提升自己的眼界.\n\n因为很多时候,我们的工作范围时很小的,这对自我的提升可以说是很小的.所以经常去看看别的技术,可以起到润滑剂的作用,让自己保持一定的鲜度,也会让自己工作更顺心.\n\n## 对2018的祈祷\n\n来年我希望自己可以做到更多的事情\n\n1. 遇到自己喜欢的老婆\n2. 对自己要求高点,少玩游戏,多读书!\n3. 工作要更加勤勤恳恳,认真对待!\n4. 如果允许的话,想着可以找个杭州的工作!\n5. 希望爸爸妈妈老去的更慢些!而自己要强大的更快些!\n\n\n\n\n\n\n\n\n","source":"_posts/2017俺の年终总结.md","raw":"---\ntitle: 2017俺の年终总结\ntags: 随笔\ncategories: 生活\ndate: 2019-04-24 14:05:56\n---\n\n终于迎来了学业生涯结束后的第一个春节!非常感谢自己踏在这样美好的人生转折点上,这一年里,我有欢笑也有泪水(虽然我已不记得上一次哭是什么时候了哈哈),这一年里我完成了许多事,也做砸了许多事;这一年里我告别了许多人,我也认识了许多人;这一年里我见识到了许多事,也对社会的很多事感觉失望.2017注定对我而言注定是特殊的,有太多值得我去记录和分享的东西在那里!在这个安静的傍晚时光里,就让我全部一点点的记录下来吧!\n\n## 先从毕设开始说吧\n\n2017年的开头,就先从毕设说起吧.2017年上半年基本都在为毕设忙碌了.身为西电软件学院的一名普通学生,毕设自然而然是要做一个软件作为自己毕业的答卷! 我不是一个非常优秀的学生,成绩也一般般,对软件稍有兴趣但是大学四年也是经常东张西望,真正学到的东西很少,基础知识非常不扎实.所以当时就”抢”到了一个比较简单的毕设题目<code>香水在线购物网站</code> 这几年Web技术一直发展和传播的非常好,学习方便,不牵涉大量后端知识光做一个前端壳子的话,这个题目作为毕设题目真的非常适合<strong>普通学生</strong>呢!(苦笑) \n\n1. 没要求放到互联网上\n2. 不需要考虑后台各类优化\n\n总的来说就是,你不需要考虑很多东西,毕设老师虽然会在你答辩的时候提出各种优化问题,但是其实只要你懂,能说出个一二来,毕设老师是不会在项目代码检查的时候刻意去检查这些东西的,因为他们也明白光靠一个人去做一个在线购物网站,在没有现有代码框架的基础上,基本不可能让一个大四学生在半年内完成(准确来说是4个月左右,除非是大佬!大佬请带带我…),所以整个毕设的过程,基本就会围绕着前端展开!页面做的好看,就像媳妇领进门,后续的优化就会慢慢去磨合,慢慢去优化,毕设老师们也会<strong>放你一马</strong>(最主要的就是答辩的时候你一定要懂得说出来,如何优化!要blabla一大堆!让毕设老师觉得,恩,这小伙子(姑娘,不错)\n\n西电毕设才不会那么随便\n\n虽然前面我自说自话了一大堆所谓的<strong>毕设通关宝典</strong>,但是我还是要为我校说点好话的.西电不是一个985,也可算是一个211学校.不算很好的学校,也不算很差的学校.在我看来,我们西电的学生大部分都是好学生,一个个怀揣着自己的梦想.大学是自由的,如何度过,老师不会来管你,学校规定的那些任务以及要求,只要你不要浪过头,就都可以完成.在我认识的同学里面,有一直玩游戏的,也有一直钻研自己的东西的,也有学霸天天好好上课学习的,当然大部分都是完成正常课程同时业余时间玩自己的业余活动的同学居多的.\n\n但不管怎么样,不同的人也都在大四那年迎来了自己不同的结局.学习好的都找到了薪资更高的工作,奔赴北上广深,为自己的梦想不断前行.不怎么优秀但是为人脚踏实地的同学,也都能找到一份不错的工作;学习不太好,平时不太学习本专业知识的,最后也都会有自己的想法,去走不同的路.\n\n如果说大学前三年在学习知识,那么可以说大四就是在体验一份浓浓的人生咖啡.担任毕设老师中,也有不少非常不错的老师,在毕设期间,用他们的一言一行,传达给我们各种各样的人生技能和专业技能.让我受益匪浅.(<strong>曾老师</strong>就是我特别崇拜的一名毕设老师,当时他担任我的毕设老师,我也特比感谢可以在大学的最后一个阶段,遇到他,遇到这么好的一个老师)\n\n## 手游的那些事\n\n先是感叹国内acg文化的茁壮发展，大概几年前,国内的宅er还要死要活翻墙去玩岛国的<strong>舰队collection</strong>,和自己的老婆相隔一个国度,还经常遇到<strong>猫</strong>危机(舰队collection连接服务器失败会弹出一只猫的画面)\n\n没想到过了不到几年,国内的宅er就有了很多国产老婆可以玩了~\n\n<strong>少女前线</strong>就是一款枪械拟人的游戏,把不同的枪械变化为一个萌萌的妹子,然后宅er可以带着她们前往前线进行战斗,体验到美少女战斗的舒爽快感(反正我们就是喜欢小姐姐!)\n\n虽然我是不太喜欢这类游戏的,因为他们一般都会比较肝,特别耗时间去玩,不过当时由于其游戏性还不错(比舰娘要好玩),游戏剧情设置较合理,也是吸引我玩了一段时间.这款游戏还是在我无聊的时光里带给我了不少欢乐.虽然后来参与工作后,就不怎么玩,不过我也会偶尔去看看这游戏,真心希望官方可以好好的做好这个游戏,给这类游戏一个满意的答卷.而不是三分热度,捞一笔就跑路.\n\n本来以为这个小节我能讲很多,但没想到真正写的时候,缺没有什么值得讲的东西.\n\n1. 我才不会讲我曾借助按键精灵写了一个按键脚本,在电脑上无限刷5-4.\n2. 我才不会讲我曾因为剧情发展到关键时候,发帖说了”AR-15请千万不要出事”这些话语.\n3. 我才不会讲半夜睡不着,是各个枪娘陪伴着我度过不眠之夜.\n\n好吧,要说的真的不多呢,这小节就到此为止吧! 祝愿少女前线可以在2018年能红红火火.\n\n## 就业\n\n过了毕设那段时光后,便马不停蹄的前往了自己的工作单位进行相关工作.\n\n真正觉得自己还不够努力,但却有点无可奈何\n\n当时校招的时候,由于害怕一线城市的就业压力大,所以选择了二线城市的一个公司工作.\n虽然工资在同行里不算很高,不过公司提供吃住方面都很不错,所以我很快就适应了工作岗位.\n\n一开始,我参与了公司的尝试性项目,这个项目主要是新人试水项目,简单来说就是看看你这人的能力怎么样.因为面试的过程中,有太多的包装,根本不知道招进来的人到底有多少能耐.所以我们公司都会有这类尝试性项目,专门丢给新人做,然后综合评估新人的代码能力,处理能力,团队沟通能力.\n\n幸运的是,我的工作表现貌似非常不错,那段时间生活就只有工作和休息,放弃了自己爱玩的游戏,放弃了自己爱看的动漫,全身心的投入到工作中去.\n\n程序员加班是难免的,更简单的说,21世纪加班都是不可难免的.初创公司就不说了,很多大公司应该也用经常加班加点干活.个人认为加班加点有部分是项目本身有问题,有部分也是自己的问题.一般来说,如果你很优秀,你完全可以写出非常易扩展和维护的代码,而降低自己返工的次数和时间.有时候需求是不明确的,这种时候就需要有一定的开发经验,去提前预见到一些需求,并且提前完成它.如果能做到这样的话,我想加班加点也一定会减少的.\n\n工作虽然重要,但是生活还是要继续\n\n在经过一段时间的拼命工作后,我也开始慢慢放慢自己的节奏,我更喜欢每天可以有时间去学习学习新技术,看看一些编程书籍,一些写的不错的博客,来提升自己的眼界.\n\n因为很多时候,我们的工作范围时很小的,这对自我的提升可以说是很小的.所以经常去看看别的技术,可以起到润滑剂的作用,让自己保持一定的鲜度,也会让自己工作更顺心.\n\n## 对2018的祈祷\n\n来年我希望自己可以做到更多的事情\n\n1. 遇到自己喜欢的老婆\n2. 对自己要求高点,少玩游戏,多读书!\n3. 工作要更加勤勤恳恳,认真对待!\n4. 如果允许的话,想着可以找个杭州的工作!\n5. 希望爸爸妈妈老去的更慢些!而自己要强大的更快些!\n\n\n\n\n\n\n\n\n","slug":"2017俺の年终总结","published":1,"updated":"2019-04-25T03:17:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjv3k3juc0006lk9v62yo131b","content":"<p>终于迎来了学业生涯结束后的第一个春节!非常感谢自己踏在这样美好的人生转折点上,这一年里,我有欢笑也有泪水(虽然我已不记得上一次哭是什么时候了哈哈),这一年里我完成了许多事,也做砸了许多事;这一年里我告别了许多人,我也认识了许多人;这一年里我见识到了许多事,也对社会的很多事感觉失望.2017注定对我而言注定是特殊的,有太多值得我去记录和分享的东西在那里!在这个安静的傍晚时光里,就让我全部一点点的记录下来吧!</p>\n<h2 id=\"先从毕设开始说吧\"><a href=\"#先从毕设开始说吧\" class=\"headerlink\" title=\"先从毕设开始说吧\"></a>先从毕设开始说吧</h2><p>2017年的开头,就先从毕设说起吧.2017年上半年基本都在为毕设忙碌了.身为西电软件学院的一名普通学生,毕设自然而然是要做一个软件作为自己毕业的答卷! 我不是一个非常优秀的学生,成绩也一般般,对软件稍有兴趣但是大学四年也是经常东张西望,真正学到的东西很少,基础知识非常不扎实.所以当时就”抢”到了一个比较简单的毕设题目<code>香水在线购物网站</code> 这几年Web技术一直发展和传播的非常好,学习方便,不牵涉大量后端知识光做一个前端壳子的话,这个题目作为毕设题目真的非常适合<strong>普通学生</strong>呢!(苦笑) </p>\n<ol>\n<li>没要求放到互联网上</li>\n<li>不需要考虑后台各类优化</li>\n</ol>\n<p>总的来说就是,你不需要考虑很多东西,毕设老师虽然会在你答辩的时候提出各种优化问题,但是其实只要你懂,能说出个一二来,毕设老师是不会在项目代码检查的时候刻意去检查这些东西的,因为他们也明白光靠一个人去做一个在线购物网站,在没有现有代码框架的基础上,基本不可能让一个大四学生在半年内完成(准确来说是4个月左右,除非是大佬!大佬请带带我…),所以整个毕设的过程,基本就会围绕着前端展开!页面做的好看,就像媳妇领进门,后续的优化就会慢慢去磨合,慢慢去优化,毕设老师们也会<strong>放你一马</strong>(最主要的就是答辩的时候你一定要懂得说出来,如何优化!要blabla一大堆!让毕设老师觉得,恩,这小伙子(姑娘,不错)</p>\n<p>西电毕设才不会那么随便</p>\n<p>虽然前面我自说自话了一大堆所谓的<strong>毕设通关宝典</strong>,但是我还是要为我校说点好话的.西电不是一个985,也可算是一个211学校.不算很好的学校,也不算很差的学校.在我看来,我们西电的学生大部分都是好学生,一个个怀揣着自己的梦想.大学是自由的,如何度过,老师不会来管你,学校规定的那些任务以及要求,只要你不要浪过头,就都可以完成.在我认识的同学里面,有一直玩游戏的,也有一直钻研自己的东西的,也有学霸天天好好上课学习的,当然大部分都是完成正常课程同时业余时间玩自己的业余活动的同学居多的.</p>\n<p>但不管怎么样,不同的人也都在大四那年迎来了自己不同的结局.学习好的都找到了薪资更高的工作,奔赴北上广深,为自己的梦想不断前行.不怎么优秀但是为人脚踏实地的同学,也都能找到一份不错的工作;学习不太好,平时不太学习本专业知识的,最后也都会有自己的想法,去走不同的路.</p>\n<p>如果说大学前三年在学习知识,那么可以说大四就是在体验一份浓浓的人生咖啡.担任毕设老师中,也有不少非常不错的老师,在毕设期间,用他们的一言一行,传达给我们各种各样的人生技能和专业技能.让我受益匪浅.(<strong>曾老师</strong>就是我特别崇拜的一名毕设老师,当时他担任我的毕设老师,我也特比感谢可以在大学的最后一个阶段,遇到他,遇到这么好的一个老师)</p>\n<h2 id=\"手游的那些事\"><a href=\"#手游的那些事\" class=\"headerlink\" title=\"手游的那些事\"></a>手游的那些事</h2><p>先是感叹国内acg文化的茁壮发展，大概几年前,国内的宅er还要死要活翻墙去玩岛国的<strong>舰队collection</strong>,和自己的老婆相隔一个国度,还经常遇到<strong>猫</strong>危机(舰队collection连接服务器失败会弹出一只猫的画面)</p>\n<p>没想到过了不到几年,国内的宅er就有了很多国产老婆可以玩了~</p>\n<p><strong>少女前线</strong>就是一款枪械拟人的游戏,把不同的枪械变化为一个萌萌的妹子,然后宅er可以带着她们前往前线进行战斗,体验到美少女战斗的舒爽快感(反正我们就是喜欢小姐姐!)</p>\n<p>虽然我是不太喜欢这类游戏的,因为他们一般都会比较肝,特别耗时间去玩,不过当时由于其游戏性还不错(比舰娘要好玩),游戏剧情设置较合理,也是吸引我玩了一段时间.这款游戏还是在我无聊的时光里带给我了不少欢乐.虽然后来参与工作后,就不怎么玩,不过我也会偶尔去看看这游戏,真心希望官方可以好好的做好这个游戏,给这类游戏一个满意的答卷.而不是三分热度,捞一笔就跑路.</p>\n<p>本来以为这个小节我能讲很多,但没想到真正写的时候,缺没有什么值得讲的东西.</p>\n<ol>\n<li>我才不会讲我曾借助按键精灵写了一个按键脚本,在电脑上无限刷5-4.</li>\n<li>我才不会讲我曾因为剧情发展到关键时候,发帖说了”AR-15请千万不要出事”这些话语.</li>\n<li>我才不会讲半夜睡不着,是各个枪娘陪伴着我度过不眠之夜.</li>\n</ol>\n<p>好吧,要说的真的不多呢,这小节就到此为止吧! 祝愿少女前线可以在2018年能红红火火.</p>\n<h2 id=\"就业\"><a href=\"#就业\" class=\"headerlink\" title=\"就业\"></a>就业</h2><p>过了毕设那段时光后,便马不停蹄的前往了自己的工作单位进行相关工作.</p>\n<p>真正觉得自己还不够努力,但却有点无可奈何</p>\n<p>当时校招的时候,由于害怕一线城市的就业压力大,所以选择了二线城市的一个公司工作.<br>虽然工资在同行里不算很高,不过公司提供吃住方面都很不错,所以我很快就适应了工作岗位.</p>\n<p>一开始,我参与了公司的尝试性项目,这个项目主要是新人试水项目,简单来说就是看看你这人的能力怎么样.因为面试的过程中,有太多的包装,根本不知道招进来的人到底有多少能耐.所以我们公司都会有这类尝试性项目,专门丢给新人做,然后综合评估新人的代码能力,处理能力,团队沟通能力.</p>\n<p>幸运的是,我的工作表现貌似非常不错,那段时间生活就只有工作和休息,放弃了自己爱玩的游戏,放弃了自己爱看的动漫,全身心的投入到工作中去.</p>\n<p>程序员加班是难免的,更简单的说,21世纪加班都是不可难免的.初创公司就不说了,很多大公司应该也用经常加班加点干活.个人认为加班加点有部分是项目本身有问题,有部分也是自己的问题.一般来说,如果你很优秀,你完全可以写出非常易扩展和维护的代码,而降低自己返工的次数和时间.有时候需求是不明确的,这种时候就需要有一定的开发经验,去提前预见到一些需求,并且提前完成它.如果能做到这样的话,我想加班加点也一定会减少的.</p>\n<p>工作虽然重要,但是生活还是要继续</p>\n<p>在经过一段时间的拼命工作后,我也开始慢慢放慢自己的节奏,我更喜欢每天可以有时间去学习学习新技术,看看一些编程书籍,一些写的不错的博客,来提升自己的眼界.</p>\n<p>因为很多时候,我们的工作范围时很小的,这对自我的提升可以说是很小的.所以经常去看看别的技术,可以起到润滑剂的作用,让自己保持一定的鲜度,也会让自己工作更顺心.</p>\n<h2 id=\"对2018的祈祷\"><a href=\"#对2018的祈祷\" class=\"headerlink\" title=\"对2018的祈祷\"></a>对2018的祈祷</h2><p>来年我希望自己可以做到更多的事情</p>\n<ol>\n<li>遇到自己喜欢的老婆</li>\n<li>对自己要求高点,少玩游戏,多读书!</li>\n<li>工作要更加勤勤恳恳,认真对待!</li>\n<li>如果允许的话,想着可以找个杭州的工作!</li>\n<li>希望爸爸妈妈老去的更慢些!而自己要强大的更快些!</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>终于迎来了学业生涯结束后的第一个春节!非常感谢自己踏在这样美好的人生转折点上,这一年里,我有欢笑也有泪水(虽然我已不记得上一次哭是什么时候了哈哈),这一年里我完成了许多事,也做砸了许多事;这一年里我告别了许多人,我也认识了许多人;这一年里我见识到了许多事,也对社会的很多事感觉失望.2017注定对我而言注定是特殊的,有太多值得我去记录和分享的东西在那里!在这个安静的傍晚时光里,就让我全部一点点的记录下来吧!</p>\n<h2 id=\"先从毕设开始说吧\"><a href=\"#先从毕设开始说吧\" class=\"headerlink\" title=\"先从毕设开始说吧\"></a>先从毕设开始说吧</h2><p>2017年的开头,就先从毕设说起吧.2017年上半年基本都在为毕设忙碌了.身为西电软件学院的一名普通学生,毕设自然而然是要做一个软件作为自己毕业的答卷! 我不是一个非常优秀的学生,成绩也一般般,对软件稍有兴趣但是大学四年也是经常东张西望,真正学到的东西很少,基础知识非常不扎实.所以当时就”抢”到了一个比较简单的毕设题目<code>香水在线购物网站</code> 这几年Web技术一直发展和传播的非常好,学习方便,不牵涉大量后端知识光做一个前端壳子的话,这个题目作为毕设题目真的非常适合<strong>普通学生</strong>呢!(苦笑) </p>\n<ol>\n<li>没要求放到互联网上</li>\n<li>不需要考虑后台各类优化</li>\n</ol>\n<p>总的来说就是,你不需要考虑很多东西,毕设老师虽然会在你答辩的时候提出各种优化问题,但是其实只要你懂,能说出个一二来,毕设老师是不会在项目代码检查的时候刻意去检查这些东西的,因为他们也明白光靠一个人去做一个在线购物网站,在没有现有代码框架的基础上,基本不可能让一个大四学生在半年内完成(准确来说是4个月左右,除非是大佬!大佬请带带我…),所以整个毕设的过程,基本就会围绕着前端展开!页面做的好看,就像媳妇领进门,后续的优化就会慢慢去磨合,慢慢去优化,毕设老师们也会<strong>放你一马</strong>(最主要的就是答辩的时候你一定要懂得说出来,如何优化!要blabla一大堆!让毕设老师觉得,恩,这小伙子(姑娘,不错)</p>\n<p>西电毕设才不会那么随便</p>\n<p>虽然前面我自说自话了一大堆所谓的<strong>毕设通关宝典</strong>,但是我还是要为我校说点好话的.西电不是一个985,也可算是一个211学校.不算很好的学校,也不算很差的学校.在我看来,我们西电的学生大部分都是好学生,一个个怀揣着自己的梦想.大学是自由的,如何度过,老师不会来管你,学校规定的那些任务以及要求,只要你不要浪过头,就都可以完成.在我认识的同学里面,有一直玩游戏的,也有一直钻研自己的东西的,也有学霸天天好好上课学习的,当然大部分都是完成正常课程同时业余时间玩自己的业余活动的同学居多的.</p>\n<p>但不管怎么样,不同的人也都在大四那年迎来了自己不同的结局.学习好的都找到了薪资更高的工作,奔赴北上广深,为自己的梦想不断前行.不怎么优秀但是为人脚踏实地的同学,也都能找到一份不错的工作;学习不太好,平时不太学习本专业知识的,最后也都会有自己的想法,去走不同的路.</p>\n<p>如果说大学前三年在学习知识,那么可以说大四就是在体验一份浓浓的人生咖啡.担任毕设老师中,也有不少非常不错的老师,在毕设期间,用他们的一言一行,传达给我们各种各样的人生技能和专业技能.让我受益匪浅.(<strong>曾老师</strong>就是我特别崇拜的一名毕设老师,当时他担任我的毕设老师,我也特比感谢可以在大学的最后一个阶段,遇到他,遇到这么好的一个老师)</p>\n<h2 id=\"手游的那些事\"><a href=\"#手游的那些事\" class=\"headerlink\" title=\"手游的那些事\"></a>手游的那些事</h2><p>先是感叹国内acg文化的茁壮发展，大概几年前,国内的宅er还要死要活翻墙去玩岛国的<strong>舰队collection</strong>,和自己的老婆相隔一个国度,还经常遇到<strong>猫</strong>危机(舰队collection连接服务器失败会弹出一只猫的画面)</p>\n<p>没想到过了不到几年,国内的宅er就有了很多国产老婆可以玩了~</p>\n<p><strong>少女前线</strong>就是一款枪械拟人的游戏,把不同的枪械变化为一个萌萌的妹子,然后宅er可以带着她们前往前线进行战斗,体验到美少女战斗的舒爽快感(反正我们就是喜欢小姐姐!)</p>\n<p>虽然我是不太喜欢这类游戏的,因为他们一般都会比较肝,特别耗时间去玩,不过当时由于其游戏性还不错(比舰娘要好玩),游戏剧情设置较合理,也是吸引我玩了一段时间.这款游戏还是在我无聊的时光里带给我了不少欢乐.虽然后来参与工作后,就不怎么玩,不过我也会偶尔去看看这游戏,真心希望官方可以好好的做好这个游戏,给这类游戏一个满意的答卷.而不是三分热度,捞一笔就跑路.</p>\n<p>本来以为这个小节我能讲很多,但没想到真正写的时候,缺没有什么值得讲的东西.</p>\n<ol>\n<li>我才不会讲我曾借助按键精灵写了一个按键脚本,在电脑上无限刷5-4.</li>\n<li>我才不会讲我曾因为剧情发展到关键时候,发帖说了”AR-15请千万不要出事”这些话语.</li>\n<li>我才不会讲半夜睡不着,是各个枪娘陪伴着我度过不眠之夜.</li>\n</ol>\n<p>好吧,要说的真的不多呢,这小节就到此为止吧! 祝愿少女前线可以在2018年能红红火火.</p>\n<h2 id=\"就业\"><a href=\"#就业\" class=\"headerlink\" title=\"就业\"></a>就业</h2><p>过了毕设那段时光后,便马不停蹄的前往了自己的工作单位进行相关工作.</p>\n<p>真正觉得自己还不够努力,但却有点无可奈何</p>\n<p>当时校招的时候,由于害怕一线城市的就业压力大,所以选择了二线城市的一个公司工作.<br>虽然工资在同行里不算很高,不过公司提供吃住方面都很不错,所以我很快就适应了工作岗位.</p>\n<p>一开始,我参与了公司的尝试性项目,这个项目主要是新人试水项目,简单来说就是看看你这人的能力怎么样.因为面试的过程中,有太多的包装,根本不知道招进来的人到底有多少能耐.所以我们公司都会有这类尝试性项目,专门丢给新人做,然后综合评估新人的代码能力,处理能力,团队沟通能力.</p>\n<p>幸运的是,我的工作表现貌似非常不错,那段时间生活就只有工作和休息,放弃了自己爱玩的游戏,放弃了自己爱看的动漫,全身心的投入到工作中去.</p>\n<p>程序员加班是难免的,更简单的说,21世纪加班都是不可难免的.初创公司就不说了,很多大公司应该也用经常加班加点干活.个人认为加班加点有部分是项目本身有问题,有部分也是自己的问题.一般来说,如果你很优秀,你完全可以写出非常易扩展和维护的代码,而降低自己返工的次数和时间.有时候需求是不明确的,这种时候就需要有一定的开发经验,去提前预见到一些需求,并且提前完成它.如果能做到这样的话,我想加班加点也一定会减少的.</p>\n<p>工作虽然重要,但是生活还是要继续</p>\n<p>在经过一段时间的拼命工作后,我也开始慢慢放慢自己的节奏,我更喜欢每天可以有时间去学习学习新技术,看看一些编程书籍,一些写的不错的博客,来提升自己的眼界.</p>\n<p>因为很多时候,我们的工作范围时很小的,这对自我的提升可以说是很小的.所以经常去看看别的技术,可以起到润滑剂的作用,让自己保持一定的鲜度,也会让自己工作更顺心.</p>\n<h2 id=\"对2018的祈祷\"><a href=\"#对2018的祈祷\" class=\"headerlink\" title=\"对2018的祈祷\"></a>对2018的祈祷</h2><p>来年我希望自己可以做到更多的事情</p>\n<ol>\n<li>遇到自己喜欢的老婆</li>\n<li>对自己要求高点,少玩游戏,多读书!</li>\n<li>工作要更加勤勤恳恳,认真对待!</li>\n<li>如果允许的话,想着可以找个杭州的工作!</li>\n<li>希望爸爸妈妈老去的更慢些!而自己要强大的更快些!</li>\n</ol>\n"},{"title":"在我的双硬盘windows电脑上安装ubuntu18.04-Desktop-LTS","date":"2019-04-30T08:12:21.000Z","_content":"\n在我的thinkpad电脑上安装ubuntu18.04-Desktop-LTS系统，达到windows+ubuntu的双系统环境\n\n## 我的电脑配置\n\nIntel i7-8550U，16GB内存，双硬盘256G的SSD，1T的机械硬盘，BOOT启动模式为UEFI,磁盘分区表模式是GPT，开机进入UEFI BIOS设置按住F12，磁盘分区情况如下：\n\n<img src=\"https://github.com/zazaluMonster/zazaluMonster.github.io/blob/hexo/themes/hexo-theme-cactus/source/images/tmpImage/%E5%AE%89%E8%A3%85%E5%89%8D%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA%E6%83%85%E5%86%B5.JPG?raw=true\" />\n\n## 制作ubuntu的U盘启动盘\n\n准备的材料\n1. ubuntu18.04-Desktop-LTS.iso镜像文件，在ubuntu官网就可以轻松下载\n2. 一个16GB的u盘\n3. Rufus，一个启动盘写入软件，官网下载最近版即可\n\n打开Rufus，按照如下配置：\n\n<img src=\"https://raw.githubusercontent.com/zazaluMonster/zazaluMonster.github.io/hexo/themes/hexo-theme-cactus/source/images/tmpImage/%E4%BD%BF%E7%94%A8Rufus%E5%88%9B%E9%80%A0U%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98.JPG\">\n\n分区类型选择GPT（因为我windows用的GPT分区），目标系统类型选择UEFI（因为我windows用的就是这个启动方式）\n文件系统选择FAT32（FAT虽然只支持最高4GB的文件大小，但是兼容性强，所以先选择这个文件系统，后面我会尝试使用NTFS）\n簇大小我用的默认8192字节(8K)\n\n点击开始后会弹出选择什么镜像模式写入，选择推荐的ISO镜像\n完成后u盘启动盘就制作完成了\n\n## 为ubuntu准备磁盘空间\n\n1. 在windows的系统盘C盘中预留10G，用于分配/boot分区（分配多一点，以防万一，如果你的SSD不够大的话，分2G应该就足以了）\n2. 在1T的机械硬盘中分割500G作为ubuntu系统存储使用\n\n如何分割？\n使用windows自带的磁盘管理工具，右键压缩卷，输入压缩的大小就是分割出来的磁盘空间（黑色显示未分配的部分）\n\n## 禁用快速启动fast startup\n我暂时没做，用起来没啥区别，估计底层做了一定处理\n\n\n## 关闭Secure Boot功能\n由于过去 cracker 经常借由 BIOS 开机阶段来破坏系统，并取得系统的控制权，因此 UEFI加入了一个所谓的安全启动 （secure boot） 机制。\n但是这个机制容易导致linux系统无法顺利开机，所以需要进行关闭\n\n关闭方式：\n重启电脑，按住F12打开BIOS界面，在该界面找到Secure Boot，改成disabled，然后保存重启即可（不同主版也许不同，具体请自己上网查询）\n\n## 正式安装ubuntu\n\n1. 插入我们u盘启动盘！\n2. 开机，按住f12！选中自己的USB设备，回车运行\n3. 选择install ubuntu\n4. 中间什么语言，键盘设定我就不做说明了，选自己喜欢的就行，最好english，可以提高自己\n5. 分区配置：\n    在SSD的未分配空间分：\n    /boot,至少2G,我给了10G,Logical逻辑分区(因为我的boot分区放在windows的SSD盘里，而这个SSD盘已经有windows的主分区了，所以这里我们选逻辑分区即可)\n    在HHD的未分配空间分：\n    /,至少15000MB，我给20G，逻辑分区\n    swap area,你电脑实际内存(RAM)的两倍，不过很多资料说基本不需要了，所以就随便给了16G，逻辑分区\n    /home,因为就我一个人用，所以把剩下的所有空间都放给这个用户文件夹，逻辑分区\n\n    所有分区位置都选择从头位置开始（beginning of the space）\n\n    最后一栏：\n    Device for boot loader installation:\n    选择刚刚我们分配的/boot对应的那个Device，意思就是把启动程序都装到那里\n\n    下面放2张参考图\n    <img src=\"https://github.com/zazaluMonster/zazaluMonster.github.io/blob/hexo/themes/hexo-theme-cactus/source/images/tmpImage/boot%E5%88%86%E5%8C%BA%E9%85%8D%E5%A5%BD%E5%90%8E%E6%88%AA%E5%9B%BE.png?raw=true\" title=\"boot分区配好后\">\n\n     <img src=\"https://raw.githubusercontent.com/zazaluMonster/zazaluMonster.github.io/hexo/themes/hexo-theme-cactus/source/images/tmpImage/root%E5%88%86%E5%8C%BAhome%E5%88%86%E5%8C%BAswap%E5%88%86%E5%8C%BA%E9%85%8D%E5%A5%BD%E5%90%8E.png\" title=\"root分区home分区swap分区配好后\">\n\n    全部搞定后点击下一步！\n6. 设置用户\n7. 等待安装完成，安装完成后提示重启\n8. 开机后会自动先进入UEFI界面，然后选择启动ubuntu即可\n\n## 总结\n\n到此为止，我个人在双硬盘windows上安装ubuntu18.04-Desktop-LTS的流程已经完毕，上面所描述的步骤都是我亲手秩序的过程，最后成功安装完毕\n\n\n参考：\n1. <http://myviewsonfoss.blogspot.com/2018/05/this-article-willshow-you-how-you-can.html>\n2. <https://blog.csdn.net/love666666shen/article/details/80947903>\n\n\n\n\n\n\n","source":"_posts/在我的双硬盘windows电脑上安装ubuntu18-04-Desktop-LTS.md","raw":"---\ntitle: 在我的双硬盘windows电脑上安装ubuntu18.04-Desktop-LTS\ntags: ubuntu\ncategories: IT\ndate: 2019-04-30 16:12:21\n---\n\n在我的thinkpad电脑上安装ubuntu18.04-Desktop-LTS系统，达到windows+ubuntu的双系统环境\n\n## 我的电脑配置\n\nIntel i7-8550U，16GB内存，双硬盘256G的SSD，1T的机械硬盘，BOOT启动模式为UEFI,磁盘分区表模式是GPT，开机进入UEFI BIOS设置按住F12，磁盘分区情况如下：\n\n<img src=\"https://github.com/zazaluMonster/zazaluMonster.github.io/blob/hexo/themes/hexo-theme-cactus/source/images/tmpImage/%E5%AE%89%E8%A3%85%E5%89%8D%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA%E6%83%85%E5%86%B5.JPG?raw=true\" />\n\n## 制作ubuntu的U盘启动盘\n\n准备的材料\n1. ubuntu18.04-Desktop-LTS.iso镜像文件，在ubuntu官网就可以轻松下载\n2. 一个16GB的u盘\n3. Rufus，一个启动盘写入软件，官网下载最近版即可\n\n打开Rufus，按照如下配置：\n\n<img src=\"https://raw.githubusercontent.com/zazaluMonster/zazaluMonster.github.io/hexo/themes/hexo-theme-cactus/source/images/tmpImage/%E4%BD%BF%E7%94%A8Rufus%E5%88%9B%E9%80%A0U%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98.JPG\">\n\n分区类型选择GPT（因为我windows用的GPT分区），目标系统类型选择UEFI（因为我windows用的就是这个启动方式）\n文件系统选择FAT32（FAT虽然只支持最高4GB的文件大小，但是兼容性强，所以先选择这个文件系统，后面我会尝试使用NTFS）\n簇大小我用的默认8192字节(8K)\n\n点击开始后会弹出选择什么镜像模式写入，选择推荐的ISO镜像\n完成后u盘启动盘就制作完成了\n\n## 为ubuntu准备磁盘空间\n\n1. 在windows的系统盘C盘中预留10G，用于分配/boot分区（分配多一点，以防万一，如果你的SSD不够大的话，分2G应该就足以了）\n2. 在1T的机械硬盘中分割500G作为ubuntu系统存储使用\n\n如何分割？\n使用windows自带的磁盘管理工具，右键压缩卷，输入压缩的大小就是分割出来的磁盘空间（黑色显示未分配的部分）\n\n## 禁用快速启动fast startup\n我暂时没做，用起来没啥区别，估计底层做了一定处理\n\n\n## 关闭Secure Boot功能\n由于过去 cracker 经常借由 BIOS 开机阶段来破坏系统，并取得系统的控制权，因此 UEFI加入了一个所谓的安全启动 （secure boot） 机制。\n但是这个机制容易导致linux系统无法顺利开机，所以需要进行关闭\n\n关闭方式：\n重启电脑，按住F12打开BIOS界面，在该界面找到Secure Boot，改成disabled，然后保存重启即可（不同主版也许不同，具体请自己上网查询）\n\n## 正式安装ubuntu\n\n1. 插入我们u盘启动盘！\n2. 开机，按住f12！选中自己的USB设备，回车运行\n3. 选择install ubuntu\n4. 中间什么语言，键盘设定我就不做说明了，选自己喜欢的就行，最好english，可以提高自己\n5. 分区配置：\n    在SSD的未分配空间分：\n    /boot,至少2G,我给了10G,Logical逻辑分区(因为我的boot分区放在windows的SSD盘里，而这个SSD盘已经有windows的主分区了，所以这里我们选逻辑分区即可)\n    在HHD的未分配空间分：\n    /,至少15000MB，我给20G，逻辑分区\n    swap area,你电脑实际内存(RAM)的两倍，不过很多资料说基本不需要了，所以就随便给了16G，逻辑分区\n    /home,因为就我一个人用，所以把剩下的所有空间都放给这个用户文件夹，逻辑分区\n\n    所有分区位置都选择从头位置开始（beginning of the space）\n\n    最后一栏：\n    Device for boot loader installation:\n    选择刚刚我们分配的/boot对应的那个Device，意思就是把启动程序都装到那里\n\n    下面放2张参考图\n    <img src=\"https://github.com/zazaluMonster/zazaluMonster.github.io/blob/hexo/themes/hexo-theme-cactus/source/images/tmpImage/boot%E5%88%86%E5%8C%BA%E9%85%8D%E5%A5%BD%E5%90%8E%E6%88%AA%E5%9B%BE.png?raw=true\" title=\"boot分区配好后\">\n\n     <img src=\"https://raw.githubusercontent.com/zazaluMonster/zazaluMonster.github.io/hexo/themes/hexo-theme-cactus/source/images/tmpImage/root%E5%88%86%E5%8C%BAhome%E5%88%86%E5%8C%BAswap%E5%88%86%E5%8C%BA%E9%85%8D%E5%A5%BD%E5%90%8E.png\" title=\"root分区home分区swap分区配好后\">\n\n    全部搞定后点击下一步！\n6. 设置用户\n7. 等待安装完成，安装完成后提示重启\n8. 开机后会自动先进入UEFI界面，然后选择启动ubuntu即可\n\n## 总结\n\n到此为止，我个人在双硬盘windows上安装ubuntu18.04-Desktop-LTS的流程已经完毕，上面所描述的步骤都是我亲手秩序的过程，最后成功安装完毕\n\n\n参考：\n1. <http://myviewsonfoss.blogspot.com/2018/05/this-article-willshow-you-how-you-can.html>\n2. <https://blog.csdn.net/love666666shen/article/details/80947903>\n\n\n\n\n\n\n","slug":"在我的双硬盘windows电脑上安装ubuntu18-04-Desktop-LTS","published":1,"updated":"2019-04-30T13:10:11.000Z","_id":"cjv3k3jue0008lk9vhw5e6bfh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在我的thinkpad电脑上安装ubuntu18.04-Desktop-LTS系统，达到windows+ubuntu的双系统环境</p>\n<h2 id=\"我的电脑配置\"><a href=\"#我的电脑配置\" class=\"headerlink\" title=\"我的电脑配置\"></a>我的电脑配置</h2><p>Intel i7-8550U，16GB内存，双硬盘256G的SSD，1T的机械硬盘，BOOT启动模式为UEFI,磁盘分区表模式是GPT，开机进入UEFI BIOS设置按住F12，磁盘分区情况如下：</p>\n<p><img src=\"https://github.com/zazaluMonster/zazaluMonster.github.io/blob/hexo/themes/hexo-theme-cactus/source/images/tmpImage/%E5%AE%89%E8%A3%85%E5%89%8D%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA%E6%83%85%E5%86%B5.JPG?raw=true\"></p>\n<h2 id=\"制作ubuntu的U盘启动盘\"><a href=\"#制作ubuntu的U盘启动盘\" class=\"headerlink\" title=\"制作ubuntu的U盘启动盘\"></a>制作ubuntu的U盘启动盘</h2><p>准备的材料</p>\n<ol>\n<li>ubuntu18.04-Desktop-LTS.iso镜像文件，在ubuntu官网就可以轻松下载</li>\n<li>一个16GB的u盘</li>\n<li>Rufus，一个启动盘写入软件，官网下载最近版即可</li>\n</ol>\n<p>打开Rufus，按照如下配置：</p>\n<p><img src=\"https://raw.githubusercontent.com/zazaluMonster/zazaluMonster.github.io/hexo/themes/hexo-theme-cactus/source/images/tmpImage/%E4%BD%BF%E7%94%A8Rufus%E5%88%9B%E9%80%A0U%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98.JPG\"></p>\n<p>分区类型选择GPT（因为我windows用的GPT分区），目标系统类型选择UEFI（因为我windows用的就是这个启动方式）<br>文件系统选择FAT32（FAT虽然只支持最高4GB的文件大小，但是兼容性强，所以先选择这个文件系统，后面我会尝试使用NTFS）<br>簇大小我用的默认8192字节(8K)</p>\n<p>点击开始后会弹出选择什么镜像模式写入，选择推荐的ISO镜像<br>完成后u盘启动盘就制作完成了</p>\n<h2 id=\"为ubuntu准备磁盘空间\"><a href=\"#为ubuntu准备磁盘空间\" class=\"headerlink\" title=\"为ubuntu准备磁盘空间\"></a>为ubuntu准备磁盘空间</h2><ol>\n<li>在windows的系统盘C盘中预留10G，用于分配/boot分区（分配多一点，以防万一，如果你的SSD不够大的话，分2G应该就足以了）</li>\n<li>在1T的机械硬盘中分割500G作为ubuntu系统存储使用</li>\n</ol>\n<p>如何分割？<br>使用windows自带的磁盘管理工具，右键压缩卷，输入压缩的大小就是分割出来的磁盘空间（黑色显示未分配的部分）</p>\n<h2 id=\"禁用快速启动fast-startup\"><a href=\"#禁用快速启动fast-startup\" class=\"headerlink\" title=\"禁用快速启动fast startup\"></a>禁用快速启动fast startup</h2><p>我暂时没做，用起来没啥区别，估计底层做了一定处理</p>\n<h2 id=\"关闭Secure-Boot功能\"><a href=\"#关闭Secure-Boot功能\" class=\"headerlink\" title=\"关闭Secure Boot功能\"></a>关闭Secure Boot功能</h2><p>由于过去 cracker 经常借由 BIOS 开机阶段来破坏系统，并取得系统的控制权，因此 UEFI加入了一个所谓的安全启动 （secure boot） 机制。<br>但是这个机制容易导致linux系统无法顺利开机，所以需要进行关闭</p>\n<p>关闭方式：<br>重启电脑，按住F12打开BIOS界面，在该界面找到Secure Boot，改成disabled，然后保存重启即可（不同主版也许不同，具体请自己上网查询）</p>\n<h2 id=\"正式安装ubuntu\"><a href=\"#正式安装ubuntu\" class=\"headerlink\" title=\"正式安装ubuntu\"></a>正式安装ubuntu</h2><ol>\n<li>插入我们u盘启动盘！</li>\n<li>开机，按住f12！选中自己的USB设备，回车运行</li>\n<li>选择install ubuntu</li>\n<li>中间什么语言，键盘设定我就不做说明了，选自己喜欢的就行，最好english，可以提高自己</li>\n<li><p>分区配置：<br> 在SSD的未分配空间分：<br> /boot,至少2G,我给了10G,Logical逻辑分区(因为我的boot分区放在windows的SSD盘里，而这个SSD盘已经有windows的主分区了，所以这里我们选逻辑分区即可)<br> 在HHD的未分配空间分：<br> /,至少15000MB，我给20G，逻辑分区<br> swap area,你电脑实际内存(RAM)的两倍，不过很多资料说基本不需要了，所以就随便给了16G，逻辑分区<br> /home,因为就我一个人用，所以把剩下的所有空间都放给这个用户文件夹，逻辑分区</p>\n<p> 所有分区位置都选择从头位置开始（beginning of the space）</p>\n<p> 最后一栏：<br> Device for boot loader installation:<br> 选择刚刚我们分配的/boot对应的那个Device，意思就是把启动程序都装到那里</p>\n<p> 下面放2张参考图<br> <img src=\"https://github.com/zazaluMonster/zazaluMonster.github.io/blob/hexo/themes/hexo-theme-cactus/source/images/tmpImage/boot%E5%88%86%E5%8C%BA%E9%85%8D%E5%A5%BD%E5%90%8E%E6%88%AA%E5%9B%BE.png?raw=true\" title=\"boot分区配好后\"></p>\n<p>  <img src=\"https://raw.githubusercontent.com/zazaluMonster/zazaluMonster.github.io/hexo/themes/hexo-theme-cactus/source/images/tmpImage/root%E5%88%86%E5%8C%BAhome%E5%88%86%E5%8C%BAswap%E5%88%86%E5%8C%BA%E9%85%8D%E5%A5%BD%E5%90%8E.png\" title=\"root分区home分区swap分区配好后\"></p>\n<p> 全部搞定后点击下一步！</p>\n</li>\n<li>设置用户</li>\n<li>等待安装完成，安装完成后提示重启</li>\n<li>开机后会自动先进入UEFI界面，然后选择启动ubuntu即可</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>到此为止，我个人在双硬盘windows上安装ubuntu18.04-Desktop-LTS的流程已经完毕，上面所描述的步骤都是我亲手秩序的过程，最后成功安装完毕</p>\n<p>参考：</p>\n<ol>\n<li><a href=\"http://myviewsonfoss.blogspot.com/2018/05/this-article-willshow-you-how-you-can.html\" target=\"_blank\" rel=\"noopener\">http://myviewsonfoss.blogspot.com/2018/05/this-article-willshow-you-how-you-can.html</a></li>\n<li><a href=\"https://blog.csdn.net/love666666shen/article/details/80947903\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/love666666shen/article/details/80947903</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>在我的thinkpad电脑上安装ubuntu18.04-Desktop-LTS系统，达到windows+ubuntu的双系统环境</p>\n<h2 id=\"我的电脑配置\"><a href=\"#我的电脑配置\" class=\"headerlink\" title=\"我的电脑配置\"></a>我的电脑配置</h2><p>Intel i7-8550U，16GB内存，双硬盘256G的SSD，1T的机械硬盘，BOOT启动模式为UEFI,磁盘分区表模式是GPT，开机进入UEFI BIOS设置按住F12，磁盘分区情况如下：</p>\n<p><img src=\"https://github.com/zazaluMonster/zazaluMonster.github.io/blob/hexo/themes/hexo-theme-cactus/source/images/tmpImage/%E5%AE%89%E8%A3%85%E5%89%8D%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA%E6%83%85%E5%86%B5.JPG?raw=true\"></p>\n<h2 id=\"制作ubuntu的U盘启动盘\"><a href=\"#制作ubuntu的U盘启动盘\" class=\"headerlink\" title=\"制作ubuntu的U盘启动盘\"></a>制作ubuntu的U盘启动盘</h2><p>准备的材料</p>\n<ol>\n<li>ubuntu18.04-Desktop-LTS.iso镜像文件，在ubuntu官网就可以轻松下载</li>\n<li>一个16GB的u盘</li>\n<li>Rufus，一个启动盘写入软件，官网下载最近版即可</li>\n</ol>\n<p>打开Rufus，按照如下配置：</p>\n<p><img src=\"https://raw.githubusercontent.com/zazaluMonster/zazaluMonster.github.io/hexo/themes/hexo-theme-cactus/source/images/tmpImage/%E4%BD%BF%E7%94%A8Rufus%E5%88%9B%E9%80%A0U%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98.JPG\"></p>\n<p>分区类型选择GPT（因为我windows用的GPT分区），目标系统类型选择UEFI（因为我windows用的就是这个启动方式）<br>文件系统选择FAT32（FAT虽然只支持最高4GB的文件大小，但是兼容性强，所以先选择这个文件系统，后面我会尝试使用NTFS）<br>簇大小我用的默认8192字节(8K)</p>\n<p>点击开始后会弹出选择什么镜像模式写入，选择推荐的ISO镜像<br>完成后u盘启动盘就制作完成了</p>\n<h2 id=\"为ubuntu准备磁盘空间\"><a href=\"#为ubuntu准备磁盘空间\" class=\"headerlink\" title=\"为ubuntu准备磁盘空间\"></a>为ubuntu准备磁盘空间</h2><ol>\n<li>在windows的系统盘C盘中预留10G，用于分配/boot分区（分配多一点，以防万一，如果你的SSD不够大的话，分2G应该就足以了）</li>\n<li>在1T的机械硬盘中分割500G作为ubuntu系统存储使用</li>\n</ol>\n<p>如何分割？<br>使用windows自带的磁盘管理工具，右键压缩卷，输入压缩的大小就是分割出来的磁盘空间（黑色显示未分配的部分）</p>\n<h2 id=\"禁用快速启动fast-startup\"><a href=\"#禁用快速启动fast-startup\" class=\"headerlink\" title=\"禁用快速启动fast startup\"></a>禁用快速启动fast startup</h2><p>我暂时没做，用起来没啥区别，估计底层做了一定处理</p>\n<h2 id=\"关闭Secure-Boot功能\"><a href=\"#关闭Secure-Boot功能\" class=\"headerlink\" title=\"关闭Secure Boot功能\"></a>关闭Secure Boot功能</h2><p>由于过去 cracker 经常借由 BIOS 开机阶段来破坏系统，并取得系统的控制权，因此 UEFI加入了一个所谓的安全启动 （secure boot） 机制。<br>但是这个机制容易导致linux系统无法顺利开机，所以需要进行关闭</p>\n<p>关闭方式：<br>重启电脑，按住F12打开BIOS界面，在该界面找到Secure Boot，改成disabled，然后保存重启即可（不同主版也许不同，具体请自己上网查询）</p>\n<h2 id=\"正式安装ubuntu\"><a href=\"#正式安装ubuntu\" class=\"headerlink\" title=\"正式安装ubuntu\"></a>正式安装ubuntu</h2><ol>\n<li>插入我们u盘启动盘！</li>\n<li>开机，按住f12！选中自己的USB设备，回车运行</li>\n<li>选择install ubuntu</li>\n<li>中间什么语言，键盘设定我就不做说明了，选自己喜欢的就行，最好english，可以提高自己</li>\n<li><p>分区配置：<br> 在SSD的未分配空间分：<br> /boot,至少2G,我给了10G,Logical逻辑分区(因为我的boot分区放在windows的SSD盘里，而这个SSD盘已经有windows的主分区了，所以这里我们选逻辑分区即可)<br> 在HHD的未分配空间分：<br> /,至少15000MB，我给20G，逻辑分区<br> swap area,你电脑实际内存(RAM)的两倍，不过很多资料说基本不需要了，所以就随便给了16G，逻辑分区<br> /home,因为就我一个人用，所以把剩下的所有空间都放给这个用户文件夹，逻辑分区</p>\n<p> 所有分区位置都选择从头位置开始（beginning of the space）</p>\n<p> 最后一栏：<br> Device for boot loader installation:<br> 选择刚刚我们分配的/boot对应的那个Device，意思就是把启动程序都装到那里</p>\n<p> 下面放2张参考图<br> <img src=\"https://github.com/zazaluMonster/zazaluMonster.github.io/blob/hexo/themes/hexo-theme-cactus/source/images/tmpImage/boot%E5%88%86%E5%8C%BA%E9%85%8D%E5%A5%BD%E5%90%8E%E6%88%AA%E5%9B%BE.png?raw=true\" title=\"boot分区配好后\"></p>\n<p>  <img src=\"https://raw.githubusercontent.com/zazaluMonster/zazaluMonster.github.io/hexo/themes/hexo-theme-cactus/source/images/tmpImage/root%E5%88%86%E5%8C%BAhome%E5%88%86%E5%8C%BAswap%E5%88%86%E5%8C%BA%E9%85%8D%E5%A5%BD%E5%90%8E.png\" title=\"root分区home分区swap分区配好后\"></p>\n<p> 全部搞定后点击下一步！</p>\n</li>\n<li>设置用户</li>\n<li>等待安装完成，安装完成后提示重启</li>\n<li>开机后会自动先进入UEFI界面，然后选择启动ubuntu即可</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>到此为止，我个人在双硬盘windows上安装ubuntu18.04-Desktop-LTS的流程已经完毕，上面所描述的步骤都是我亲手秩序的过程，最后成功安装完毕</p>\n<p>参考：</p>\n<ol>\n<li><a href=\"http://myviewsonfoss.blogspot.com/2018/05/this-article-willshow-you-how-you-can.html\" target=\"_blank\" rel=\"noopener\">http://myviewsonfoss.blogspot.com/2018/05/this-article-willshow-you-how-you-can.html</a></li>\n<li><a href=\"https://blog.csdn.net/love666666shen/article/details/80947903\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/love666666shen/article/details/80947903</a></li>\n</ol>\n"},{"title":"使用JavaSeurity进行数字签名(二)","date":"2019-04-24T06:45:12.000Z","_content":"\n在上一章中，我们使用JavaSeurityAPI对dsaSignFile文件进行了一次数字签名，并且将其数字签名以及公钥都保存到了本地硬盘的相应文件中。作为发送方，我们通过各种“交通”手段，将这三个文件一一发给了接收方。在本章我们就来展示接收方如何使用这三个文件，对数字签名进行验证，最终确定dsaSignFile的确实是由发送方发出的\n\n>什么是验签\n\n接收方获取到原数据文件，公钥文件，数字签名文件后，使用这三个文件便可以完成验签。验签的基本流程简单来说如下\n\n1. 使用公钥文件将数字签名还原为散列值A\n2. 使用加签时相同的算法获取原数据文件的散列值B\n3. 对比A和B是否一致，若一致便说明数字签名正确，该文件确实是发送方发出，而不是由别人篡改后发出的\n\n>JavaSeurity进行验签\n\n1.使用公钥文件获取公钥\n```java\nprivate PublicKey getPubFromPubFile(File pubFile) throws IOException, NoSuchAlgorithmException, InvalidKeySpecException {\n        //从文件中获取公钥字节数据\n        FileInputStream keyfis = new FileInputStream(pubFile);\n        byte[] encKey = new byte[keyfis.available()];\n        keyfis.read(encKey);\n        keyfis.close();\n        //先将公钥字节数据转换为key specification，只有key specification才能使用KeyFactory转化为PublicKey Object\n        //key specification你可以理解为密钥的一种格式，是密钥字节数据的升级\n        X509EncodedKeySpec pubKeySpec = new X509EncodedKeySpec(encKey);\n        //使用KeyFactory，通过key specification获取PublicKey Object\n        KeyFactory keyFactory = KeyFactory.getInstance(\"RSA\");\n        PublicKey pubKey = keyFactory.generatePublic(pubKeySpec);\n        return pubKey;\n    }\n```\n\n2.使用数字签名文件获取数字签名字节数据\n```java\nprivate byte[] getSignatureBytesFromSignFile(File signFile) throws IOException {\n        FileInputStream sigfis = new FileInputStream(signFile);\n        byte[] sigToVerify = new byte[sigfis.available()];\n        sigfis.read(sigToVerify);\n        sigfis.close();\n        return sigToVerify;\n    }\n```\n\n3.使用原数据，公钥，数字签名字节数据验证正确性\n```java\nprivate boolean verifySignature(PublicKey publicKey,File dataFile,byte[] sigToVerify) throws NoSuchAlgorithmException, InvalidKeyException, IOException, SignatureException {\n        //这次我们使用公钥初始化签名器\n        Signature sig = Signature.getInstance(\"SHA1withRSA\");\n        sig.initVerify(publicKey);\n        //将原数据导入签名器\n        FileInputStream datafis = new FileInputStream(dataFile);\n        BufferedInputStream bufin = new BufferedInputStream(datafis);\n        byte[] buffer = new byte[1024];\n        int len;\n        while (bufin.available() != 0) {\n            len = bufin.read(buffer);\n            sig.update(buffer, 0, len);\n        }\n        bufin.close();\n        //使用签名器进行验证\n        boolean verifies = sig.verify(sigToVerify);\n        return verifies;\n    }\n```\n\n4.前三步整合为一个验签程序如下\n```java\n@Test\n    public void verifySign() throws NoSuchAlgorithmException, IOException, InvalidKeySpecException, SignatureException, InvalidKeyException {\n        String pubKeyDataFileUrl = \"src/test/resource/pubKeyData\";\n        PublicKey publicKey = getPubFromPubFile(new File(pubKeyDataFileUrl));\n        String signDataFileUrl = \"src/test/resource/signData\" ;\n        byte[] sigToVerify = getSignatureBytesFromSignFile(new File(signDataFileUrl));\n        String dsaSignFileUrl = \"src/test/resource/dsaSignFile\" ;\n        boolean verifies = verifySignature(publicKey,new File(dsaSignFileUrl),sigToVerify);\n        System.out.println(\"signature verifies: \" + verifies);\n    }\n```\n\n>存在的隐患\n\n到目前为止，使用Java进行加签验签的过程已经全部测试完毕了，但是在我们的这个流程中存在一个隐患。那就是我们不能确保接收方获得的公钥文件是正确的。\n\n打个比方，如果发送方在发出原数据，公钥文件，数字签名文件后，被中间人拦截。中间人为了达到自己的目的，篡改了原数据的内容，并且使用自己的私钥重新生成了一份新的数字签名文件，并且把公钥文件也替换为自己的公钥文件。然后将这三个文件再发送给接收方。接收方的验签过程并不会报错，从而导致接收方将错误的信息信以为真。\n\n为了避免这样的情况发生，目前的解决方法之一就是使用数字证书。一个数字证书是由国际上公认的机构进行颁发，每个数字证书中包含了发送方的公钥，以及一个该证书内容的数字签名。接收方则在本地密钥库中寻找该数字证书所对应的公钥数据，如果存在，则使用它解开这个数字证书，随后拿到发送方的公钥。这个过程中最终我们的信任方是计算机本地存储的受信任的根证书列表，只要保证它的正常运作，那么就不会发生被人篡改的情况\n\n>小节\njava的数字签名练习就到此结束了。本来我还想着写一下RSA加解密，但是发现其实在流程本质上和数字签名是一致的，所以就不浪费时间重新赘述了","source":"_posts/使用JavaSeurity进行数字签名-二.md","raw":"---\ntitle: 使用JavaSeurity进行数字签名(二)\ntags: signature\ncategories: IT\ndate: 2019-04-24 14:45:12\n---\n\n在上一章中，我们使用JavaSeurityAPI对dsaSignFile文件进行了一次数字签名，并且将其数字签名以及公钥都保存到了本地硬盘的相应文件中。作为发送方，我们通过各种“交通”手段，将这三个文件一一发给了接收方。在本章我们就来展示接收方如何使用这三个文件，对数字签名进行验证，最终确定dsaSignFile的确实是由发送方发出的\n\n>什么是验签\n\n接收方获取到原数据文件，公钥文件，数字签名文件后，使用这三个文件便可以完成验签。验签的基本流程简单来说如下\n\n1. 使用公钥文件将数字签名还原为散列值A\n2. 使用加签时相同的算法获取原数据文件的散列值B\n3. 对比A和B是否一致，若一致便说明数字签名正确，该文件确实是发送方发出，而不是由别人篡改后发出的\n\n>JavaSeurity进行验签\n\n1.使用公钥文件获取公钥\n```java\nprivate PublicKey getPubFromPubFile(File pubFile) throws IOException, NoSuchAlgorithmException, InvalidKeySpecException {\n        //从文件中获取公钥字节数据\n        FileInputStream keyfis = new FileInputStream(pubFile);\n        byte[] encKey = new byte[keyfis.available()];\n        keyfis.read(encKey);\n        keyfis.close();\n        //先将公钥字节数据转换为key specification，只有key specification才能使用KeyFactory转化为PublicKey Object\n        //key specification你可以理解为密钥的一种格式，是密钥字节数据的升级\n        X509EncodedKeySpec pubKeySpec = new X509EncodedKeySpec(encKey);\n        //使用KeyFactory，通过key specification获取PublicKey Object\n        KeyFactory keyFactory = KeyFactory.getInstance(\"RSA\");\n        PublicKey pubKey = keyFactory.generatePublic(pubKeySpec);\n        return pubKey;\n    }\n```\n\n2.使用数字签名文件获取数字签名字节数据\n```java\nprivate byte[] getSignatureBytesFromSignFile(File signFile) throws IOException {\n        FileInputStream sigfis = new FileInputStream(signFile);\n        byte[] sigToVerify = new byte[sigfis.available()];\n        sigfis.read(sigToVerify);\n        sigfis.close();\n        return sigToVerify;\n    }\n```\n\n3.使用原数据，公钥，数字签名字节数据验证正确性\n```java\nprivate boolean verifySignature(PublicKey publicKey,File dataFile,byte[] sigToVerify) throws NoSuchAlgorithmException, InvalidKeyException, IOException, SignatureException {\n        //这次我们使用公钥初始化签名器\n        Signature sig = Signature.getInstance(\"SHA1withRSA\");\n        sig.initVerify(publicKey);\n        //将原数据导入签名器\n        FileInputStream datafis = new FileInputStream(dataFile);\n        BufferedInputStream bufin = new BufferedInputStream(datafis);\n        byte[] buffer = new byte[1024];\n        int len;\n        while (bufin.available() != 0) {\n            len = bufin.read(buffer);\n            sig.update(buffer, 0, len);\n        }\n        bufin.close();\n        //使用签名器进行验证\n        boolean verifies = sig.verify(sigToVerify);\n        return verifies;\n    }\n```\n\n4.前三步整合为一个验签程序如下\n```java\n@Test\n    public void verifySign() throws NoSuchAlgorithmException, IOException, InvalidKeySpecException, SignatureException, InvalidKeyException {\n        String pubKeyDataFileUrl = \"src/test/resource/pubKeyData\";\n        PublicKey publicKey = getPubFromPubFile(new File(pubKeyDataFileUrl));\n        String signDataFileUrl = \"src/test/resource/signData\" ;\n        byte[] sigToVerify = getSignatureBytesFromSignFile(new File(signDataFileUrl));\n        String dsaSignFileUrl = \"src/test/resource/dsaSignFile\" ;\n        boolean verifies = verifySignature(publicKey,new File(dsaSignFileUrl),sigToVerify);\n        System.out.println(\"signature verifies: \" + verifies);\n    }\n```\n\n>存在的隐患\n\n到目前为止，使用Java进行加签验签的过程已经全部测试完毕了，但是在我们的这个流程中存在一个隐患。那就是我们不能确保接收方获得的公钥文件是正确的。\n\n打个比方，如果发送方在发出原数据，公钥文件，数字签名文件后，被中间人拦截。中间人为了达到自己的目的，篡改了原数据的内容，并且使用自己的私钥重新生成了一份新的数字签名文件，并且把公钥文件也替换为自己的公钥文件。然后将这三个文件再发送给接收方。接收方的验签过程并不会报错，从而导致接收方将错误的信息信以为真。\n\n为了避免这样的情况发生，目前的解决方法之一就是使用数字证书。一个数字证书是由国际上公认的机构进行颁发，每个数字证书中包含了发送方的公钥，以及一个该证书内容的数字签名。接收方则在本地密钥库中寻找该数字证书所对应的公钥数据，如果存在，则使用它解开这个数字证书，随后拿到发送方的公钥。这个过程中最终我们的信任方是计算机本地存储的受信任的根证书列表，只要保证它的正常运作，那么就不会发生被人篡改的情况\n\n>小节\njava的数字签名练习就到此结束了。本来我还想着写一下RSA加解密，但是发现其实在流程本质上和数字签名是一致的，所以就不浪费时间重新赘述了","slug":"使用JavaSeurity进行数字签名-二","published":1,"updated":"2019-04-25T03:17:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjv3k3juh000alk9vnfg9lrng","content":"<p>在上一章中，我们使用JavaSeurityAPI对dsaSignFile文件进行了一次数字签名，并且将其数字签名以及公钥都保存到了本地硬盘的相应文件中。作为发送方，我们通过各种“交通”手段，将这三个文件一一发给了接收方。在本章我们就来展示接收方如何使用这三个文件，对数字签名进行验证，最终确定dsaSignFile的确实是由发送方发出的</p>\n<blockquote>\n<p>什么是验签</p>\n</blockquote>\n<p>接收方获取到原数据文件，公钥文件，数字签名文件后，使用这三个文件便可以完成验签。验签的基本流程简单来说如下</p>\n<ol>\n<li>使用公钥文件将数字签名还原为散列值A</li>\n<li>使用加签时相同的算法获取原数据文件的散列值B</li>\n<li>对比A和B是否一致，若一致便说明数字签名正确，该文件确实是发送方发出，而不是由别人篡改后发出的</li>\n</ol>\n<blockquote>\n<p>JavaSeurity进行验签</p>\n</blockquote>\n<p>1.使用公钥文件获取公钥<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> PublicKey <span class=\"title\">getPubFromPubFile</span><span class=\"params\">(File pubFile)</span> <span class=\"keyword\">throws</span> IOException, NoSuchAlgorithmException, InvalidKeySpecException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//从文件中获取公钥字节数据</span></span><br><span class=\"line\">        FileInputStream keyfis = <span class=\"keyword\">new</span> FileInputStream(pubFile);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] encKey = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[keyfis.available()];</span><br><span class=\"line\">        keyfis.read(encKey);</span><br><span class=\"line\">        keyfis.close();</span><br><span class=\"line\">        <span class=\"comment\">//先将公钥字节数据转换为key specification，只有key specification才能使用KeyFactory转化为PublicKey Object</span></span><br><span class=\"line\">        <span class=\"comment\">//key specification你可以理解为密钥的一种格式，是密钥字节数据的升级</span></span><br><span class=\"line\">        X509EncodedKeySpec pubKeySpec = <span class=\"keyword\">new</span> X509EncodedKeySpec(encKey);</span><br><span class=\"line\">        <span class=\"comment\">//使用KeyFactory，通过key specification获取PublicKey Object</span></span><br><span class=\"line\">        KeyFactory keyFactory = KeyFactory.getInstance(<span class=\"string\">\"RSA\"</span>);</span><br><span class=\"line\">        PublicKey pubKey = keyFactory.generatePublic(pubKeySpec);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pubKey;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p>2.使用数字签名文件获取数字签名字节数据<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">byte</span>[] getSignatureBytesFromSignFile(File signFile) <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        FileInputStream sigfis = <span class=\"keyword\">new</span> FileInputStream(signFile);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] sigToVerify = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[sigfis.available()];</span><br><span class=\"line\">        sigfis.read(sigToVerify);</span><br><span class=\"line\">        sigfis.close();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sigToVerify;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p>3.使用原数据，公钥，数字签名字节数据验证正确性<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> <span class=\"title\">verifySignature</span><span class=\"params\">(PublicKey publicKey,File dataFile,<span class=\"keyword\">byte</span>[] sigToVerify)</span> <span class=\"keyword\">throws</span> NoSuchAlgorithmException, InvalidKeyException, IOException, SignatureException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//这次我们使用公钥初始化签名器</span></span><br><span class=\"line\">        Signature sig = Signature.getInstance(<span class=\"string\">\"SHA1withRSA\"</span>);</span><br><span class=\"line\">        sig.initVerify(publicKey);</span><br><span class=\"line\">        <span class=\"comment\">//将原数据导入签名器</span></span><br><span class=\"line\">        FileInputStream datafis = <span class=\"keyword\">new</span> FileInputStream(dataFile);</span><br><span class=\"line\">        BufferedInputStream bufin = <span class=\"keyword\">new</span> BufferedInputStream(datafis);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (bufin.available() != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            len = bufin.read(buffer);</span><br><span class=\"line\">            sig.update(buffer, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        bufin.close();</span><br><span class=\"line\">        <span class=\"comment\">//使用签名器进行验证</span></span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> verifies = sig.verify(sigToVerify);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> verifies;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p>4.前三步整合为一个验签程序如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">verifySign</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> NoSuchAlgorithmException, IOException, InvalidKeySpecException, SignatureException, InvalidKeyException </span>&#123;</span><br><span class=\"line\">        String pubKeyDataFileUrl = <span class=\"string\">\"src/test/resource/pubKeyData\"</span>;</span><br><span class=\"line\">        PublicKey publicKey = getPubFromPubFile(<span class=\"keyword\">new</span> File(pubKeyDataFileUrl));</span><br><span class=\"line\">        String signDataFileUrl = <span class=\"string\">\"src/test/resource/signData\"</span> ;</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] sigToVerify = getSignatureBytesFromSignFile(<span class=\"keyword\">new</span> File(signDataFileUrl));</span><br><span class=\"line\">        String dsaSignFileUrl = <span class=\"string\">\"src/test/resource/dsaSignFile\"</span> ;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> verifies = verifySignature(publicKey,<span class=\"keyword\">new</span> File(dsaSignFileUrl),sigToVerify);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"signature verifies: \"</span> + verifies);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>存在的隐患</p>\n</blockquote>\n<p>到目前为止，使用Java进行加签验签的过程已经全部测试完毕了，但是在我们的这个流程中存在一个隐患。那就是我们不能确保接收方获得的公钥文件是正确的。</p>\n<p>打个比方，如果发送方在发出原数据，公钥文件，数字签名文件后，被中间人拦截。中间人为了达到自己的目的，篡改了原数据的内容，并且使用自己的私钥重新生成了一份新的数字签名文件，并且把公钥文件也替换为自己的公钥文件。然后将这三个文件再发送给接收方。接收方的验签过程并不会报错，从而导致接收方将错误的信息信以为真。</p>\n<p>为了避免这样的情况发生，目前的解决方法之一就是使用数字证书。一个数字证书是由国际上公认的机构进行颁发，每个数字证书中包含了发送方的公钥，以及一个该证书内容的数字签名。接收方则在本地密钥库中寻找该数字证书所对应的公钥数据，如果存在，则使用它解开这个数字证书，随后拿到发送方的公钥。这个过程中最终我们的信任方是计算机本地存储的受信任的根证书列表，只要保证它的正常运作，那么就不会发生被人篡改的情况</p>\n<blockquote>\n<p>小节<br>java的数字签名练习就到此结束了。本来我还想着写一下RSA加解密，但是发现其实在流程本质上和数字签名是一致的，所以就不浪费时间重新赘述了</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>在上一章中，我们使用JavaSeurityAPI对dsaSignFile文件进行了一次数字签名，并且将其数字签名以及公钥都保存到了本地硬盘的相应文件中。作为发送方，我们通过各种“交通”手段，将这三个文件一一发给了接收方。在本章我们就来展示接收方如何使用这三个文件，对数字签名进行验证，最终确定dsaSignFile的确实是由发送方发出的</p>\n<blockquote>\n<p>什么是验签</p>\n</blockquote>\n<p>接收方获取到原数据文件，公钥文件，数字签名文件后，使用这三个文件便可以完成验签。验签的基本流程简单来说如下</p>\n<ol>\n<li>使用公钥文件将数字签名还原为散列值A</li>\n<li>使用加签时相同的算法获取原数据文件的散列值B</li>\n<li>对比A和B是否一致，若一致便说明数字签名正确，该文件确实是发送方发出，而不是由别人篡改后发出的</li>\n</ol>\n<blockquote>\n<p>JavaSeurity进行验签</p>\n</blockquote>\n<p>1.使用公钥文件获取公钥<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> PublicKey <span class=\"title\">getPubFromPubFile</span><span class=\"params\">(File pubFile)</span> <span class=\"keyword\">throws</span> IOException, NoSuchAlgorithmException, InvalidKeySpecException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//从文件中获取公钥字节数据</span></span><br><span class=\"line\">        FileInputStream keyfis = <span class=\"keyword\">new</span> FileInputStream(pubFile);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] encKey = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[keyfis.available()];</span><br><span class=\"line\">        keyfis.read(encKey);</span><br><span class=\"line\">        keyfis.close();</span><br><span class=\"line\">        <span class=\"comment\">//先将公钥字节数据转换为key specification，只有key specification才能使用KeyFactory转化为PublicKey Object</span></span><br><span class=\"line\">        <span class=\"comment\">//key specification你可以理解为密钥的一种格式，是密钥字节数据的升级</span></span><br><span class=\"line\">        X509EncodedKeySpec pubKeySpec = <span class=\"keyword\">new</span> X509EncodedKeySpec(encKey);</span><br><span class=\"line\">        <span class=\"comment\">//使用KeyFactory，通过key specification获取PublicKey Object</span></span><br><span class=\"line\">        KeyFactory keyFactory = KeyFactory.getInstance(<span class=\"string\">\"RSA\"</span>);</span><br><span class=\"line\">        PublicKey pubKey = keyFactory.generatePublic(pubKeySpec);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pubKey;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p>2.使用数字签名文件获取数字签名字节数据<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">byte</span>[] getSignatureBytesFromSignFile(File signFile) <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        FileInputStream sigfis = <span class=\"keyword\">new</span> FileInputStream(signFile);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] sigToVerify = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[sigfis.available()];</span><br><span class=\"line\">        sigfis.read(sigToVerify);</span><br><span class=\"line\">        sigfis.close();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sigToVerify;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p>3.使用原数据，公钥，数字签名字节数据验证正确性<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> <span class=\"title\">verifySignature</span><span class=\"params\">(PublicKey publicKey,File dataFile,<span class=\"keyword\">byte</span>[] sigToVerify)</span> <span class=\"keyword\">throws</span> NoSuchAlgorithmException, InvalidKeyException, IOException, SignatureException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//这次我们使用公钥初始化签名器</span></span><br><span class=\"line\">        Signature sig = Signature.getInstance(<span class=\"string\">\"SHA1withRSA\"</span>);</span><br><span class=\"line\">        sig.initVerify(publicKey);</span><br><span class=\"line\">        <span class=\"comment\">//将原数据导入签名器</span></span><br><span class=\"line\">        FileInputStream datafis = <span class=\"keyword\">new</span> FileInputStream(dataFile);</span><br><span class=\"line\">        BufferedInputStream bufin = <span class=\"keyword\">new</span> BufferedInputStream(datafis);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (bufin.available() != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            len = bufin.read(buffer);</span><br><span class=\"line\">            sig.update(buffer, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        bufin.close();</span><br><span class=\"line\">        <span class=\"comment\">//使用签名器进行验证</span></span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> verifies = sig.verify(sigToVerify);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> verifies;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p>4.前三步整合为一个验签程序如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">verifySign</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> NoSuchAlgorithmException, IOException, InvalidKeySpecException, SignatureException, InvalidKeyException </span>&#123;</span><br><span class=\"line\">        String pubKeyDataFileUrl = <span class=\"string\">\"src/test/resource/pubKeyData\"</span>;</span><br><span class=\"line\">        PublicKey publicKey = getPubFromPubFile(<span class=\"keyword\">new</span> File(pubKeyDataFileUrl));</span><br><span class=\"line\">        String signDataFileUrl = <span class=\"string\">\"src/test/resource/signData\"</span> ;</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] sigToVerify = getSignatureBytesFromSignFile(<span class=\"keyword\">new</span> File(signDataFileUrl));</span><br><span class=\"line\">        String dsaSignFileUrl = <span class=\"string\">\"src/test/resource/dsaSignFile\"</span> ;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> verifies = verifySignature(publicKey,<span class=\"keyword\">new</span> File(dsaSignFileUrl),sigToVerify);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"signature verifies: \"</span> + verifies);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>存在的隐患</p>\n</blockquote>\n<p>到目前为止，使用Java进行加签验签的过程已经全部测试完毕了，但是在我们的这个流程中存在一个隐患。那就是我们不能确保接收方获得的公钥文件是正确的。</p>\n<p>打个比方，如果发送方在发出原数据，公钥文件，数字签名文件后，被中间人拦截。中间人为了达到自己的目的，篡改了原数据的内容，并且使用自己的私钥重新生成了一份新的数字签名文件，并且把公钥文件也替换为自己的公钥文件。然后将这三个文件再发送给接收方。接收方的验签过程并不会报错，从而导致接收方将错误的信息信以为真。</p>\n<p>为了避免这样的情况发生，目前的解决方法之一就是使用数字证书。一个数字证书是由国际上公认的机构进行颁发，每个数字证书中包含了发送方的公钥，以及一个该证书内容的数字签名。接收方则在本地密钥库中寻找该数字证书所对应的公钥数据，如果存在，则使用它解开这个数字证书，随后拿到发送方的公钥。这个过程中最终我们的信任方是计算机本地存储的受信任的根证书列表，只要保证它的正常运作，那么就不会发生被人篡改的情况</p>\n<blockquote>\n<p>小节<br>java的数字签名练习就到此结束了。本来我还想着写一下RSA加解密，但是发现其实在流程本质上和数字签名是一致的，所以就不浪费时间重新赘述了</p>\n</blockquote>\n"},{"title":"2019我的个人电脑机械硬盘问题引发的故事","date":"2019-04-24T12:41:47.000Z","_content":"\n最近一直用着的MBP，突然机械硬盘出现问题，导致部分数据丢失，其中就包括了我的博客源文件。最早开发我自己博客的时候，写了一大堆自定义css和js文件，且当时没有良好的打包备份思想，导致今天让自己跳进坑里。\n\nhexo博客源文件丢失后，唯一能找回的数据只剩下github上，每次deploy的时候上传的那些文件。\n\n但是那些是模版技术在本地执行后生成好的完整的html文件，打开一看，自然里面排版异常难看，想把自己的数据找回着实不易。\n\n最后自己干脆把网页显示后上的文字通通复制到本地，然后在本地重新初始化了hexo相关配置，经过了几个小时的奋斗，总算把自己的博客内容失而复得。虽然那些看上去好玩的css和js不见了，但是现在想来，那些东西都是没有啥参考意义的乱码罢了，故舍弃之。转而从新选择了一个风格简单的主题作为今后的blog主打风格。同时也转移了live2d看伴娘的模块（觉得唯一值得保护的一个模块）。\n\n因为不想再吃源代码丢失的苦痛，这次使用了备份分支，专门将本地源文件也上传至github，今后就可以放心了\n\n差不多就这些,后续可能会针对hexo博客备份专门写一篇操作文档进行记录\n","source":"_posts/2019我的个人电脑机械硬盘问题引发的故事.md","raw":"---\ntitle: 2019我的个人电脑机械硬盘问题引发的故事\ncategories: IT\ndate: 2019-04-24 20:41:47\n---\n\n最近一直用着的MBP，突然机械硬盘出现问题，导致部分数据丢失，其中就包括了我的博客源文件。最早开发我自己博客的时候，写了一大堆自定义css和js文件，且当时没有良好的打包备份思想，导致今天让自己跳进坑里。\n\nhexo博客源文件丢失后，唯一能找回的数据只剩下github上，每次deploy的时候上传的那些文件。\n\n但是那些是模版技术在本地执行后生成好的完整的html文件，打开一看，自然里面排版异常难看，想把自己的数据找回着实不易。\n\n最后自己干脆把网页显示后上的文字通通复制到本地，然后在本地重新初始化了hexo相关配置，经过了几个小时的奋斗，总算把自己的博客内容失而复得。虽然那些看上去好玩的css和js不见了，但是现在想来，那些东西都是没有啥参考意义的乱码罢了，故舍弃之。转而从新选择了一个风格简单的主题作为今后的blog主打风格。同时也转移了live2d看伴娘的模块（觉得唯一值得保护的一个模块）。\n\n因为不想再吃源代码丢失的苦痛，这次使用了备份分支，专门将本地源文件也上传至github，今后就可以放心了\n\n差不多就这些,后续可能会针对hexo博客备份专门写一篇操作文档进行记录\n","slug":"2019我的个人电脑机械硬盘问题引发的故事","published":1,"updated":"2019-04-25T03:17:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjv3k3jum000elk9vuaionh0f","content":"<p>最近一直用着的MBP，突然机械硬盘出现问题，导致部分数据丢失，其中就包括了我的博客源文件。最早开发我自己博客的时候，写了一大堆自定义css和js文件，且当时没有良好的打包备份思想，导致今天让自己跳进坑里。</p>\n<p>hexo博客源文件丢失后，唯一能找回的数据只剩下github上，每次deploy的时候上传的那些文件。</p>\n<p>但是那些是模版技术在本地执行后生成好的完整的html文件，打开一看，自然里面排版异常难看，想把自己的数据找回着实不易。</p>\n<p>最后自己干脆把网页显示后上的文字通通复制到本地，然后在本地重新初始化了hexo相关配置，经过了几个小时的奋斗，总算把自己的博客内容失而复得。虽然那些看上去好玩的css和js不见了，但是现在想来，那些东西都是没有啥参考意义的乱码罢了，故舍弃之。转而从新选择了一个风格简单的主题作为今后的blog主打风格。同时也转移了live2d看伴娘的模块（觉得唯一值得保护的一个模块）。</p>\n<p>因为不想再吃源代码丢失的苦痛，这次使用了备份分支，专门将本地源文件也上传至github，今后就可以放心了</p>\n<p>差不多就这些,后续可能会针对hexo博客备份专门写一篇操作文档进行记录</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近一直用着的MBP，突然机械硬盘出现问题，导致部分数据丢失，其中就包括了我的博客源文件。最早开发我自己博客的时候，写了一大堆自定义css和js文件，且当时没有良好的打包备份思想，导致今天让自己跳进坑里。</p>\n<p>hexo博客源文件丢失后，唯一能找回的数据只剩下github上，每次deploy的时候上传的那些文件。</p>\n<p>但是那些是模版技术在本地执行后生成好的完整的html文件，打开一看，自然里面排版异常难看，想把自己的数据找回着实不易。</p>\n<p>最后自己干脆把网页显示后上的文字通通复制到本地，然后在本地重新初始化了hexo相关配置，经过了几个小时的奋斗，总算把自己的博客内容失而复得。虽然那些看上去好玩的css和js不见了，但是现在想来，那些东西都是没有啥参考意义的乱码罢了，故舍弃之。转而从新选择了一个风格简单的主题作为今后的blog主打风格。同时也转移了live2d看伴娘的模块（觉得唯一值得保护的一个模块）。</p>\n<p>因为不想再吃源代码丢失的苦痛，这次使用了备份分支，专门将本地源文件也上传至github，今后就可以放心了</p>\n<p>差不多就这些,后续可能会针对hexo博客备份专门写一篇操作文档进行记录</p>\n"},{"title":"我的字符编码总结","date":"2019-04-24T05:51:21.000Z","_content":"\n刚开始接触mac osx这类系统的时候，使用default的zip解压，很容易出现乱码问题。每次我使用默认设置解压一个压缩文件的时候，如果这个文件来自一个中国人的windows电脑的话，十有八九肯定是乱码，想都不用想！ 一开始我还没有使用［The Unarchiver］这款软件的时候，用着各种不爽，出现次数多了，火气就起来了（信不信我砸了你，就是这种感觉）\n\n不过，生气归生气，还是要研究下为什么会出现这种问题的！所以，随后我查阅了好多网上的资料，也看了一些写的比较好的blog学习了下，算是将困扰我很久的字符编码问题给解决了（弄懂一个东西后还真是感觉心情舒畅啊＝v＝）\n\n其实mac是一直采用utf-8的字符编码，而一般我们中文环境下的windows系统是采用gbk作为默认的字符编码的（现在应该最新的是gb18030，全称叫China National Chinese）。看到这里如果没能反应过来乱码和这两个东西有什么关系的话，没关系，因为接下来我就回来解释下为什么了！\n\n## 先从二进制说起\n\n---\n我们都知道，计算机里使用的都是二进制码，即0，1这两个数字。我们常说的一个字节（byte），其实代表了一个八位（bit）的二进制数字。比如数字32，我们就可以很容易的得出它的二进制表示，\n\n```\n\n0010 0000\n\n1 * 2^5 = 32;\n//有关进制之间的互相转换，这个我就不在这里提及了，网上搜一大堆呢，自己学去\n```\n\n\n可以看到十进制数32，刚好可以由一个八位的二进制数表示（其实只要六位，前两位的0都没有用到，不过八位刚好凑成一个字节的长度，所以我这里这么说）\n所以我们在电脑上看到的数字32，在计算机来看，按照上面的这里换算编码的话，就是0010 0000这一串东西了。\n\n## ASCII码\n\n---\nASCII码是比较简单的一种编码，它就是用八位的二进制数来表示一些字符的，我们可以知道一个八位的二进制，可以有2^8种，即256种。\n\n```\n0000 0000\n0000 0001\n0000 0010\n0000 0100\n0000 1000\n.\n.\n.\n1111 1111\n```\n\n--\n从0000 0000到1111 1111，256种情况，可以分别代表256种字符。\n\n不过，当时这玩意就是做给英文操作系统用的，哪里需要256种，128种其实就够了。所以ASCII码的第一位都是0，这样就把种数变成了128种。\n\n>控制字符\n\nASCII的前32个加上第127个，代表的都是控制符号，这些符号主要用于一些特殊情况，我们作为使用者是不怎么会用到的，这里不会细讲，真的很想了解的同学，please google一下\n\n>可显示字符\n\n既然前32个都用来作为控制符号用，那么其他的当然是为我们所用了，比如26个个英文字母，abcdefg.....都有对应的ASCII码。（对于程序员来说，知道A是65，a是97，应该是比较重要的哦＝v＝）\n\n不管怎么说，ASCII码，这货能干的活仅限于美国佬的computer。如果说要用它来表示我们博大精深的中文汉字，256种哪能够呢。哈哈哈哈\n\n所以我们接下来来讲讲和中文汉字编码有关的字符编码方式\n\n## Unicode字符编码\n\n---\n再说中文汉字的字符编码之前，先说说Unicode这个字符编码吧！\n\n把Unicode说成是一个字符编码是不对的，Unicode其实是字符编码的一个国际标准，其实现方式有很多种，比如utf-8,utf-16,utf-32。\n\nUnicode使用了16位的二进制数，所以理论上是可以表示2^16次（65536种），这么多基本满足了各类语言对不同符号的需求。\n\n不过有时候确实16位也不够，那么我们就32位吧，就是4个字节，2^32，这么多总可以了吧，事实上，确实是够了。\n\n不过当变成32位的时候，又出现了一些问题，比如我们只是简单的表示一个英文字母a，我们如果用32位来表示的话，前面不都是0吗，这些有必要存储吗？没必要\n\n所以为了让这些0可以去掉，来节省我们的存储空间，所以Unicode的实现方式就有好多种了。\n\n接下来我们重点就来看看utf-8，这是一个互联网时代通用的unicode实现方式，如果大家都统一用utf8的话，相信乱码问题也会少很多呢\n\n## utf-8\n\n---\n\n>那年我们的网站制作过程全程采用utf8真是太好了！gbk？gb18030？那是什么，我不知道，啊哈哈哈哈\n\nutf8的出现原因是这样的。比如我们要表示一个英文单词a的时候，只需要八位就可以了，那么使用16位的Unicode来表示，前八位不就都变成0，然而这些0是没有意义的，所以当我们仍然采用Unicode的16位进行传输一些英文单词的时候，要传输的内容不就多了一倍，而且这多出来的一倍还特么的是一堆没用的零蛋！\n\n咳咳，所以说我们要缩短用Unicode表示的英文单词的字符长度！所以就有了utf-8\n\nutf-8是Unicode在传输的时候使用的一种实现方式！（注意不要以为utf8是一个字符集，错！它只是encoding层次的！utf8的二进制数可以转换回Unicode形式，然后查找Unicode字符集来转译成我们看到的字符！）\n\n下面我展示一下utf8的编码规则：\n\n```\nUnicode符号范围 | UTF-8编码方式\n(十六进制) | （二进制）\n--------------------+---------------------------------------------\n0000 0000-0000 007F | 0xxxxxxx\n0000 0080-0000 07FF | 110xxxxx 10xxxxxx\n0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\n0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n```\n\n1）对于单字节的符号，字节的第一位设为0，后面7位为这个符号的unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的。\n2）对于n字节的符号（n>1），第一个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10。剩下\n的没有提及的二进制位，全部为这个符号的unicode码。\n\n以上两点就是utf－8的规则！是不是很简单！\n\n不过不要被其表面的简单所蒙骗了，Unicode虽然好用，不过你如果是一名web开发人员的话，就一定会在意流量问题！\n\n如果从流量问题角度出发！如果你使用utf8，那么对于中文来说，你的流量会增加50%。因为大部分常用的中文，使用两个字节就可以表示了，如果采用utf8的话，utf8按上面的规则，一个中文字会变成3个字节，这不就多了一个字节的空间了吗！\n\n还有另一个问题！关于现在有些网站仍在使用的gbk，这个怎么说呢，应该算是一个历史遗留问题了吧。我相信对于开发人员来说，一定更喜欢utf8，毕竟省事！（不过从流量角度出发，gbk还是有优势的！不过多出50%的流量）\n\n在utf8后还有utf16，utf32，可以理解为是对不同情况下的utf8的拓展\n\n## 所以最开始说的乱码问题\n\n---\n\nmac电脑默认采用utf8，而很多中文windows系统的文件采用gbk，一个两字节，一个1～3字节，有自己的算法，所以在mac电脑上解压的zip文件默认用Unicode（USC－2）或者utf8 或者utf16le等等（大端be，小端le）来进行解压的时候，自然而然就变成了乱码了！","source":"_posts/我的字符编码总结.md","raw":"---\ntitle: 我的字符编码总结\ntags: 编码\ncategories: IT\ndate: 2019-04-24 13:51:21\n---\n\n刚开始接触mac osx这类系统的时候，使用default的zip解压，很容易出现乱码问题。每次我使用默认设置解压一个压缩文件的时候，如果这个文件来自一个中国人的windows电脑的话，十有八九肯定是乱码，想都不用想！ 一开始我还没有使用［The Unarchiver］这款软件的时候，用着各种不爽，出现次数多了，火气就起来了（信不信我砸了你，就是这种感觉）\n\n不过，生气归生气，还是要研究下为什么会出现这种问题的！所以，随后我查阅了好多网上的资料，也看了一些写的比较好的blog学习了下，算是将困扰我很久的字符编码问题给解决了（弄懂一个东西后还真是感觉心情舒畅啊＝v＝）\n\n其实mac是一直采用utf-8的字符编码，而一般我们中文环境下的windows系统是采用gbk作为默认的字符编码的（现在应该最新的是gb18030，全称叫China National Chinese）。看到这里如果没能反应过来乱码和这两个东西有什么关系的话，没关系，因为接下来我就回来解释下为什么了！\n\n## 先从二进制说起\n\n---\n我们都知道，计算机里使用的都是二进制码，即0，1这两个数字。我们常说的一个字节（byte），其实代表了一个八位（bit）的二进制数字。比如数字32，我们就可以很容易的得出它的二进制表示，\n\n```\n\n0010 0000\n\n1 * 2^5 = 32;\n//有关进制之间的互相转换，这个我就不在这里提及了，网上搜一大堆呢，自己学去\n```\n\n\n可以看到十进制数32，刚好可以由一个八位的二进制数表示（其实只要六位，前两位的0都没有用到，不过八位刚好凑成一个字节的长度，所以我这里这么说）\n所以我们在电脑上看到的数字32，在计算机来看，按照上面的这里换算编码的话，就是0010 0000这一串东西了。\n\n## ASCII码\n\n---\nASCII码是比较简单的一种编码，它就是用八位的二进制数来表示一些字符的，我们可以知道一个八位的二进制，可以有2^8种，即256种。\n\n```\n0000 0000\n0000 0001\n0000 0010\n0000 0100\n0000 1000\n.\n.\n.\n1111 1111\n```\n\n--\n从0000 0000到1111 1111，256种情况，可以分别代表256种字符。\n\n不过，当时这玩意就是做给英文操作系统用的，哪里需要256种，128种其实就够了。所以ASCII码的第一位都是0，这样就把种数变成了128种。\n\n>控制字符\n\nASCII的前32个加上第127个，代表的都是控制符号，这些符号主要用于一些特殊情况，我们作为使用者是不怎么会用到的，这里不会细讲，真的很想了解的同学，please google一下\n\n>可显示字符\n\n既然前32个都用来作为控制符号用，那么其他的当然是为我们所用了，比如26个个英文字母，abcdefg.....都有对应的ASCII码。（对于程序员来说，知道A是65，a是97，应该是比较重要的哦＝v＝）\n\n不管怎么说，ASCII码，这货能干的活仅限于美国佬的computer。如果说要用它来表示我们博大精深的中文汉字，256种哪能够呢。哈哈哈哈\n\n所以我们接下来来讲讲和中文汉字编码有关的字符编码方式\n\n## Unicode字符编码\n\n---\n再说中文汉字的字符编码之前，先说说Unicode这个字符编码吧！\n\n把Unicode说成是一个字符编码是不对的，Unicode其实是字符编码的一个国际标准，其实现方式有很多种，比如utf-8,utf-16,utf-32。\n\nUnicode使用了16位的二进制数，所以理论上是可以表示2^16次（65536种），这么多基本满足了各类语言对不同符号的需求。\n\n不过有时候确实16位也不够，那么我们就32位吧，就是4个字节，2^32，这么多总可以了吧，事实上，确实是够了。\n\n不过当变成32位的时候，又出现了一些问题，比如我们只是简单的表示一个英文字母a，我们如果用32位来表示的话，前面不都是0吗，这些有必要存储吗？没必要\n\n所以为了让这些0可以去掉，来节省我们的存储空间，所以Unicode的实现方式就有好多种了。\n\n接下来我们重点就来看看utf-8，这是一个互联网时代通用的unicode实现方式，如果大家都统一用utf8的话，相信乱码问题也会少很多呢\n\n## utf-8\n\n---\n\n>那年我们的网站制作过程全程采用utf8真是太好了！gbk？gb18030？那是什么，我不知道，啊哈哈哈哈\n\nutf8的出现原因是这样的。比如我们要表示一个英文单词a的时候，只需要八位就可以了，那么使用16位的Unicode来表示，前八位不就都变成0，然而这些0是没有意义的，所以当我们仍然采用Unicode的16位进行传输一些英文单词的时候，要传输的内容不就多了一倍，而且这多出来的一倍还特么的是一堆没用的零蛋！\n\n咳咳，所以说我们要缩短用Unicode表示的英文单词的字符长度！所以就有了utf-8\n\nutf-8是Unicode在传输的时候使用的一种实现方式！（注意不要以为utf8是一个字符集，错！它只是encoding层次的！utf8的二进制数可以转换回Unicode形式，然后查找Unicode字符集来转译成我们看到的字符！）\n\n下面我展示一下utf8的编码规则：\n\n```\nUnicode符号范围 | UTF-8编码方式\n(十六进制) | （二进制）\n--------------------+---------------------------------------------\n0000 0000-0000 007F | 0xxxxxxx\n0000 0080-0000 07FF | 110xxxxx 10xxxxxx\n0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\n0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n```\n\n1）对于单字节的符号，字节的第一位设为0，后面7位为这个符号的unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的。\n2）对于n字节的符号（n>1），第一个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10。剩下\n的没有提及的二进制位，全部为这个符号的unicode码。\n\n以上两点就是utf－8的规则！是不是很简单！\n\n不过不要被其表面的简单所蒙骗了，Unicode虽然好用，不过你如果是一名web开发人员的话，就一定会在意流量问题！\n\n如果从流量问题角度出发！如果你使用utf8，那么对于中文来说，你的流量会增加50%。因为大部分常用的中文，使用两个字节就可以表示了，如果采用utf8的话，utf8按上面的规则，一个中文字会变成3个字节，这不就多了一个字节的空间了吗！\n\n还有另一个问题！关于现在有些网站仍在使用的gbk，这个怎么说呢，应该算是一个历史遗留问题了吧。我相信对于开发人员来说，一定更喜欢utf8，毕竟省事！（不过从流量角度出发，gbk还是有优势的！不过多出50%的流量）\n\n在utf8后还有utf16，utf32，可以理解为是对不同情况下的utf8的拓展\n\n## 所以最开始说的乱码问题\n\n---\n\nmac电脑默认采用utf8，而很多中文windows系统的文件采用gbk，一个两字节，一个1～3字节，有自己的算法，所以在mac电脑上解压的zip文件默认用Unicode（USC－2）或者utf8 或者utf16le等等（大端be，小端le）来进行解压的时候，自然而然就变成了乱码了！","slug":"我的字符编码总结","published":1,"updated":"2019-04-25T03:17:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjv3k3juo000flk9v8zkd9wmx","content":"<p>刚开始接触mac osx这类系统的时候，使用default的zip解压，很容易出现乱码问题。每次我使用默认设置解压一个压缩文件的时候，如果这个文件来自一个中国人的windows电脑的话，十有八九肯定是乱码，想都不用想！ 一开始我还没有使用［The Unarchiver］这款软件的时候，用着各种不爽，出现次数多了，火气就起来了（信不信我砸了你，就是这种感觉）</p>\n<p>不过，生气归生气，还是要研究下为什么会出现这种问题的！所以，随后我查阅了好多网上的资料，也看了一些写的比较好的blog学习了下，算是将困扰我很久的字符编码问题给解决了（弄懂一个东西后还真是感觉心情舒畅啊＝v＝）</p>\n<p>其实mac是一直采用utf-8的字符编码，而一般我们中文环境下的windows系统是采用gbk作为默认的字符编码的（现在应该最新的是gb18030，全称叫China National Chinese）。看到这里如果没能反应过来乱码和这两个东西有什么关系的话，没关系，因为接下来我就回来解释下为什么了！</p>\n<h2 id=\"先从二进制说起\"><a href=\"#先从二进制说起\" class=\"headerlink\" title=\"先从二进制说起\"></a>先从二进制说起</h2><hr>\n<p>我们都知道，计算机里使用的都是二进制码，即0，1这两个数字。我们常说的一个字节（byte），其实代表了一个八位（bit）的二进制数字。比如数字32，我们就可以很容易的得出它的二进制表示，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">0010 0000</span><br><span class=\"line\"></span><br><span class=\"line\">1 * 2^5 = 32;</span><br><span class=\"line\">//有关进制之间的互相转换，这个我就不在这里提及了，网上搜一大堆呢，自己学去</span><br></pre></td></tr></table></figure>\n<p>可以看到十进制数32，刚好可以由一个八位的二进制数表示（其实只要六位，前两位的0都没有用到，不过八位刚好凑成一个字节的长度，所以我这里这么说）<br>所以我们在电脑上看到的数字32，在计算机来看，按照上面的这里换算编码的话，就是0010 0000这一串东西了。</p>\n<h2 id=\"ASCII码\"><a href=\"#ASCII码\" class=\"headerlink\" title=\"ASCII码\"></a>ASCII码</h2><hr>\n<p>ASCII码是比较简单的一种编码，它就是用八位的二进制数来表示一些字符的，我们可以知道一个八位的二进制，可以有2^8种，即256种。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0000 0000</span><br><span class=\"line\">0000 0001</span><br><span class=\"line\">0000 0010</span><br><span class=\"line\">0000 0100</span><br><span class=\"line\">0000 1000</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">1111 1111</span><br></pre></td></tr></table></figure>\n<p>–<br>从0000 0000到1111 1111，256种情况，可以分别代表256种字符。</p>\n<p>不过，当时这玩意就是做给英文操作系统用的，哪里需要256种，128种其实就够了。所以ASCII码的第一位都是0，这样就把种数变成了128种。</p>\n<blockquote>\n<p>控制字符</p>\n</blockquote>\n<p>ASCII的前32个加上第127个，代表的都是控制符号，这些符号主要用于一些特殊情况，我们作为使用者是不怎么会用到的，这里不会细讲，真的很想了解的同学，please google一下</p>\n<blockquote>\n<p>可显示字符</p>\n</blockquote>\n<p>既然前32个都用来作为控制符号用，那么其他的当然是为我们所用了，比如26个个英文字母，abcdefg…..都有对应的ASCII码。（对于程序员来说，知道A是65，a是97，应该是比较重要的哦＝v＝）</p>\n<p>不管怎么说，ASCII码，这货能干的活仅限于美国佬的computer。如果说要用它来表示我们博大精深的中文汉字，256种哪能够呢。哈哈哈哈</p>\n<p>所以我们接下来来讲讲和中文汉字编码有关的字符编码方式</p>\n<h2 id=\"Unicode字符编码\"><a href=\"#Unicode字符编码\" class=\"headerlink\" title=\"Unicode字符编码\"></a>Unicode字符编码</h2><hr>\n<p>再说中文汉字的字符编码之前，先说说Unicode这个字符编码吧！</p>\n<p>把Unicode说成是一个字符编码是不对的，Unicode其实是字符编码的一个国际标准，其实现方式有很多种，比如utf-8,utf-16,utf-32。</p>\n<p>Unicode使用了16位的二进制数，所以理论上是可以表示2^16次（65536种），这么多基本满足了各类语言对不同符号的需求。</p>\n<p>不过有时候确实16位也不够，那么我们就32位吧，就是4个字节，2^32，这么多总可以了吧，事实上，确实是够了。</p>\n<p>不过当变成32位的时候，又出现了一些问题，比如我们只是简单的表示一个英文字母a，我们如果用32位来表示的话，前面不都是0吗，这些有必要存储吗？没必要</p>\n<p>所以为了让这些0可以去掉，来节省我们的存储空间，所以Unicode的实现方式就有好多种了。</p>\n<p>接下来我们重点就来看看utf-8，这是一个互联网时代通用的unicode实现方式，如果大家都统一用utf8的话，相信乱码问题也会少很多呢</p>\n<h2 id=\"utf-8\"><a href=\"#utf-8\" class=\"headerlink\" title=\"utf-8\"></a>utf-8</h2><hr>\n<blockquote>\n<p>那年我们的网站制作过程全程采用utf8真是太好了！gbk？gb18030？那是什么，我不知道，啊哈哈哈哈</p>\n</blockquote>\n<p>utf8的出现原因是这样的。比如我们要表示一个英文单词a的时候，只需要八位就可以了，那么使用16位的Unicode来表示，前八位不就都变成0，然而这些0是没有意义的，所以当我们仍然采用Unicode的16位进行传输一些英文单词的时候，要传输的内容不就多了一倍，而且这多出来的一倍还特么的是一堆没用的零蛋！</p>\n<p>咳咳，所以说我们要缩短用Unicode表示的英文单词的字符长度！所以就有了utf-8</p>\n<p>utf-8是Unicode在传输的时候使用的一种实现方式！（注意不要以为utf8是一个字符集，错！它只是encoding层次的！utf8的二进制数可以转换回Unicode形式，然后查找Unicode字符集来转译成我们看到的字符！）</p>\n<p>下面我展示一下utf8的编码规则：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unicode符号范围 | UTF-8编码方式</span><br><span class=\"line\">(十六进制) | （二进制）</span><br><span class=\"line\">--------------------+---------------------------------------------</span><br><span class=\"line\">0000 0000-0000 007F | 0xxxxxxx</span><br><span class=\"line\">0000 0080-0000 07FF | 110xxxxx 10xxxxxx</span><br><span class=\"line\">0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx</span><br><span class=\"line\">0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</span><br></pre></td></tr></table></figure>\n<p>1）对于单字节的符号，字节的第一位设为0，后面7位为这个符号的unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的。<br>2）对于n字节的符号（n&gt;1），第一个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10。剩下<br>的没有提及的二进制位，全部为这个符号的unicode码。</p>\n<p>以上两点就是utf－8的规则！是不是很简单！</p>\n<p>不过不要被其表面的简单所蒙骗了，Unicode虽然好用，不过你如果是一名web开发人员的话，就一定会在意流量问题！</p>\n<p>如果从流量问题角度出发！如果你使用utf8，那么对于中文来说，你的流量会增加50%。因为大部分常用的中文，使用两个字节就可以表示了，如果采用utf8的话，utf8按上面的规则，一个中文字会变成3个字节，这不就多了一个字节的空间了吗！</p>\n<p>还有另一个问题！关于现在有些网站仍在使用的gbk，这个怎么说呢，应该算是一个历史遗留问题了吧。我相信对于开发人员来说，一定更喜欢utf8，毕竟省事！（不过从流量角度出发，gbk还是有优势的！不过多出50%的流量）</p>\n<p>在utf8后还有utf16，utf32，可以理解为是对不同情况下的utf8的拓展</p>\n<h2 id=\"所以最开始说的乱码问题\"><a href=\"#所以最开始说的乱码问题\" class=\"headerlink\" title=\"所以最开始说的乱码问题\"></a>所以最开始说的乱码问题</h2><hr>\n<p>mac电脑默认采用utf8，而很多中文windows系统的文件采用gbk，一个两字节，一个1～3字节，有自己的算法，所以在mac电脑上解压的zip文件默认用Unicode（USC－2）或者utf8 或者utf16le等等（大端be，小端le）来进行解压的时候，自然而然就变成了乱码了！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>刚开始接触mac osx这类系统的时候，使用default的zip解压，很容易出现乱码问题。每次我使用默认设置解压一个压缩文件的时候，如果这个文件来自一个中国人的windows电脑的话，十有八九肯定是乱码，想都不用想！ 一开始我还没有使用［The Unarchiver］这款软件的时候，用着各种不爽，出现次数多了，火气就起来了（信不信我砸了你，就是这种感觉）</p>\n<p>不过，生气归生气，还是要研究下为什么会出现这种问题的！所以，随后我查阅了好多网上的资料，也看了一些写的比较好的blog学习了下，算是将困扰我很久的字符编码问题给解决了（弄懂一个东西后还真是感觉心情舒畅啊＝v＝）</p>\n<p>其实mac是一直采用utf-8的字符编码，而一般我们中文环境下的windows系统是采用gbk作为默认的字符编码的（现在应该最新的是gb18030，全称叫China National Chinese）。看到这里如果没能反应过来乱码和这两个东西有什么关系的话，没关系，因为接下来我就回来解释下为什么了！</p>\n<h2 id=\"先从二进制说起\"><a href=\"#先从二进制说起\" class=\"headerlink\" title=\"先从二进制说起\"></a>先从二进制说起</h2><hr>\n<p>我们都知道，计算机里使用的都是二进制码，即0，1这两个数字。我们常说的一个字节（byte），其实代表了一个八位（bit）的二进制数字。比如数字32，我们就可以很容易的得出它的二进制表示，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">0010 0000</span><br><span class=\"line\"></span><br><span class=\"line\">1 * 2^5 = 32;</span><br><span class=\"line\">//有关进制之间的互相转换，这个我就不在这里提及了，网上搜一大堆呢，自己学去</span><br></pre></td></tr></table></figure>\n<p>可以看到十进制数32，刚好可以由一个八位的二进制数表示（其实只要六位，前两位的0都没有用到，不过八位刚好凑成一个字节的长度，所以我这里这么说）<br>所以我们在电脑上看到的数字32，在计算机来看，按照上面的这里换算编码的话，就是0010 0000这一串东西了。</p>\n<h2 id=\"ASCII码\"><a href=\"#ASCII码\" class=\"headerlink\" title=\"ASCII码\"></a>ASCII码</h2><hr>\n<p>ASCII码是比较简单的一种编码，它就是用八位的二进制数来表示一些字符的，我们可以知道一个八位的二进制，可以有2^8种，即256种。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0000 0000</span><br><span class=\"line\">0000 0001</span><br><span class=\"line\">0000 0010</span><br><span class=\"line\">0000 0100</span><br><span class=\"line\">0000 1000</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">1111 1111</span><br></pre></td></tr></table></figure>\n<p>–<br>从0000 0000到1111 1111，256种情况，可以分别代表256种字符。</p>\n<p>不过，当时这玩意就是做给英文操作系统用的，哪里需要256种，128种其实就够了。所以ASCII码的第一位都是0，这样就把种数变成了128种。</p>\n<blockquote>\n<p>控制字符</p>\n</blockquote>\n<p>ASCII的前32个加上第127个，代表的都是控制符号，这些符号主要用于一些特殊情况，我们作为使用者是不怎么会用到的，这里不会细讲，真的很想了解的同学，please google一下</p>\n<blockquote>\n<p>可显示字符</p>\n</blockquote>\n<p>既然前32个都用来作为控制符号用，那么其他的当然是为我们所用了，比如26个个英文字母，abcdefg…..都有对应的ASCII码。（对于程序员来说，知道A是65，a是97，应该是比较重要的哦＝v＝）</p>\n<p>不管怎么说，ASCII码，这货能干的活仅限于美国佬的computer。如果说要用它来表示我们博大精深的中文汉字，256种哪能够呢。哈哈哈哈</p>\n<p>所以我们接下来来讲讲和中文汉字编码有关的字符编码方式</p>\n<h2 id=\"Unicode字符编码\"><a href=\"#Unicode字符编码\" class=\"headerlink\" title=\"Unicode字符编码\"></a>Unicode字符编码</h2><hr>\n<p>再说中文汉字的字符编码之前，先说说Unicode这个字符编码吧！</p>\n<p>把Unicode说成是一个字符编码是不对的，Unicode其实是字符编码的一个国际标准，其实现方式有很多种，比如utf-8,utf-16,utf-32。</p>\n<p>Unicode使用了16位的二进制数，所以理论上是可以表示2^16次（65536种），这么多基本满足了各类语言对不同符号的需求。</p>\n<p>不过有时候确实16位也不够，那么我们就32位吧，就是4个字节，2^32，这么多总可以了吧，事实上，确实是够了。</p>\n<p>不过当变成32位的时候，又出现了一些问题，比如我们只是简单的表示一个英文字母a，我们如果用32位来表示的话，前面不都是0吗，这些有必要存储吗？没必要</p>\n<p>所以为了让这些0可以去掉，来节省我们的存储空间，所以Unicode的实现方式就有好多种了。</p>\n<p>接下来我们重点就来看看utf-8，这是一个互联网时代通用的unicode实现方式，如果大家都统一用utf8的话，相信乱码问题也会少很多呢</p>\n<h2 id=\"utf-8\"><a href=\"#utf-8\" class=\"headerlink\" title=\"utf-8\"></a>utf-8</h2><hr>\n<blockquote>\n<p>那年我们的网站制作过程全程采用utf8真是太好了！gbk？gb18030？那是什么，我不知道，啊哈哈哈哈</p>\n</blockquote>\n<p>utf8的出现原因是这样的。比如我们要表示一个英文单词a的时候，只需要八位就可以了，那么使用16位的Unicode来表示，前八位不就都变成0，然而这些0是没有意义的，所以当我们仍然采用Unicode的16位进行传输一些英文单词的时候，要传输的内容不就多了一倍，而且这多出来的一倍还特么的是一堆没用的零蛋！</p>\n<p>咳咳，所以说我们要缩短用Unicode表示的英文单词的字符长度！所以就有了utf-8</p>\n<p>utf-8是Unicode在传输的时候使用的一种实现方式！（注意不要以为utf8是一个字符集，错！它只是encoding层次的！utf8的二进制数可以转换回Unicode形式，然后查找Unicode字符集来转译成我们看到的字符！）</p>\n<p>下面我展示一下utf8的编码规则：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unicode符号范围 | UTF-8编码方式</span><br><span class=\"line\">(十六进制) | （二进制）</span><br><span class=\"line\">--------------------+---------------------------------------------</span><br><span class=\"line\">0000 0000-0000 007F | 0xxxxxxx</span><br><span class=\"line\">0000 0080-0000 07FF | 110xxxxx 10xxxxxx</span><br><span class=\"line\">0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx</span><br><span class=\"line\">0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</span><br></pre></td></tr></table></figure>\n<p>1）对于单字节的符号，字节的第一位设为0，后面7位为这个符号的unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的。<br>2）对于n字节的符号（n&gt;1），第一个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10。剩下<br>的没有提及的二进制位，全部为这个符号的unicode码。</p>\n<p>以上两点就是utf－8的规则！是不是很简单！</p>\n<p>不过不要被其表面的简单所蒙骗了，Unicode虽然好用，不过你如果是一名web开发人员的话，就一定会在意流量问题！</p>\n<p>如果从流量问题角度出发！如果你使用utf8，那么对于中文来说，你的流量会增加50%。因为大部分常用的中文，使用两个字节就可以表示了，如果采用utf8的话，utf8按上面的规则，一个中文字会变成3个字节，这不就多了一个字节的空间了吗！</p>\n<p>还有另一个问题！关于现在有些网站仍在使用的gbk，这个怎么说呢，应该算是一个历史遗留问题了吧。我相信对于开发人员来说，一定更喜欢utf8，毕竟省事！（不过从流量角度出发，gbk还是有优势的！不过多出50%的流量）</p>\n<p>在utf8后还有utf16，utf32，可以理解为是对不同情况下的utf8的拓展</p>\n<h2 id=\"所以最开始说的乱码问题\"><a href=\"#所以最开始说的乱码问题\" class=\"headerlink\" title=\"所以最开始说的乱码问题\"></a>所以最开始说的乱码问题</h2><hr>\n<p>mac电脑默认采用utf8，而很多中文windows系统的文件采用gbk，一个两字节，一个1～3字节，有自己的算法，所以在mac电脑上解压的zip文件默认用Unicode（USC－2）或者utf8 或者utf16le等等（大端be，小端le）来进行解压的时候，自然而然就变成了乱码了！</p>\n"},{"title":"大学的日子(二)","date":"2019-04-24T06:00:04.000Z","_content":"\n好久不见，我的博客。离上次写博客，已经有很长一段时间过去了，这段时间之间自己刚毕业，刚迈入工作岗位，每天拼命的工作，生活不是很安定，和以前的大学生活差距很大，自然而然就没什么心情写写博客了。可能是因为想倾诉的东西很多吧，有太多的东西想倾诉给某人听，不过自己身边并没有那么适合的人，所以我最终还是找回自己的博客，将自己想说的都说给我自己的博客听。\n\n这次我想回忆回忆自己的大学学习生活。\n\n我是一名普通的西安电子科技大学软件学院的学生，我今天就想好好的说一说我自己在大学的学习故事。\n\n## 西电有一个很好的软件IT氛围\n\n大二左右的时候，自己打开qq和微信就可以看到很多人拉队友，参加各种竞赛，增加自己的能力和经验，自己身边也不乏各种编程大神，当我还只会使用windows的时候，人家都已经熟练的使用着ubantu了。每次做软件的大作业的时候，我总会花一两礼拜的时间，泡在图书馆里，学习编程知识，然后边问那些大神们，边完成自己的软件大作业。没有他们，我都不知道自己模拟制作的那些聊天室，web网站(基本处于玩玩的那种程度吧)能不能按时完成呢。我非常感谢自己可以很幸运的遇到他们，能够在他们提供的帮助下，一次次的完成老师布置的软件大作业，不会被老师挨骂，同时也会有那么一点点小小的成就感，毕竟程序的完成，都是我自己一个个代码敲出来的，虽然其实现方式和代码总体架构和设计上完成不能看就是了，基本处于做完就废的那种感觉。我也非常感谢他们不断的在我身边熏陶着一些编程新闻，让我至少在聊软件的时候，可以多说几句我知道的东西。现在很多人认为学软件是不错的选择，不过我还是善意的提醒一句，如果你真的喜欢敲代码，那么我不介意你去学，如果你只是单纯的想找一份比较好的工作，那么我觉得软件这一行业是不适合你的。\n\n## 贵在坚持\n\n大一大二的时候，都是在上编程的基础课程，基本没有自己真正去敲代码的经验，所以自己真正接触代码的时间应该要从大三开始吧。大一大二平平庸庸的过了两年后，我慢慢的察觉到在大学里，按时完成老师布置的作业真的是远远不够的。我不知道985的学校是怎么样的，反正我觉得现在内陆的大学，因为看重毕业率，在大学学习，非常自由，老师不会给太难的任务，导师不会给太多的约束，完全就属于放养的状态。那么我们这些从小就按部就班，一步一步走过来的人呢，就会感觉没有了明确的目标，学习的劲头也没有以前足，加上有些人本身也并不喜欢软件这个专业。差不多到了大三，可以明显的看出我们这批人开始行动了起来，有的开始认真学习自己的专业知识，有的开始另求后路。大三这一年最辛苦的应该就是这些人了，他们每天应该看上去都像一个拼命三郎，每天都在准备的去翻越眼前的大山。我差不多也是这个时候开始喜欢泡图书馆，每天上完课，就回去图书馆看书学习，也是那个时候把自己的Mac系统用了起来，卸载了原来的windows。自从开始用Mac系统后，就开始慢慢的喜欢捣鼓自己的东西，因为Mac系统玩不了很多流行的游戏，自然而然我的时间就更多的花到了自己喜欢的地方去了。这些时间，有些我用来逛自己喜欢的博客，看看他们的生活和技术博文；有些我用来捣鼓Mac系统的使用，使得它更加的适合我平时的学习和使用；还有一些时间我就用来看看视频，发发弹幕，修身养性了。软件编程，我们经常会碰到一些奇奇怪怪的问题，这是因为我们现在大部分的程序员都是在使用软件巨人们帮我们打好的”地基”上面进行开发，由于我们对这些”地基”了解程度不够，没有好好的看文档，也没有好好的去理解深层的原理；有时候一个问题，可能会麻烦你好几天也没有个解决方法。这很考验一个人的坚持能力，如果你坚持了，说不定你成功了。做软件的，如果你真喜欢，那么不管发生什么事情，都请静下来，一个个的去解决眼前的问题，在解决完以后，自己要花点时间去思考，去总结，才能有所收获！\n\n## 大学==玩? \n\n至少在我小时候居住的环境下，都流行着一种不好的风气，就是高中好好念，上个好大学，在大学里就可以不用像高中那样拼命学习。正如我现在的导师所说，你现在努力过头，不给自己一个喘气的机会，你怎么保证自己可以一直这种状态工作下去呢？没错，现在很多小孩子，从小学，初中到高中，特别是高三，更是把自己的全部都豁了出去，就像这是自己一生中最后一次拼搏一样，有些努力的身体出毛病，有些则努力的自己的心理也开始扭曲。所以一旦毕了业，就会非常想好好休息休息，而因为之前拼搏太久，可能那三个月一点点的假期是远远不够的。所以自然而然，到了大学，我们开始追求自由的生活，不再那么努力，不再那么的看重学业，感觉自己的未来明朗清晰，把大学按部就班的读好，就可以找个好点的工作，然后开始自己的后半生。那么往往这样的结果是不好的。有句话说得好，出来混总有一天要还的。大学才是我们人生中最重要的时刻，你如何利用好你的大学时光，才能真正的决定你的未来。\n\n## 大四的那点小事\n\n西电软院，每年大三暑假都会安排一次实训，和一些软件公司合作，安排我们这些娃子去他们那里实习，实习的内容都是做一个模拟的项目，几个人一个小组进行正常的工作。我认为这是非常好的，甚至比有些自己找的实习机会更加的有帮助。如果在看这篇文章的同学正好是我校友而且也是软院的学生的话，如果你正在烦恼实习怎么办的话，强烈建议你不用花时间去找个自己不喜欢的单位，然后在那里面实习，而是参加学校安排的实训，重点不是看你去哪里实习，而是要看你在实习的时候做了什么。实训的时候如果你想着水过去，那么也就水过去了，因为毕竟只是实训，项目经理不会过来骂你，说你完成的不好，完成的不对。所以还是那句话，自己要严格要求自己。大三实训完接着就是大四的上半学期，各大公司都会过来学校校招，这是一个丰收自己的学习成果的阶段，机会都是留给有准备的人的。但是要进好公司，比如腾讯，阿里，那么你估计需要大量的努力和一点点好运。同时我也推荐你们能进到互联网公司而不是传统IT行业。虽然互联网公司对技术要求高，但是对你来说，可以算是一个很好的平台，站得越高，看得越远。\n\n## 结束语\n感觉自言自语的很久，也算是对自己的大学生活的学习过程有了一个小总结，日后可以自己看看.\n\n","source":"_posts/大学的日子-二.md","raw":"---\ntitle: 大学的日子(二)\ntags: 回忆向\ncategories: 生活\ndate: 2019-04-24 14:00:04\n---\n\n好久不见，我的博客。离上次写博客，已经有很长一段时间过去了，这段时间之间自己刚毕业，刚迈入工作岗位，每天拼命的工作，生活不是很安定，和以前的大学生活差距很大，自然而然就没什么心情写写博客了。可能是因为想倾诉的东西很多吧，有太多的东西想倾诉给某人听，不过自己身边并没有那么适合的人，所以我最终还是找回自己的博客，将自己想说的都说给我自己的博客听。\n\n这次我想回忆回忆自己的大学学习生活。\n\n我是一名普通的西安电子科技大学软件学院的学生，我今天就想好好的说一说我自己在大学的学习故事。\n\n## 西电有一个很好的软件IT氛围\n\n大二左右的时候，自己打开qq和微信就可以看到很多人拉队友，参加各种竞赛，增加自己的能力和经验，自己身边也不乏各种编程大神，当我还只会使用windows的时候，人家都已经熟练的使用着ubantu了。每次做软件的大作业的时候，我总会花一两礼拜的时间，泡在图书馆里，学习编程知识，然后边问那些大神们，边完成自己的软件大作业。没有他们，我都不知道自己模拟制作的那些聊天室，web网站(基本处于玩玩的那种程度吧)能不能按时完成呢。我非常感谢自己可以很幸运的遇到他们，能够在他们提供的帮助下，一次次的完成老师布置的软件大作业，不会被老师挨骂，同时也会有那么一点点小小的成就感，毕竟程序的完成，都是我自己一个个代码敲出来的，虽然其实现方式和代码总体架构和设计上完成不能看就是了，基本处于做完就废的那种感觉。我也非常感谢他们不断的在我身边熏陶着一些编程新闻，让我至少在聊软件的时候，可以多说几句我知道的东西。现在很多人认为学软件是不错的选择，不过我还是善意的提醒一句，如果你真的喜欢敲代码，那么我不介意你去学，如果你只是单纯的想找一份比较好的工作，那么我觉得软件这一行业是不适合你的。\n\n## 贵在坚持\n\n大一大二的时候，都是在上编程的基础课程，基本没有自己真正去敲代码的经验，所以自己真正接触代码的时间应该要从大三开始吧。大一大二平平庸庸的过了两年后，我慢慢的察觉到在大学里，按时完成老师布置的作业真的是远远不够的。我不知道985的学校是怎么样的，反正我觉得现在内陆的大学，因为看重毕业率，在大学学习，非常自由，老师不会给太难的任务，导师不会给太多的约束，完全就属于放养的状态。那么我们这些从小就按部就班，一步一步走过来的人呢，就会感觉没有了明确的目标，学习的劲头也没有以前足，加上有些人本身也并不喜欢软件这个专业。差不多到了大三，可以明显的看出我们这批人开始行动了起来，有的开始认真学习自己的专业知识，有的开始另求后路。大三这一年最辛苦的应该就是这些人了，他们每天应该看上去都像一个拼命三郎，每天都在准备的去翻越眼前的大山。我差不多也是这个时候开始喜欢泡图书馆，每天上完课，就回去图书馆看书学习，也是那个时候把自己的Mac系统用了起来，卸载了原来的windows。自从开始用Mac系统后，就开始慢慢的喜欢捣鼓自己的东西，因为Mac系统玩不了很多流行的游戏，自然而然我的时间就更多的花到了自己喜欢的地方去了。这些时间，有些我用来逛自己喜欢的博客，看看他们的生活和技术博文；有些我用来捣鼓Mac系统的使用，使得它更加的适合我平时的学习和使用；还有一些时间我就用来看看视频，发发弹幕，修身养性了。软件编程，我们经常会碰到一些奇奇怪怪的问题，这是因为我们现在大部分的程序员都是在使用软件巨人们帮我们打好的”地基”上面进行开发，由于我们对这些”地基”了解程度不够，没有好好的看文档，也没有好好的去理解深层的原理；有时候一个问题，可能会麻烦你好几天也没有个解决方法。这很考验一个人的坚持能力，如果你坚持了，说不定你成功了。做软件的，如果你真喜欢，那么不管发生什么事情，都请静下来，一个个的去解决眼前的问题，在解决完以后，自己要花点时间去思考，去总结，才能有所收获！\n\n## 大学==玩? \n\n至少在我小时候居住的环境下，都流行着一种不好的风气，就是高中好好念，上个好大学，在大学里就可以不用像高中那样拼命学习。正如我现在的导师所说，你现在努力过头，不给自己一个喘气的机会，你怎么保证自己可以一直这种状态工作下去呢？没错，现在很多小孩子，从小学，初中到高中，特别是高三，更是把自己的全部都豁了出去，就像这是自己一生中最后一次拼搏一样，有些努力的身体出毛病，有些则努力的自己的心理也开始扭曲。所以一旦毕了业，就会非常想好好休息休息，而因为之前拼搏太久，可能那三个月一点点的假期是远远不够的。所以自然而然，到了大学，我们开始追求自由的生活，不再那么努力，不再那么的看重学业，感觉自己的未来明朗清晰，把大学按部就班的读好，就可以找个好点的工作，然后开始自己的后半生。那么往往这样的结果是不好的。有句话说得好，出来混总有一天要还的。大学才是我们人生中最重要的时刻，你如何利用好你的大学时光，才能真正的决定你的未来。\n\n## 大四的那点小事\n\n西电软院，每年大三暑假都会安排一次实训，和一些软件公司合作，安排我们这些娃子去他们那里实习，实习的内容都是做一个模拟的项目，几个人一个小组进行正常的工作。我认为这是非常好的，甚至比有些自己找的实习机会更加的有帮助。如果在看这篇文章的同学正好是我校友而且也是软院的学生的话，如果你正在烦恼实习怎么办的话，强烈建议你不用花时间去找个自己不喜欢的单位，然后在那里面实习，而是参加学校安排的实训，重点不是看你去哪里实习，而是要看你在实习的时候做了什么。实训的时候如果你想着水过去，那么也就水过去了，因为毕竟只是实训，项目经理不会过来骂你，说你完成的不好，完成的不对。所以还是那句话，自己要严格要求自己。大三实训完接着就是大四的上半学期，各大公司都会过来学校校招，这是一个丰收自己的学习成果的阶段，机会都是留给有准备的人的。但是要进好公司，比如腾讯，阿里，那么你估计需要大量的努力和一点点好运。同时我也推荐你们能进到互联网公司而不是传统IT行业。虽然互联网公司对技术要求高，但是对你来说，可以算是一个很好的平台，站得越高，看得越远。\n\n## 结束语\n感觉自言自语的很久，也算是对自己的大学生活的学习过程有了一个小总结，日后可以自己看看.\n\n","slug":"大学的日子-二","published":1,"updated":"2019-04-25T03:17:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjv3k3juq000klk9vwt4gci9i","content":"<p>好久不见，我的博客。离上次写博客，已经有很长一段时间过去了，这段时间之间自己刚毕业，刚迈入工作岗位，每天拼命的工作，生活不是很安定，和以前的大学生活差距很大，自然而然就没什么心情写写博客了。可能是因为想倾诉的东西很多吧，有太多的东西想倾诉给某人听，不过自己身边并没有那么适合的人，所以我最终还是找回自己的博客，将自己想说的都说给我自己的博客听。</p>\n<p>这次我想回忆回忆自己的大学学习生活。</p>\n<p>我是一名普通的西安电子科技大学软件学院的学生，我今天就想好好的说一说我自己在大学的学习故事。</p>\n<h2 id=\"西电有一个很好的软件IT氛围\"><a href=\"#西电有一个很好的软件IT氛围\" class=\"headerlink\" title=\"西电有一个很好的软件IT氛围\"></a>西电有一个很好的软件IT氛围</h2><p>大二左右的时候，自己打开qq和微信就可以看到很多人拉队友，参加各种竞赛，增加自己的能力和经验，自己身边也不乏各种编程大神，当我还只会使用windows的时候，人家都已经熟练的使用着ubantu了。每次做软件的大作业的时候，我总会花一两礼拜的时间，泡在图书馆里，学习编程知识，然后边问那些大神们，边完成自己的软件大作业。没有他们，我都不知道自己模拟制作的那些聊天室，web网站(基本处于玩玩的那种程度吧)能不能按时完成呢。我非常感谢自己可以很幸运的遇到他们，能够在他们提供的帮助下，一次次的完成老师布置的软件大作业，不会被老师挨骂，同时也会有那么一点点小小的成就感，毕竟程序的完成，都是我自己一个个代码敲出来的，虽然其实现方式和代码总体架构和设计上完成不能看就是了，基本处于做完就废的那种感觉。我也非常感谢他们不断的在我身边熏陶着一些编程新闻，让我至少在聊软件的时候，可以多说几句我知道的东西。现在很多人认为学软件是不错的选择，不过我还是善意的提醒一句，如果你真的喜欢敲代码，那么我不介意你去学，如果你只是单纯的想找一份比较好的工作，那么我觉得软件这一行业是不适合你的。</p>\n<h2 id=\"贵在坚持\"><a href=\"#贵在坚持\" class=\"headerlink\" title=\"贵在坚持\"></a>贵在坚持</h2><p>大一大二的时候，都是在上编程的基础课程，基本没有自己真正去敲代码的经验，所以自己真正接触代码的时间应该要从大三开始吧。大一大二平平庸庸的过了两年后，我慢慢的察觉到在大学里，按时完成老师布置的作业真的是远远不够的。我不知道985的学校是怎么样的，反正我觉得现在内陆的大学，因为看重毕业率，在大学学习，非常自由，老师不会给太难的任务，导师不会给太多的约束，完全就属于放养的状态。那么我们这些从小就按部就班，一步一步走过来的人呢，就会感觉没有了明确的目标，学习的劲头也没有以前足，加上有些人本身也并不喜欢软件这个专业。差不多到了大三，可以明显的看出我们这批人开始行动了起来，有的开始认真学习自己的专业知识，有的开始另求后路。大三这一年最辛苦的应该就是这些人了，他们每天应该看上去都像一个拼命三郎，每天都在准备的去翻越眼前的大山。我差不多也是这个时候开始喜欢泡图书馆，每天上完课，就回去图书馆看书学习，也是那个时候把自己的Mac系统用了起来，卸载了原来的windows。自从开始用Mac系统后，就开始慢慢的喜欢捣鼓自己的东西，因为Mac系统玩不了很多流行的游戏，自然而然我的时间就更多的花到了自己喜欢的地方去了。这些时间，有些我用来逛自己喜欢的博客，看看他们的生活和技术博文；有些我用来捣鼓Mac系统的使用，使得它更加的适合我平时的学习和使用；还有一些时间我就用来看看视频，发发弹幕，修身养性了。软件编程，我们经常会碰到一些奇奇怪怪的问题，这是因为我们现在大部分的程序员都是在使用软件巨人们帮我们打好的”地基”上面进行开发，由于我们对这些”地基”了解程度不够，没有好好的看文档，也没有好好的去理解深层的原理；有时候一个问题，可能会麻烦你好几天也没有个解决方法。这很考验一个人的坚持能力，如果你坚持了，说不定你成功了。做软件的，如果你真喜欢，那么不管发生什么事情，都请静下来，一个个的去解决眼前的问题，在解决完以后，自己要花点时间去思考，去总结，才能有所收获！</p>\n<h2 id=\"大学-玩\"><a href=\"#大学-玩\" class=\"headerlink\" title=\"大学==玩?\"></a>大学==玩?</h2><p>至少在我小时候居住的环境下，都流行着一种不好的风气，就是高中好好念，上个好大学，在大学里就可以不用像高中那样拼命学习。正如我现在的导师所说，你现在努力过头，不给自己一个喘气的机会，你怎么保证自己可以一直这种状态工作下去呢？没错，现在很多小孩子，从小学，初中到高中，特别是高三，更是把自己的全部都豁了出去，就像这是自己一生中最后一次拼搏一样，有些努力的身体出毛病，有些则努力的自己的心理也开始扭曲。所以一旦毕了业，就会非常想好好休息休息，而因为之前拼搏太久，可能那三个月一点点的假期是远远不够的。所以自然而然，到了大学，我们开始追求自由的生活，不再那么努力，不再那么的看重学业，感觉自己的未来明朗清晰，把大学按部就班的读好，就可以找个好点的工作，然后开始自己的后半生。那么往往这样的结果是不好的。有句话说得好，出来混总有一天要还的。大学才是我们人生中最重要的时刻，你如何利用好你的大学时光，才能真正的决定你的未来。</p>\n<h2 id=\"大四的那点小事\"><a href=\"#大四的那点小事\" class=\"headerlink\" title=\"大四的那点小事\"></a>大四的那点小事</h2><p>西电软院，每年大三暑假都会安排一次实训，和一些软件公司合作，安排我们这些娃子去他们那里实习，实习的内容都是做一个模拟的项目，几个人一个小组进行正常的工作。我认为这是非常好的，甚至比有些自己找的实习机会更加的有帮助。如果在看这篇文章的同学正好是我校友而且也是软院的学生的话，如果你正在烦恼实习怎么办的话，强烈建议你不用花时间去找个自己不喜欢的单位，然后在那里面实习，而是参加学校安排的实训，重点不是看你去哪里实习，而是要看你在实习的时候做了什么。实训的时候如果你想着水过去，那么也就水过去了，因为毕竟只是实训，项目经理不会过来骂你，说你完成的不好，完成的不对。所以还是那句话，自己要严格要求自己。大三实训完接着就是大四的上半学期，各大公司都会过来学校校招，这是一个丰收自己的学习成果的阶段，机会都是留给有准备的人的。但是要进好公司，比如腾讯，阿里，那么你估计需要大量的努力和一点点好运。同时我也推荐你们能进到互联网公司而不是传统IT行业。虽然互联网公司对技术要求高，但是对你来说，可以算是一个很好的平台，站得越高，看得越远。</p>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><p>感觉自言自语的很久，也算是对自己的大学生活的学习过程有了一个小总结，日后可以自己看看.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>好久不见，我的博客。离上次写博客，已经有很长一段时间过去了，这段时间之间自己刚毕业，刚迈入工作岗位，每天拼命的工作，生活不是很安定，和以前的大学生活差距很大，自然而然就没什么心情写写博客了。可能是因为想倾诉的东西很多吧，有太多的东西想倾诉给某人听，不过自己身边并没有那么适合的人，所以我最终还是找回自己的博客，将自己想说的都说给我自己的博客听。</p>\n<p>这次我想回忆回忆自己的大学学习生活。</p>\n<p>我是一名普通的西安电子科技大学软件学院的学生，我今天就想好好的说一说我自己在大学的学习故事。</p>\n<h2 id=\"西电有一个很好的软件IT氛围\"><a href=\"#西电有一个很好的软件IT氛围\" class=\"headerlink\" title=\"西电有一个很好的软件IT氛围\"></a>西电有一个很好的软件IT氛围</h2><p>大二左右的时候，自己打开qq和微信就可以看到很多人拉队友，参加各种竞赛，增加自己的能力和经验，自己身边也不乏各种编程大神，当我还只会使用windows的时候，人家都已经熟练的使用着ubantu了。每次做软件的大作业的时候，我总会花一两礼拜的时间，泡在图书馆里，学习编程知识，然后边问那些大神们，边完成自己的软件大作业。没有他们，我都不知道自己模拟制作的那些聊天室，web网站(基本处于玩玩的那种程度吧)能不能按时完成呢。我非常感谢自己可以很幸运的遇到他们，能够在他们提供的帮助下，一次次的完成老师布置的软件大作业，不会被老师挨骂，同时也会有那么一点点小小的成就感，毕竟程序的完成，都是我自己一个个代码敲出来的，虽然其实现方式和代码总体架构和设计上完成不能看就是了，基本处于做完就废的那种感觉。我也非常感谢他们不断的在我身边熏陶着一些编程新闻，让我至少在聊软件的时候，可以多说几句我知道的东西。现在很多人认为学软件是不错的选择，不过我还是善意的提醒一句，如果你真的喜欢敲代码，那么我不介意你去学，如果你只是单纯的想找一份比较好的工作，那么我觉得软件这一行业是不适合你的。</p>\n<h2 id=\"贵在坚持\"><a href=\"#贵在坚持\" class=\"headerlink\" title=\"贵在坚持\"></a>贵在坚持</h2><p>大一大二的时候，都是在上编程的基础课程，基本没有自己真正去敲代码的经验，所以自己真正接触代码的时间应该要从大三开始吧。大一大二平平庸庸的过了两年后，我慢慢的察觉到在大学里，按时完成老师布置的作业真的是远远不够的。我不知道985的学校是怎么样的，反正我觉得现在内陆的大学，因为看重毕业率，在大学学习，非常自由，老师不会给太难的任务，导师不会给太多的约束，完全就属于放养的状态。那么我们这些从小就按部就班，一步一步走过来的人呢，就会感觉没有了明确的目标，学习的劲头也没有以前足，加上有些人本身也并不喜欢软件这个专业。差不多到了大三，可以明显的看出我们这批人开始行动了起来，有的开始认真学习自己的专业知识，有的开始另求后路。大三这一年最辛苦的应该就是这些人了，他们每天应该看上去都像一个拼命三郎，每天都在准备的去翻越眼前的大山。我差不多也是这个时候开始喜欢泡图书馆，每天上完课，就回去图书馆看书学习，也是那个时候把自己的Mac系统用了起来，卸载了原来的windows。自从开始用Mac系统后，就开始慢慢的喜欢捣鼓自己的东西，因为Mac系统玩不了很多流行的游戏，自然而然我的时间就更多的花到了自己喜欢的地方去了。这些时间，有些我用来逛自己喜欢的博客，看看他们的生活和技术博文；有些我用来捣鼓Mac系统的使用，使得它更加的适合我平时的学习和使用；还有一些时间我就用来看看视频，发发弹幕，修身养性了。软件编程，我们经常会碰到一些奇奇怪怪的问题，这是因为我们现在大部分的程序员都是在使用软件巨人们帮我们打好的”地基”上面进行开发，由于我们对这些”地基”了解程度不够，没有好好的看文档，也没有好好的去理解深层的原理；有时候一个问题，可能会麻烦你好几天也没有个解决方法。这很考验一个人的坚持能力，如果你坚持了，说不定你成功了。做软件的，如果你真喜欢，那么不管发生什么事情，都请静下来，一个个的去解决眼前的问题，在解决完以后，自己要花点时间去思考，去总结，才能有所收获！</p>\n<h2 id=\"大学-玩\"><a href=\"#大学-玩\" class=\"headerlink\" title=\"大学==玩?\"></a>大学==玩?</h2><p>至少在我小时候居住的环境下，都流行着一种不好的风气，就是高中好好念，上个好大学，在大学里就可以不用像高中那样拼命学习。正如我现在的导师所说，你现在努力过头，不给自己一个喘气的机会，你怎么保证自己可以一直这种状态工作下去呢？没错，现在很多小孩子，从小学，初中到高中，特别是高三，更是把自己的全部都豁了出去，就像这是自己一生中最后一次拼搏一样，有些努力的身体出毛病，有些则努力的自己的心理也开始扭曲。所以一旦毕了业，就会非常想好好休息休息，而因为之前拼搏太久，可能那三个月一点点的假期是远远不够的。所以自然而然，到了大学，我们开始追求自由的生活，不再那么努力，不再那么的看重学业，感觉自己的未来明朗清晰，把大学按部就班的读好，就可以找个好点的工作，然后开始自己的后半生。那么往往这样的结果是不好的。有句话说得好，出来混总有一天要还的。大学才是我们人生中最重要的时刻，你如何利用好你的大学时光，才能真正的决定你的未来。</p>\n<h2 id=\"大四的那点小事\"><a href=\"#大四的那点小事\" class=\"headerlink\" title=\"大四的那点小事\"></a>大四的那点小事</h2><p>西电软院，每年大三暑假都会安排一次实训，和一些软件公司合作，安排我们这些娃子去他们那里实习，实习的内容都是做一个模拟的项目，几个人一个小组进行正常的工作。我认为这是非常好的，甚至比有些自己找的实习机会更加的有帮助。如果在看这篇文章的同学正好是我校友而且也是软院的学生的话，如果你正在烦恼实习怎么办的话，强烈建议你不用花时间去找个自己不喜欢的单位，然后在那里面实习，而是参加学校安排的实训，重点不是看你去哪里实习，而是要看你在实习的时候做了什么。实训的时候如果你想着水过去，那么也就水过去了，因为毕竟只是实训，项目经理不会过来骂你，说你完成的不好，完成的不对。所以还是那句话，自己要严格要求自己。大三实训完接着就是大四的上半学期，各大公司都会过来学校校招，这是一个丰收自己的学习成果的阶段，机会都是留给有准备的人的。但是要进好公司，比如腾讯，阿里，那么你估计需要大量的努力和一点点好运。同时我也推荐你们能进到互联网公司而不是传统IT行业。虽然互联网公司对技术要求高，但是对你来说，可以算是一个很好的平台，站得越高，看得越远。</p>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><p>感觉自言自语的很久，也算是对自己的大学生活的学习过程有了一个小总结，日后可以自己看看.</p>\n"},{"title":"大学的日子(一)","date":"2019-04-24T05:25:26.000Z","_content":"\n{% img http://i63.tinypic.com/2a8p10o.jpg %}\n\n这是一篇回忆自己大学时光的文章\n\n  \t\t\n>比起不做而后悔，不如做了再后悔。\n>\t\t\t\t\t\t\t\t\t——空白《游戏人生》\n\n不得不说，电子游戏是我大学人生中占比重比较大的一部分内容，所以我想先拿一些值得写的，自认为比较有营养的游戏。\n\n高强度的高三结束后，顺利的来到了西电。心里当时确实是充满了对未来的幻想，想做这个，想干那么，心里想做的事真的很多很多～（标准结局：到现在有好多都没有完成～笑）\n\n和高中不一样，大一的自主时间很多，在认认真真完成了上课，作业，报告等任务后，可以剩下很多时间自由安排。自然而然，我想好好的享受一下游戏（毕竟高中三年都没能好好玩）\n\n{% img https://pbs.twimg.com/profile_images/692932156826451969/gNsHJSuZ.jpg %}\n\n## LOL\n\n>那天的团灭，依然记忆犹新\n\nDota，LOL，可以说它们展开了电子竞技的辉煌舞台。对一个职业的电子竞技选手，综合素质可以说是要非常强的。\n\n我觉得这类游戏，可以锻炼一个人的以下能力：\n\n* 全局观念\n* 抗压能力\n* 团队能力（领导）\n\n对全局的掌控，是这类游戏上手的玩家应该做的第一门功课。什么时候，应该干什么。具备这一点，才能让胜利离你更近一步。毕竟这游戏的胜利方式不是取决于杀死敌对玩家操作的人物，而是拆除敌方核心建筑物取胜。如果对全局的掌控好的话，取胜的方法是有很多的，就算你们处于劣势也没关系，重点在于调配全局的动向。\n\n在电子竞技的正式比赛上，观赛人数是不输于别的竞技类节目的。这也就让参赛选手更加想赢得比赛的胜利，向世界证明自己的实力。但是期望越大，在面临我方劣势的时候，压力也就会越大。这就是我所说的抗压能力的体现。如果在这场比赛中，你的抗压能力更好，那么很有可能你会获得最后的胜利。\n\n最后想说的是团队能力。有一句话说得好 “这是五个人的舞台，而不是让你一枝独秀的地方” \n是的，团队在这个游戏的份量是很大的。一般来说，五个人中会分配一个统帅全队的玩家，而到底是哪个玩家来统帅其余4个玩家，带领全队走向胜利，那么这是要由很多方面说明的，简单来说，你展示的足够优秀，那么其余的人自然会跟上你的节奏，顺从你的引导。而当我方和敌方集体交战的时候，就是所谓的\"团战\"。团战爆发的时候，各司其职是很重要的，中间如果出错一环，都有可能失败，让战局逆转。而如何在团战中站稳自己的位置，要说的就更多了，这里就简单的说一句，相信自己的队友！\n\nLOL在大一还是玩的比较多的一款游戏，觉得是一款精良的游戏。要说还可以持续多久，我觉得这游戏再活5，6年应该是可以的，也许甚至更多\n\n---\n## ElsWorld\n\n{% img http://i68.tinypic.com/2l8uu4y.png %}\n\n\n>吾乃 艾拉 韩\n\n这款游戏就没有那么有名了，但是其实它在韩国还是很火的一款游戏。\n\n接触这款游戏的初衷那自然就是被一个游戏人物的人设所吸引了（上图中的妹子）\n\n个人爱好：\n我在2D的建模方面都是比较挑剔的，只要是有关2D的游戏，扫一脸所有人物的建模，就可以让我对这个游戏产生了一个6成的评价。其次的4成在于声优的配音工作是否理解了人物本身的性格。\n\n而其中的一个枪兵角色，艾拉 韩，不管是在人物建模还是声优配音方面，我都给100分的评价。\n\n人物建模依旧是ElsWorld的人物建模的团队，在这里我向他们致敬，他们还是用心在不断的创造欣赏力极佳的人物（后来的新成员希尔与露也有一种匠心巨作的感觉）\n\n声优方面，佐藤聪美为其配音的真可谓非常的到位！那声音入耳后就觉得，艾拉是一个比较坚强，好学，但是又有点冒失的孩子，再配上自认为完美的人物建模，和技能特效（艾拉的技能特效全部设定为晚秋的红黄色，所有技能的释放都会伴有秋叶的飘落，技能“飞燕”，更是把秋叶飘落特效放大到极致，词贫的我只能已“美”来形容了）\n\n游戏体验：\n选好了角色，那么后面的人物就是玩这款游戏了。\n\n可以说，中国的游戏玩家素质还是非常令人失望的（苦笑），国服的ElsWorld环境并不是很好，玩的人也不多。\n\n不过自从官方发布了一个HA技能演示视频后，在各大视频网站上转播，国内玩家到了最峰值，我也是在那段时间认识了很多和自己有一样爱好的小伙伴们（笑）\n\n游戏主要就是打副本性质的游戏，同时也拥有玩家对战pk的功能。\n\nElsWorld的玩家对战是设计的很好的。玩过毒奶粉的对战后，我就感到ElsWorld设计者在设计对战规则的独到之处。不过对战的装备还是越厉害越好，所以这一点上依旧是一个大坑。不过好在玩家不多，随便带点装备，就可以去愉快的和别人对战了～。\n\n游戏时间：从我转向Mac OSX之前都有间断的在玩，如果你和我差不多同龄，又喜欢二次，那么可以在课余时间尝试下这游戏呢。\n\n---\n\n## 结束\n\n在用了Mac OSX后，基本不玩端游了，我对自己大学阶段有关游戏的介绍也就告一段落了～不过，还真是一份不错的回忆。\n\n呼，时间也过去挺久了，今天就写到这里吧。","source":"_posts/大学的日子-一.md","raw":"---\ntitle: 大学的日子(一)\ndate: 2019-04-24 13:25:26\ntags: 回忆向 \ncategories: 生活\n---\n\n{% img http://i63.tinypic.com/2a8p10o.jpg %}\n\n这是一篇回忆自己大学时光的文章\n\n  \t\t\n>比起不做而后悔，不如做了再后悔。\n>\t\t\t\t\t\t\t\t\t——空白《游戏人生》\n\n不得不说，电子游戏是我大学人生中占比重比较大的一部分内容，所以我想先拿一些值得写的，自认为比较有营养的游戏。\n\n高强度的高三结束后，顺利的来到了西电。心里当时确实是充满了对未来的幻想，想做这个，想干那么，心里想做的事真的很多很多～（标准结局：到现在有好多都没有完成～笑）\n\n和高中不一样，大一的自主时间很多，在认认真真完成了上课，作业，报告等任务后，可以剩下很多时间自由安排。自然而然，我想好好的享受一下游戏（毕竟高中三年都没能好好玩）\n\n{% img https://pbs.twimg.com/profile_images/692932156826451969/gNsHJSuZ.jpg %}\n\n## LOL\n\n>那天的团灭，依然记忆犹新\n\nDota，LOL，可以说它们展开了电子竞技的辉煌舞台。对一个职业的电子竞技选手，综合素质可以说是要非常强的。\n\n我觉得这类游戏，可以锻炼一个人的以下能力：\n\n* 全局观念\n* 抗压能力\n* 团队能力（领导）\n\n对全局的掌控，是这类游戏上手的玩家应该做的第一门功课。什么时候，应该干什么。具备这一点，才能让胜利离你更近一步。毕竟这游戏的胜利方式不是取决于杀死敌对玩家操作的人物，而是拆除敌方核心建筑物取胜。如果对全局的掌控好的话，取胜的方法是有很多的，就算你们处于劣势也没关系，重点在于调配全局的动向。\n\n在电子竞技的正式比赛上，观赛人数是不输于别的竞技类节目的。这也就让参赛选手更加想赢得比赛的胜利，向世界证明自己的实力。但是期望越大，在面临我方劣势的时候，压力也就会越大。这就是我所说的抗压能力的体现。如果在这场比赛中，你的抗压能力更好，那么很有可能你会获得最后的胜利。\n\n最后想说的是团队能力。有一句话说得好 “这是五个人的舞台，而不是让你一枝独秀的地方” \n是的，团队在这个游戏的份量是很大的。一般来说，五个人中会分配一个统帅全队的玩家，而到底是哪个玩家来统帅其余4个玩家，带领全队走向胜利，那么这是要由很多方面说明的，简单来说，你展示的足够优秀，那么其余的人自然会跟上你的节奏，顺从你的引导。而当我方和敌方集体交战的时候，就是所谓的\"团战\"。团战爆发的时候，各司其职是很重要的，中间如果出错一环，都有可能失败，让战局逆转。而如何在团战中站稳自己的位置，要说的就更多了，这里就简单的说一句，相信自己的队友！\n\nLOL在大一还是玩的比较多的一款游戏，觉得是一款精良的游戏。要说还可以持续多久，我觉得这游戏再活5，6年应该是可以的，也许甚至更多\n\n---\n## ElsWorld\n\n{% img http://i68.tinypic.com/2l8uu4y.png %}\n\n\n>吾乃 艾拉 韩\n\n这款游戏就没有那么有名了，但是其实它在韩国还是很火的一款游戏。\n\n接触这款游戏的初衷那自然就是被一个游戏人物的人设所吸引了（上图中的妹子）\n\n个人爱好：\n我在2D的建模方面都是比较挑剔的，只要是有关2D的游戏，扫一脸所有人物的建模，就可以让我对这个游戏产生了一个6成的评价。其次的4成在于声优的配音工作是否理解了人物本身的性格。\n\n而其中的一个枪兵角色，艾拉 韩，不管是在人物建模还是声优配音方面，我都给100分的评价。\n\n人物建模依旧是ElsWorld的人物建模的团队，在这里我向他们致敬，他们还是用心在不断的创造欣赏力极佳的人物（后来的新成员希尔与露也有一种匠心巨作的感觉）\n\n声优方面，佐藤聪美为其配音的真可谓非常的到位！那声音入耳后就觉得，艾拉是一个比较坚强，好学，但是又有点冒失的孩子，再配上自认为完美的人物建模，和技能特效（艾拉的技能特效全部设定为晚秋的红黄色，所有技能的释放都会伴有秋叶的飘落，技能“飞燕”，更是把秋叶飘落特效放大到极致，词贫的我只能已“美”来形容了）\n\n游戏体验：\n选好了角色，那么后面的人物就是玩这款游戏了。\n\n可以说，中国的游戏玩家素质还是非常令人失望的（苦笑），国服的ElsWorld环境并不是很好，玩的人也不多。\n\n不过自从官方发布了一个HA技能演示视频后，在各大视频网站上转播，国内玩家到了最峰值，我也是在那段时间认识了很多和自己有一样爱好的小伙伴们（笑）\n\n游戏主要就是打副本性质的游戏，同时也拥有玩家对战pk的功能。\n\nElsWorld的玩家对战是设计的很好的。玩过毒奶粉的对战后，我就感到ElsWorld设计者在设计对战规则的独到之处。不过对战的装备还是越厉害越好，所以这一点上依旧是一个大坑。不过好在玩家不多，随便带点装备，就可以去愉快的和别人对战了～。\n\n游戏时间：从我转向Mac OSX之前都有间断的在玩，如果你和我差不多同龄，又喜欢二次，那么可以在课余时间尝试下这游戏呢。\n\n---\n\n## 结束\n\n在用了Mac OSX后，基本不玩端游了，我对自己大学阶段有关游戏的介绍也就告一段落了～不过，还真是一份不错的回忆。\n\n呼，时间也过去挺久了，今天就写到这里吧。","slug":"大学的日子-一","published":1,"updated":"2019-04-25T03:17:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjv3k3jur000mlk9vdl6l6men","content":"<img src=\"http://i63.tinypic.com/2a8p10o.jpg\">\n<p>这是一篇回忆自己大学时光的文章</p>\n<blockquote>\n<p>比起不做而后悔，不如做了再后悔。<br>                                   ——空白《游戏人生》</p>\n</blockquote>\n<p>不得不说，电子游戏是我大学人生中占比重比较大的一部分内容，所以我想先拿一些值得写的，自认为比较有营养的游戏。</p>\n<p>高强度的高三结束后，顺利的来到了西电。心里当时确实是充满了对未来的幻想，想做这个，想干那么，心里想做的事真的很多很多～（标准结局：到现在有好多都没有完成～笑）</p>\n<p>和高中不一样，大一的自主时间很多，在认认真真完成了上课，作业，报告等任务后，可以剩下很多时间自由安排。自然而然，我想好好的享受一下游戏（毕竟高中三年都没能好好玩）</p>\n<img src=\"https://pbs.twimg.com/profile_images/692932156826451969/gNsHJSuZ.jpg\">\n<h2 id=\"LOL\"><a href=\"#LOL\" class=\"headerlink\" title=\"LOL\"></a>LOL</h2><blockquote>\n<p>那天的团灭，依然记忆犹新</p>\n</blockquote>\n<p>Dota，LOL，可以说它们展开了电子竞技的辉煌舞台。对一个职业的电子竞技选手，综合素质可以说是要非常强的。</p>\n<p>我觉得这类游戏，可以锻炼一个人的以下能力：</p>\n<ul>\n<li>全局观念</li>\n<li>抗压能力</li>\n<li>团队能力（领导）</li>\n</ul>\n<p>对全局的掌控，是这类游戏上手的玩家应该做的第一门功课。什么时候，应该干什么。具备这一点，才能让胜利离你更近一步。毕竟这游戏的胜利方式不是取决于杀死敌对玩家操作的人物，而是拆除敌方核心建筑物取胜。如果对全局的掌控好的话，取胜的方法是有很多的，就算你们处于劣势也没关系，重点在于调配全局的动向。</p>\n<p>在电子竞技的正式比赛上，观赛人数是不输于别的竞技类节目的。这也就让参赛选手更加想赢得比赛的胜利，向世界证明自己的实力。但是期望越大，在面临我方劣势的时候，压力也就会越大。这就是我所说的抗压能力的体现。如果在这场比赛中，你的抗压能力更好，那么很有可能你会获得最后的胜利。</p>\n<p>最后想说的是团队能力。有一句话说得好 “这是五个人的舞台，而不是让你一枝独秀的地方”<br>是的，团队在这个游戏的份量是很大的。一般来说，五个人中会分配一个统帅全队的玩家，而到底是哪个玩家来统帅其余4个玩家，带领全队走向胜利，那么这是要由很多方面说明的，简单来说，你展示的足够优秀，那么其余的人自然会跟上你的节奏，顺从你的引导。而当我方和敌方集体交战的时候，就是所谓的”团战”。团战爆发的时候，各司其职是很重要的，中间如果出错一环，都有可能失败，让战局逆转。而如何在团战中站稳自己的位置，要说的就更多了，这里就简单的说一句，相信自己的队友！</p>\n<p>LOL在大一还是玩的比较多的一款游戏，觉得是一款精良的游戏。要说还可以持续多久，我觉得这游戏再活5，6年应该是可以的，也许甚至更多</p>\n<hr>\n<h2 id=\"ElsWorld\"><a href=\"#ElsWorld\" class=\"headerlink\" title=\"ElsWorld\"></a>ElsWorld</h2><img src=\"http://i68.tinypic.com/2l8uu4y.png\">\n<blockquote>\n<p>吾乃 艾拉 韩</p>\n</blockquote>\n<p>这款游戏就没有那么有名了，但是其实它在韩国还是很火的一款游戏。</p>\n<p>接触这款游戏的初衷那自然就是被一个游戏人物的人设所吸引了（上图中的妹子）</p>\n<p>个人爱好：<br>我在2D的建模方面都是比较挑剔的，只要是有关2D的游戏，扫一脸所有人物的建模，就可以让我对这个游戏产生了一个6成的评价。其次的4成在于声优的配音工作是否理解了人物本身的性格。</p>\n<p>而其中的一个枪兵角色，艾拉 韩，不管是在人物建模还是声优配音方面，我都给100分的评价。</p>\n<p>人物建模依旧是ElsWorld的人物建模的团队，在这里我向他们致敬，他们还是用心在不断的创造欣赏力极佳的人物（后来的新成员希尔与露也有一种匠心巨作的感觉）</p>\n<p>声优方面，佐藤聪美为其配音的真可谓非常的到位！那声音入耳后就觉得，艾拉是一个比较坚强，好学，但是又有点冒失的孩子，再配上自认为完美的人物建模，和技能特效（艾拉的技能特效全部设定为晚秋的红黄色，所有技能的释放都会伴有秋叶的飘落，技能“飞燕”，更是把秋叶飘落特效放大到极致，词贫的我只能已“美”来形容了）</p>\n<p>游戏体验：<br>选好了角色，那么后面的人物就是玩这款游戏了。</p>\n<p>可以说，中国的游戏玩家素质还是非常令人失望的（苦笑），国服的ElsWorld环境并不是很好，玩的人也不多。</p>\n<p>不过自从官方发布了一个HA技能演示视频后，在各大视频网站上转播，国内玩家到了最峰值，我也是在那段时间认识了很多和自己有一样爱好的小伙伴们（笑）</p>\n<p>游戏主要就是打副本性质的游戏，同时也拥有玩家对战pk的功能。</p>\n<p>ElsWorld的玩家对战是设计的很好的。玩过毒奶粉的对战后，我就感到ElsWorld设计者在设计对战规则的独到之处。不过对战的装备还是越厉害越好，所以这一点上依旧是一个大坑。不过好在玩家不多，随便带点装备，就可以去愉快的和别人对战了～。</p>\n<p>游戏时间：从我转向Mac OSX之前都有间断的在玩，如果你和我差不多同龄，又喜欢二次，那么可以在课余时间尝试下这游戏呢。</p>\n<hr>\n<h2 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h2><p>在用了Mac OSX后，基本不玩端游了，我对自己大学阶段有关游戏的介绍也就告一段落了～不过，还真是一份不错的回忆。</p>\n<p>呼，时间也过去挺久了，今天就写到这里吧。</p>\n","site":{"data":{}},"excerpt":"","more":"<img src=\"http://i63.tinypic.com/2a8p10o.jpg\">\n<p>这是一篇回忆自己大学时光的文章</p>\n<blockquote>\n<p>比起不做而后悔，不如做了再后悔。<br>                                   ——空白《游戏人生》</p>\n</blockquote>\n<p>不得不说，电子游戏是我大学人生中占比重比较大的一部分内容，所以我想先拿一些值得写的，自认为比较有营养的游戏。</p>\n<p>高强度的高三结束后，顺利的来到了西电。心里当时确实是充满了对未来的幻想，想做这个，想干那么，心里想做的事真的很多很多～（标准结局：到现在有好多都没有完成～笑）</p>\n<p>和高中不一样，大一的自主时间很多，在认认真真完成了上课，作业，报告等任务后，可以剩下很多时间自由安排。自然而然，我想好好的享受一下游戏（毕竟高中三年都没能好好玩）</p>\n<img src=\"https://pbs.twimg.com/profile_images/692932156826451969/gNsHJSuZ.jpg\">\n<h2 id=\"LOL\"><a href=\"#LOL\" class=\"headerlink\" title=\"LOL\"></a>LOL</h2><blockquote>\n<p>那天的团灭，依然记忆犹新</p>\n</blockquote>\n<p>Dota，LOL，可以说它们展开了电子竞技的辉煌舞台。对一个职业的电子竞技选手，综合素质可以说是要非常强的。</p>\n<p>我觉得这类游戏，可以锻炼一个人的以下能力：</p>\n<ul>\n<li>全局观念</li>\n<li>抗压能力</li>\n<li>团队能力（领导）</li>\n</ul>\n<p>对全局的掌控，是这类游戏上手的玩家应该做的第一门功课。什么时候，应该干什么。具备这一点，才能让胜利离你更近一步。毕竟这游戏的胜利方式不是取决于杀死敌对玩家操作的人物，而是拆除敌方核心建筑物取胜。如果对全局的掌控好的话，取胜的方法是有很多的，就算你们处于劣势也没关系，重点在于调配全局的动向。</p>\n<p>在电子竞技的正式比赛上，观赛人数是不输于别的竞技类节目的。这也就让参赛选手更加想赢得比赛的胜利，向世界证明自己的实力。但是期望越大，在面临我方劣势的时候，压力也就会越大。这就是我所说的抗压能力的体现。如果在这场比赛中，你的抗压能力更好，那么很有可能你会获得最后的胜利。</p>\n<p>最后想说的是团队能力。有一句话说得好 “这是五个人的舞台，而不是让你一枝独秀的地方”<br>是的，团队在这个游戏的份量是很大的。一般来说，五个人中会分配一个统帅全队的玩家，而到底是哪个玩家来统帅其余4个玩家，带领全队走向胜利，那么这是要由很多方面说明的，简单来说，你展示的足够优秀，那么其余的人自然会跟上你的节奏，顺从你的引导。而当我方和敌方集体交战的时候，就是所谓的”团战”。团战爆发的时候，各司其职是很重要的，中间如果出错一环，都有可能失败，让战局逆转。而如何在团战中站稳自己的位置，要说的就更多了，这里就简单的说一句，相信自己的队友！</p>\n<p>LOL在大一还是玩的比较多的一款游戏，觉得是一款精良的游戏。要说还可以持续多久，我觉得这游戏再活5，6年应该是可以的，也许甚至更多</p>\n<hr>\n<h2 id=\"ElsWorld\"><a href=\"#ElsWorld\" class=\"headerlink\" title=\"ElsWorld\"></a>ElsWorld</h2><img src=\"http://i68.tinypic.com/2l8uu4y.png\">\n<blockquote>\n<p>吾乃 艾拉 韩</p>\n</blockquote>\n<p>这款游戏就没有那么有名了，但是其实它在韩国还是很火的一款游戏。</p>\n<p>接触这款游戏的初衷那自然就是被一个游戏人物的人设所吸引了（上图中的妹子）</p>\n<p>个人爱好：<br>我在2D的建模方面都是比较挑剔的，只要是有关2D的游戏，扫一脸所有人物的建模，就可以让我对这个游戏产生了一个6成的评价。其次的4成在于声优的配音工作是否理解了人物本身的性格。</p>\n<p>而其中的一个枪兵角色，艾拉 韩，不管是在人物建模还是声优配音方面，我都给100分的评价。</p>\n<p>人物建模依旧是ElsWorld的人物建模的团队，在这里我向他们致敬，他们还是用心在不断的创造欣赏力极佳的人物（后来的新成员希尔与露也有一种匠心巨作的感觉）</p>\n<p>声优方面，佐藤聪美为其配音的真可谓非常的到位！那声音入耳后就觉得，艾拉是一个比较坚强，好学，但是又有点冒失的孩子，再配上自认为完美的人物建模，和技能特效（艾拉的技能特效全部设定为晚秋的红黄色，所有技能的释放都会伴有秋叶的飘落，技能“飞燕”，更是把秋叶飘落特效放大到极致，词贫的我只能已“美”来形容了）</p>\n<p>游戏体验：<br>选好了角色，那么后面的人物就是玩这款游戏了。</p>\n<p>可以说，中国的游戏玩家素质还是非常令人失望的（苦笑），国服的ElsWorld环境并不是很好，玩的人也不多。</p>\n<p>不过自从官方发布了一个HA技能演示视频后，在各大视频网站上转播，国内玩家到了最峰值，我也是在那段时间认识了很多和自己有一样爱好的小伙伴们（笑）</p>\n<p>游戏主要就是打副本性质的游戏，同时也拥有玩家对战pk的功能。</p>\n<p>ElsWorld的玩家对战是设计的很好的。玩过毒奶粉的对战后，我就感到ElsWorld设计者在设计对战规则的独到之处。不过对战的装备还是越厉害越好，所以这一点上依旧是一个大坑。不过好在玩家不多，随便带点装备，就可以去愉快的和别人对战了～。</p>\n<p>游戏时间：从我转向Mac OSX之前都有间断的在玩，如果你和我差不多同龄，又喜欢二次，那么可以在课余时间尝试下这游戏呢。</p>\n<hr>\n<h2 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h2><p>在用了Mac OSX后，基本不玩端游了，我对自己大学阶段有关游戏的介绍也就告一段落了～不过，还真是一份不错的回忆。</p>\n<p>呼，时间也过去挺久了，今天就写到这里吧。</p>\n"},{"title":"hexo备份之路","date":"2019-04-25T03:21:26.000Z","_content":"\n\b\b\b前阵子，我的hexo博客丢失源文件，吃了没有备份的源文件的苦头，所以现在我的hexo博客已经加上了备份机制，使其更加健壮了，本文将记录如何方便的进行hexo备份\n\n适用hexo版本 4.x\n查阅此文档前，您必须保证您已经阅读完毕hexo的官方文档，并且已经实际操作过，不然阅读以下的文字会让你理解上有点困难\n\n## hexo备份步骤\n\n1. 在一个新的文件夹(A文件夹)内使用git去clone你的github上的远程hexo库(yourgitname.github.io)，完成后A文件夹内会出现一个clone后的git库文件夹(yourgitname.github.io),点击进入后，里面是hexo用于生成网页的文件结构，而非hexo本地源文件。\n\n2. 打开浏览器，进入自己的github，为自己的远程hexo库建立一个分支，最好名为hexo，并将其设为默认分支（方便我们后续提交）。随后我们需要在这个分支内创建一个.gitignore文件。因为新版本hexo在执行`hexo init`等一系列建站脚本后，会在本地已经为你创建了一个.gitignore文件了，其文件内容就是我们想要的，将其内容复制到刚刚我们新创建的.gitignore文件内并上传至hexo分支即可（如何创建分支自行百度）\n\n3. hexo分支准备完成后，我们就可以在我们cmd界面使用`git checkout  hexo`将分支切到hexo分支，然后将我们的hexo源文件复制到这里，复制完成后将这些文件一并上传至远程hexo分支即可。到此就完成了hexo备份。现在我们就可以在本地的hexo分支环境下直接写新文章，写完后上传hexo分支，最后使用`hexo d`，让hexo脚本自动将生成后的文件上传至master分支。最后github上的hexo库的2个分支就完美的呈现它们的价值了，hexo分支内可以看到我们的本地源文件，master分支上就保存着`hexo d`对应的那些文件用于直接排版我们的网页\n\n4. 以防万一，我们最好在本地也对我们的源文件进行归档备份\n\n## 后续每次写完新文章后需要执行的shell指令\n\n1. git add <newfile>\n2. git commit -m \"备份\"\n3. git push origin hexo\n4. hexo g\n5. hexo d","source":"_posts/hexo备份之路.md","raw":"---\ntitle: hexo备份之路\ntags: hexo\ncategories: IT\ndate: 2019-04-25 11:21:26\n---\n\n\b\b\b前阵子，我的hexo博客丢失源文件，吃了没有备份的源文件的苦头，所以现在我的hexo博客已经加上了备份机制，使其更加健壮了，本文将记录如何方便的进行hexo备份\n\n适用hexo版本 4.x\n查阅此文档前，您必须保证您已经阅读完毕hexo的官方文档，并且已经实际操作过，不然阅读以下的文字会让你理解上有点困难\n\n## hexo备份步骤\n\n1. 在一个新的文件夹(A文件夹)内使用git去clone你的github上的远程hexo库(yourgitname.github.io)，完成后A文件夹内会出现一个clone后的git库文件夹(yourgitname.github.io),点击进入后，里面是hexo用于生成网页的文件结构，而非hexo本地源文件。\n\n2. 打开浏览器，进入自己的github，为自己的远程hexo库建立一个分支，最好名为hexo，并将其设为默认分支（方便我们后续提交）。随后我们需要在这个分支内创建一个.gitignore文件。因为新版本hexo在执行`hexo init`等一系列建站脚本后，会在本地已经为你创建了一个.gitignore文件了，其文件内容就是我们想要的，将其内容复制到刚刚我们新创建的.gitignore文件内并上传至hexo分支即可（如何创建分支自行百度）\n\n3. hexo分支准备完成后，我们就可以在我们cmd界面使用`git checkout  hexo`将分支切到hexo分支，然后将我们的hexo源文件复制到这里，复制完成后将这些文件一并上传至远程hexo分支即可。到此就完成了hexo备份。现在我们就可以在本地的hexo分支环境下直接写新文章，写完后上传hexo分支，最后使用`hexo d`，让hexo脚本自动将生成后的文件上传至master分支。最后github上的hexo库的2个分支就完美的呈现它们的价值了，hexo分支内可以看到我们的本地源文件，master分支上就保存着`hexo d`对应的那些文件用于直接排版我们的网页\n\n4. 以防万一，我们最好在本地也对我们的源文件进行归档备份\n\n## 后续每次写完新文章后需要执行的shell指令\n\n1. git add <newfile>\n2. git commit -m \"备份\"\n3. git push origin hexo\n4. hexo g\n5. hexo d","slug":"hexo备份之路","published":1,"updated":"2019-04-25T03:49:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjv3k3jus000plk9vy3ot4car","content":"<p>\b\b\b前阵子，我的hexo博客丢失源文件，吃了没有备份的源文件的苦头，所以现在我的hexo博客已经加上了备份机制，使其更加健壮了，本文将记录如何方便的进行hexo备份</p>\n<p>适用hexo版本 4.x<br>查阅此文档前，您必须保证您已经阅读完毕hexo的官方文档，并且已经实际操作过，不然阅读以下的文字会让你理解上有点困难</p>\n<h2 id=\"hexo备份步骤\"><a href=\"#hexo备份步骤\" class=\"headerlink\" title=\"hexo备份步骤\"></a>hexo备份步骤</h2><ol>\n<li><p>在一个新的文件夹(A文件夹)内使用git去clone你的github上的远程hexo库(yourgitname.github.io)，完成后A文件夹内会出现一个clone后的git库文件夹(yourgitname.github.io),点击进入后，里面是hexo用于生成网页的文件结构，而非hexo本地源文件。</p>\n</li>\n<li><p>打开浏览器，进入自己的github，为自己的远程hexo库建立一个分支，最好名为hexo，并将其设为默认分支（方便我们后续提交）。随后我们需要在这个分支内创建一个.gitignore文件。因为新版本hexo在执行<code>hexo init</code>等一系列建站脚本后，会在本地已经为你创建了一个.gitignore文件了，其文件内容就是我们想要的，将其内容复制到刚刚我们新创建的.gitignore文件内并上传至hexo分支即可（如何创建分支自行百度）</p>\n</li>\n<li><p>hexo分支准备完成后，我们就可以在我们cmd界面使用<code>git checkout  hexo</code>将分支切到hexo分支，然后将我们的hexo源文件复制到这里，复制完成后将这些文件一并上传至远程hexo分支即可。到此就完成了hexo备份。现在我们就可以在本地的hexo分支环境下直接写新文章，写完后上传hexo分支，最后使用<code>hexo d</code>，让hexo脚本自动将生成后的文件上传至master分支。最后github上的hexo库的2个分支就完美的呈现它们的价值了，hexo分支内可以看到我们的本地源文件，master分支上就保存着<code>hexo d</code>对应的那些文件用于直接排版我们的网页</p>\n</li>\n<li><p>以防万一，我们最好在本地也对我们的源文件进行归档备份</p>\n</li>\n</ol>\n<h2 id=\"后续每次写完新文章后需要执行的shell指令\"><a href=\"#后续每次写完新文章后需要执行的shell指令\" class=\"headerlink\" title=\"后续每次写完新文章后需要执行的shell指令\"></a>后续每次写完新文章后需要执行的shell指令</h2><ol>\n<li>git add <newfile></newfile></li>\n<li>git commit -m “备份”</li>\n<li>git push origin hexo</li>\n<li>hexo g</li>\n<li>hexo d</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>\b\b\b前阵子，我的hexo博客丢失源文件，吃了没有备份的源文件的苦头，所以现在我的hexo博客已经加上了备份机制，使其更加健壮了，本文将记录如何方便的进行hexo备份</p>\n<p>适用hexo版本 4.x<br>查阅此文档前，您必须保证您已经阅读完毕hexo的官方文档，并且已经实际操作过，不然阅读以下的文字会让你理解上有点困难</p>\n<h2 id=\"hexo备份步骤\"><a href=\"#hexo备份步骤\" class=\"headerlink\" title=\"hexo备份步骤\"></a>hexo备份步骤</h2><ol>\n<li><p>在一个新的文件夹(A文件夹)内使用git去clone你的github上的远程hexo库(yourgitname.github.io)，完成后A文件夹内会出现一个clone后的git库文件夹(yourgitname.github.io),点击进入后，里面是hexo用于生成网页的文件结构，而非hexo本地源文件。</p>\n</li>\n<li><p>打开浏览器，进入自己的github，为自己的远程hexo库建立一个分支，最好名为hexo，并将其设为默认分支（方便我们后续提交）。随后我们需要在这个分支内创建一个.gitignore文件。因为新版本hexo在执行<code>hexo init</code>等一系列建站脚本后，会在本地已经为你创建了一个.gitignore文件了，其文件内容就是我们想要的，将其内容复制到刚刚我们新创建的.gitignore文件内并上传至hexo分支即可（如何创建分支自行百度）</p>\n</li>\n<li><p>hexo分支准备完成后，我们就可以在我们cmd界面使用<code>git checkout  hexo</code>将分支切到hexo分支，然后将我们的hexo源文件复制到这里，复制完成后将这些文件一并上传至远程hexo分支即可。到此就完成了hexo备份。现在我们就可以在本地的hexo分支环境下直接写新文章，写完后上传hexo分支，最后使用<code>hexo d</code>，让hexo脚本自动将生成后的文件上传至master分支。最后github上的hexo库的2个分支就完美的呈现它们的价值了，hexo分支内可以看到我们的本地源文件，master分支上就保存着<code>hexo d</code>对应的那些文件用于直接排版我们的网页</p>\n</li>\n<li><p>以防万一，我们最好在本地也对我们的源文件进行归档备份</p>\n</li>\n</ol>\n<h2 id=\"后续每次写完新文章后需要执行的shell指令\"><a href=\"#后续每次写完新文章后需要执行的shell指令\" class=\"headerlink\" title=\"后续每次写完新文章后需要执行的shell指令\"></a>后续每次写完新文章后需要执行的shell指令</h2><ol>\n<li>git add <newfile></newfile></li>\n<li>git commit -m “备份”</li>\n<li>git push origin hexo</li>\n<li>hexo g</li>\n<li>hexo d</li>\n</ol>\n"},{"title":"自由软件许可证杂谈","date":"2019-04-24T05:54:41.000Z","_content":"\n昨天刚回浙江老家，在家里闷着无聊的时候，无意间瞄到了shadowsocks的Apache自由软件许可证，一时觉得很好奇，脑海里没有这方面的了解，就开始在网上看起了这方面的知识。于是乎是到了该总结的时候了。\n\n我仅会在此文章讨论下计算机软件的相关话题，即不会讨论别的事物的版权等问题，顶多会用别的东西来做个比方。\n\n### 还是从copyright说起\n---\n\n在我国，copyright就是著作权或者说版权的象征<sup id=\"fnref:freesw-1\"><a class=\"footnote-ref\" href=\"#fn:freesw-1\" rel=\"footnote\">1</a></sup>，比如小说，音乐，美术，甚至配音作品（cv一般都是在一个事务所下工作的，所以很多cv的配音版权可能都是归属于一个事务所里，但是这个是纯属我自己的猜测，我暂时也不想再上网去看看有关这方面的知识，我只知道必须一个cv配一个角色，那么除非这个cv无法继续进行配音工作，不然不能让别的cv来代役）\n\n你也许觉得你的作品如果不发表到公共领域就不会受到著作权的保护，其实不然。其实只要你完成了一个作品，并且具有独创性，那么你就享有者著作权的保护。\n\n我们经常可以在一些网站的底部看到copyright xxxx-xxxx by xxx .这些字样就表明了作者在声明自己的著作权，同时如果你再不经过作者同意的情况下对作品进行转发，分发，修改或者销售，就会受到法律的制裁。\n\n一般来说一个拥有著作权的作者有权对自己的作品如果用语商业用途后对要使用自己作品的商人收取部分著作费。这些费用是支持和鼓励作者保持一个良好的创造力的方法。毕竟人都是这样，有奖励才会有动力继续做。（做自己喜欢的事情，本身就是一种奖励，所以我们都喜欢无私的为自己喜欢的事情做贡献）\n\n那么为什么还会有copyleft机制呢？如果说copyright是为了使得人类的创造力能够源远流长，不会乱流，那么copyleft的出现岂不是“助纣为虐”，帮助那些非法使用者们非法的使用别人辛辛苦苦的制作出来的作品。\n\n### copyleft和free software\n---\n\n其实copyleft的出现是和“自由软件”<sup id=\"fnref:freesw-2\"><a class=\"footnote-ref\" href=\"#fn:freesw-2\" rel=\"footnote\">2</a></sup>息息相关的。现在我们可能见到的比较多的就是“开源”“open source”这样的字样，比如我们的android系统就是（部分）开源系统，有很多大牛投入其中，并且研究出了很多类似android的衍生系统。\n\n软件是开源的，代表我们可以阅读源代码，但其实并不意味了我们可以对其进行任意的修改，复制，或者用着其他用途，开源的软件，依然享有著作权，你可以看到大大的copyright声明贴在最下方，或者一个项目的项目说明书之类的地方。\n\n那么，我说的自由软件和copyleft的关系呢？其实copyleft就是专门为自由软件而存在的。“自由软件”其实就是不仅“开源”而且“do what you want to do！”。可能说成做任意你想做的说法不是很合适，至于为什么不是很合适，我会在下文继续说明。\n\n是copyleft的软件，那么就是自由软件，您可以在获取这个软件后，对该软件进行任意的修改，分发，或者改进软件后使其变成更优秀的软件，但是你必须要让这个派生作品也是一个copyleft的软件，即自由软件，不能让其变成一个私有软件或者专有软件从而让使用这软件的人们感觉不自由，或者处于不自由的状态。\n\n如果说一个软件不是一个自由软件，那么也许就会像一个垄断一样，全世界只有你一个公司知道这个软件的源代码，你的用户对你的软件会产生极大的依赖性，从而导致你可以任意收取你想要的费用，使得你的财产越做越大！\n\n但是如果说全世界只剩下私有软件或者专有软件，那么我们作为用户的权利就会微乎其微，因为用户无法知道自己所使用的软件，是否在正确的工作。（我相信在看的读者，一定看到过一些恶意软件的新闻，比如在后台自动收集该台电脑的各项记录或者数据等，这种在背后做的恶意软件的产生和肆意妄为，都是因为用户对源代码的未知）\n\n从上述观点中，我们不难看出，如果赋予一个软件copyleft，那么这个软件就会是安全的，而且是可以健康成长的！而不会使得这个软件被不正当的人群拿去使坏，除非他们不怕坐牢。\n\n不过我们也从前面的讨论中发现，也许只是一个copyright或者copyleft无法适应软件的各方面变化需求，比如你有一个copyleft的软件，但是却希望别的人可以拿去自由使用，甚至可以拿去使用做商业用途或者做出闭源这样的做法。一般来说，用户可以通过询问作者，来获取这方面的权限，但是如果用户多，问得多，就会对作者的生活感到很大的困扰。所以就有了自由软件许可证书。目前有很多自由软件许可证书，比如GNU GPL，GNU LGPL，BSD，MIT，Apache许可证等。不同的许可证有不同的对该自由软件的要求。不过关于自由开源许可证的内容，我放到下一节来讲\n\n### 自由开源许可证\n---\n\n其实copyleft的创始人也是GNU项目的创始人，所以GNU的证书都是copyleft的，和Apache开源许可证一对比，最大的差别就是，GNU GPL等证书用户修改后不能闭源，要继续保持开源，即继续作为一个自由软件为社区社会作出贡献。\n\n你能看到现在的很多软件，都会有一个copyright说明，同时还有一个自由开源许可证的保护。copyright保护了作者的著作权，而自由开源许可证则保护了软件的自由。如果一个软件没有说明自己是基于哪个自由开源许可证的，那么该软件就是基于我们的著作权保护法，你不能随意对作品进行复制，分发，修改或者改进。自由开源许可证就像是软件的保护法，保护着软件的各项行为。\n\n而关于各类许可证的作用，在网上则有很多说明文档，我这里就不重复赘述，但是也并无妨碍我说一下很常见的许可证，比如Apache自由开源许可证。这个许可证的要求是很低的，它不要求修改后的源代码必须开源，但是它要求修改过的文件，必须放置版权说明。\n\n### 尾语\n\n我估摸着想讲的好像都已经讲完了。我写这篇文章的目的主要还是在于，防止自己再未来看到许可证的时候不会一脸呆滞，至少我了解过这方面的知识，我知道这些许可证和版权的区别！\n\n---\n<li id=\"fn:freesw-1\" />[1]可参见https://en.wikipedia.org/wiki/Copyright<a href=\"https://en.wikipedia.org/wiki/Copyright\" target=\"_blank\">&#8617;</a>\n<li id=\"fn:freesw-2\" />[2]可参见https://fsfs-zh.readthedocs.io/zh/latest/<a href=\"https://fsfs-zh.readthedocs.io/zh/latest/\" target=\"_blank\">&#8617;</a>","source":"_posts/自由软件许可证杂谈.md","raw":"---\ntitle: 自由软件许可证杂谈\ntags: Bugs\ncategories: 计算机\ndate: 2019-04-24 13:54:41\n---\n\n昨天刚回浙江老家，在家里闷着无聊的时候，无意间瞄到了shadowsocks的Apache自由软件许可证，一时觉得很好奇，脑海里没有这方面的了解，就开始在网上看起了这方面的知识。于是乎是到了该总结的时候了。\n\n我仅会在此文章讨论下计算机软件的相关话题，即不会讨论别的事物的版权等问题，顶多会用别的东西来做个比方。\n\n### 还是从copyright说起\n---\n\n在我国，copyright就是著作权或者说版权的象征<sup id=\"fnref:freesw-1\"><a class=\"footnote-ref\" href=\"#fn:freesw-1\" rel=\"footnote\">1</a></sup>，比如小说，音乐，美术，甚至配音作品（cv一般都是在一个事务所下工作的，所以很多cv的配音版权可能都是归属于一个事务所里，但是这个是纯属我自己的猜测，我暂时也不想再上网去看看有关这方面的知识，我只知道必须一个cv配一个角色，那么除非这个cv无法继续进行配音工作，不然不能让别的cv来代役）\n\n你也许觉得你的作品如果不发表到公共领域就不会受到著作权的保护，其实不然。其实只要你完成了一个作品，并且具有独创性，那么你就享有者著作权的保护。\n\n我们经常可以在一些网站的底部看到copyright xxxx-xxxx by xxx .这些字样就表明了作者在声明自己的著作权，同时如果你再不经过作者同意的情况下对作品进行转发，分发，修改或者销售，就会受到法律的制裁。\n\n一般来说一个拥有著作权的作者有权对自己的作品如果用语商业用途后对要使用自己作品的商人收取部分著作费。这些费用是支持和鼓励作者保持一个良好的创造力的方法。毕竟人都是这样，有奖励才会有动力继续做。（做自己喜欢的事情，本身就是一种奖励，所以我们都喜欢无私的为自己喜欢的事情做贡献）\n\n那么为什么还会有copyleft机制呢？如果说copyright是为了使得人类的创造力能够源远流长，不会乱流，那么copyleft的出现岂不是“助纣为虐”，帮助那些非法使用者们非法的使用别人辛辛苦苦的制作出来的作品。\n\n### copyleft和free software\n---\n\n其实copyleft的出现是和“自由软件”<sup id=\"fnref:freesw-2\"><a class=\"footnote-ref\" href=\"#fn:freesw-2\" rel=\"footnote\">2</a></sup>息息相关的。现在我们可能见到的比较多的就是“开源”“open source”这样的字样，比如我们的android系统就是（部分）开源系统，有很多大牛投入其中，并且研究出了很多类似android的衍生系统。\n\n软件是开源的，代表我们可以阅读源代码，但其实并不意味了我们可以对其进行任意的修改，复制，或者用着其他用途，开源的软件，依然享有著作权，你可以看到大大的copyright声明贴在最下方，或者一个项目的项目说明书之类的地方。\n\n那么，我说的自由软件和copyleft的关系呢？其实copyleft就是专门为自由软件而存在的。“自由软件”其实就是不仅“开源”而且“do what you want to do！”。可能说成做任意你想做的说法不是很合适，至于为什么不是很合适，我会在下文继续说明。\n\n是copyleft的软件，那么就是自由软件，您可以在获取这个软件后，对该软件进行任意的修改，分发，或者改进软件后使其变成更优秀的软件，但是你必须要让这个派生作品也是一个copyleft的软件，即自由软件，不能让其变成一个私有软件或者专有软件从而让使用这软件的人们感觉不自由，或者处于不自由的状态。\n\n如果说一个软件不是一个自由软件，那么也许就会像一个垄断一样，全世界只有你一个公司知道这个软件的源代码，你的用户对你的软件会产生极大的依赖性，从而导致你可以任意收取你想要的费用，使得你的财产越做越大！\n\n但是如果说全世界只剩下私有软件或者专有软件，那么我们作为用户的权利就会微乎其微，因为用户无法知道自己所使用的软件，是否在正确的工作。（我相信在看的读者，一定看到过一些恶意软件的新闻，比如在后台自动收集该台电脑的各项记录或者数据等，这种在背后做的恶意软件的产生和肆意妄为，都是因为用户对源代码的未知）\n\n从上述观点中，我们不难看出，如果赋予一个软件copyleft，那么这个软件就会是安全的，而且是可以健康成长的！而不会使得这个软件被不正当的人群拿去使坏，除非他们不怕坐牢。\n\n不过我们也从前面的讨论中发现，也许只是一个copyright或者copyleft无法适应软件的各方面变化需求，比如你有一个copyleft的软件，但是却希望别的人可以拿去自由使用，甚至可以拿去使用做商业用途或者做出闭源这样的做法。一般来说，用户可以通过询问作者，来获取这方面的权限，但是如果用户多，问得多，就会对作者的生活感到很大的困扰。所以就有了自由软件许可证书。目前有很多自由软件许可证书，比如GNU GPL，GNU LGPL，BSD，MIT，Apache许可证等。不同的许可证有不同的对该自由软件的要求。不过关于自由开源许可证的内容，我放到下一节来讲\n\n### 自由开源许可证\n---\n\n其实copyleft的创始人也是GNU项目的创始人，所以GNU的证书都是copyleft的，和Apache开源许可证一对比，最大的差别就是，GNU GPL等证书用户修改后不能闭源，要继续保持开源，即继续作为一个自由软件为社区社会作出贡献。\n\n你能看到现在的很多软件，都会有一个copyright说明，同时还有一个自由开源许可证的保护。copyright保护了作者的著作权，而自由开源许可证则保护了软件的自由。如果一个软件没有说明自己是基于哪个自由开源许可证的，那么该软件就是基于我们的著作权保护法，你不能随意对作品进行复制，分发，修改或者改进。自由开源许可证就像是软件的保护法，保护着软件的各项行为。\n\n而关于各类许可证的作用，在网上则有很多说明文档，我这里就不重复赘述，但是也并无妨碍我说一下很常见的许可证，比如Apache自由开源许可证。这个许可证的要求是很低的，它不要求修改后的源代码必须开源，但是它要求修改过的文件，必须放置版权说明。\n\n### 尾语\n\n我估摸着想讲的好像都已经讲完了。我写这篇文章的目的主要还是在于，防止自己再未来看到许可证的时候不会一脸呆滞，至少我了解过这方面的知识，我知道这些许可证和版权的区别！\n\n---\n<li id=\"fn:freesw-1\" />[1]可参见https://en.wikipedia.org/wiki/Copyright<a href=\"https://en.wikipedia.org/wiki/Copyright\" target=\"_blank\">&#8617;</a>\n<li id=\"fn:freesw-2\" />[2]可参见https://fsfs-zh.readthedocs.io/zh/latest/<a href=\"https://fsfs-zh.readthedocs.io/zh/latest/\" target=\"_blank\">&#8617;</a>","slug":"自由软件许可证杂谈","published":1,"updated":"2019-04-25T03:17:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjv3k3jut000slk9vi2s45qk1","content":"<p>昨天刚回浙江老家，在家里闷着无聊的时候，无意间瞄到了shadowsocks的Apache自由软件许可证，一时觉得很好奇，脑海里没有这方面的了解，就开始在网上看起了这方面的知识。于是乎是到了该总结的时候了。</p>\n<p>我仅会在此文章讨论下计算机软件的相关话题，即不会讨论别的事物的版权等问题，顶多会用别的东西来做个比方。</p>\n<h3 id=\"还是从copyright说起\"><a href=\"#还是从copyright说起\" class=\"headerlink\" title=\"还是从copyright说起\"></a>还是从copyright说起</h3><hr>\n<p>在我国，copyright就是著作权或者说版权的象征<sup id=\"fnref:freesw-1\"><a class=\"footnote-ref\" href=\"#fn:freesw-1\" rel=\"footnote\">1</a></sup>，比如小说，音乐，美术，甚至配音作品（cv一般都是在一个事务所下工作的，所以很多cv的配音版权可能都是归属于一个事务所里，但是这个是纯属我自己的猜测，我暂时也不想再上网去看看有关这方面的知识，我只知道必须一个cv配一个角色，那么除非这个cv无法继续进行配音工作，不然不能让别的cv来代役）</p>\n<p>你也许觉得你的作品如果不发表到公共领域就不会受到著作权的保护，其实不然。其实只要你完成了一个作品，并且具有独创性，那么你就享有者著作权的保护。</p>\n<p>我们经常可以在一些网站的底部看到copyright xxxx-xxxx by xxx .这些字样就表明了作者在声明自己的著作权，同时如果你再不经过作者同意的情况下对作品进行转发，分发，修改或者销售，就会受到法律的制裁。</p>\n<p>一般来说一个拥有著作权的作者有权对自己的作品如果用语商业用途后对要使用自己作品的商人收取部分著作费。这些费用是支持和鼓励作者保持一个良好的创造力的方法。毕竟人都是这样，有奖励才会有动力继续做。（做自己喜欢的事情，本身就是一种奖励，所以我们都喜欢无私的为自己喜欢的事情做贡献）</p>\n<p>那么为什么还会有copyleft机制呢？如果说copyright是为了使得人类的创造力能够源远流长，不会乱流，那么copyleft的出现岂不是“助纣为虐”，帮助那些非法使用者们非法的使用别人辛辛苦苦的制作出来的作品。</p>\n<h3 id=\"copyleft和free-software\"><a href=\"#copyleft和free-software\" class=\"headerlink\" title=\"copyleft和free software\"></a>copyleft和free software</h3><hr>\n<p>其实copyleft的出现是和“自由软件”<sup id=\"fnref:freesw-2\"><a class=\"footnote-ref\" href=\"#fn:freesw-2\" rel=\"footnote\">2</a></sup>息息相关的。现在我们可能见到的比较多的就是“开源”“open source”这样的字样，比如我们的android系统就是（部分）开源系统，有很多大牛投入其中，并且研究出了很多类似android的衍生系统。</p>\n<p>软件是开源的，代表我们可以阅读源代码，但其实并不意味了我们可以对其进行任意的修改，复制，或者用着其他用途，开源的软件，依然享有著作权，你可以看到大大的copyright声明贴在最下方，或者一个项目的项目说明书之类的地方。</p>\n<p>那么，我说的自由软件和copyleft的关系呢？其实copyleft就是专门为自由软件而存在的。“自由软件”其实就是不仅“开源”而且“do what you want to do！”。可能说成做任意你想做的说法不是很合适，至于为什么不是很合适，我会在下文继续说明。</p>\n<p>是copyleft的软件，那么就是自由软件，您可以在获取这个软件后，对该软件进行任意的修改，分发，或者改进软件后使其变成更优秀的软件，但是你必须要让这个派生作品也是一个copyleft的软件，即自由软件，不能让其变成一个私有软件或者专有软件从而让使用这软件的人们感觉不自由，或者处于不自由的状态。</p>\n<p>如果说一个软件不是一个自由软件，那么也许就会像一个垄断一样，全世界只有你一个公司知道这个软件的源代码，你的用户对你的软件会产生极大的依赖性，从而导致你可以任意收取你想要的费用，使得你的财产越做越大！</p>\n<p>但是如果说全世界只剩下私有软件或者专有软件，那么我们作为用户的权利就会微乎其微，因为用户无法知道自己所使用的软件，是否在正确的工作。（我相信在看的读者，一定看到过一些恶意软件的新闻，比如在后台自动收集该台电脑的各项记录或者数据等，这种在背后做的恶意软件的产生和肆意妄为，都是因为用户对源代码的未知）</p>\n<p>从上述观点中，我们不难看出，如果赋予一个软件copyleft，那么这个软件就会是安全的，而且是可以健康成长的！而不会使得这个软件被不正当的人群拿去使坏，除非他们不怕坐牢。</p>\n<p>不过我们也从前面的讨论中发现，也许只是一个copyright或者copyleft无法适应软件的各方面变化需求，比如你有一个copyleft的软件，但是却希望别的人可以拿去自由使用，甚至可以拿去使用做商业用途或者做出闭源这样的做法。一般来说，用户可以通过询问作者，来获取这方面的权限，但是如果用户多，问得多，就会对作者的生活感到很大的困扰。所以就有了自由软件许可证书。目前有很多自由软件许可证书，比如GNU GPL，GNU LGPL，BSD，MIT，Apache许可证等。不同的许可证有不同的对该自由软件的要求。不过关于自由开源许可证的内容，我放到下一节来讲</p>\n<h3 id=\"自由开源许可证\"><a href=\"#自由开源许可证\" class=\"headerlink\" title=\"自由开源许可证\"></a>自由开源许可证</h3><hr>\n<p>其实copyleft的创始人也是GNU项目的创始人，所以GNU的证书都是copyleft的，和Apache开源许可证一对比，最大的差别就是，GNU GPL等证书用户修改后不能闭源，要继续保持开源，即继续作为一个自由软件为社区社会作出贡献。</p>\n<p>你能看到现在的很多软件，都会有一个copyright说明，同时还有一个自由开源许可证的保护。copyright保护了作者的著作权，而自由开源许可证则保护了软件的自由。如果一个软件没有说明自己是基于哪个自由开源许可证的，那么该软件就是基于我们的著作权保护法，你不能随意对作品进行复制，分发，修改或者改进。自由开源许可证就像是软件的保护法，保护着软件的各项行为。</p>\n<p>而关于各类许可证的作用，在网上则有很多说明文档，我这里就不重复赘述，但是也并无妨碍我说一下很常见的许可证，比如Apache自由开源许可证。这个许可证的要求是很低的，它不要求修改后的源代码必须开源，但是它要求修改过的文件，必须放置版权说明。</p>\n<h3 id=\"尾语\"><a href=\"#尾语\" class=\"headerlink\" title=\"尾语\"></a>尾语</h3><p>我估摸着想讲的好像都已经讲完了。我写这篇文章的目的主要还是在于，防止自己再未来看到许可证的时候不会一脸呆滞，至少我了解过这方面的知识，我知道这些许可证和版权的区别！</p>\n<hr>\n<p><li id=\"fn:freesw-1\">[1]可参见<a href=\"https://en.wikipedia.org/wiki/Copyright\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Copyright</a><a href=\"https://en.wikipedia.org/wiki/Copyright\" target=\"_blank\">&#8617;</a></li></p>\n<p><li id=\"fn:freesw-2\">[2]可参见<a href=\"https://fsfs-zh.readthedocs.io/zh/latest/\" target=\"_blank\" rel=\"noopener\">https://fsfs-zh.readthedocs.io/zh/latest/</a><a href=\"https://fsfs-zh.readthedocs.io/zh/latest/\" target=\"_blank\">&#8617;</a></li></p>\n","site":{"data":{}},"excerpt":"","more":"<p>昨天刚回浙江老家，在家里闷着无聊的时候，无意间瞄到了shadowsocks的Apache自由软件许可证，一时觉得很好奇，脑海里没有这方面的了解，就开始在网上看起了这方面的知识。于是乎是到了该总结的时候了。</p>\n<p>我仅会在此文章讨论下计算机软件的相关话题，即不会讨论别的事物的版权等问题，顶多会用别的东西来做个比方。</p>\n<h3 id=\"还是从copyright说起\"><a href=\"#还是从copyright说起\" class=\"headerlink\" title=\"还是从copyright说起\"></a>还是从copyright说起</h3><hr>\n<p>在我国，copyright就是著作权或者说版权的象征<sup id=\"fnref:freesw-1\"><a class=\"footnote-ref\" href=\"#fn:freesw-1\" rel=\"footnote\">1</a></sup>，比如小说，音乐，美术，甚至配音作品（cv一般都是在一个事务所下工作的，所以很多cv的配音版权可能都是归属于一个事务所里，但是这个是纯属我自己的猜测，我暂时也不想再上网去看看有关这方面的知识，我只知道必须一个cv配一个角色，那么除非这个cv无法继续进行配音工作，不然不能让别的cv来代役）</p>\n<p>你也许觉得你的作品如果不发表到公共领域就不会受到著作权的保护，其实不然。其实只要你完成了一个作品，并且具有独创性，那么你就享有者著作权的保护。</p>\n<p>我们经常可以在一些网站的底部看到copyright xxxx-xxxx by xxx .这些字样就表明了作者在声明自己的著作权，同时如果你再不经过作者同意的情况下对作品进行转发，分发，修改或者销售，就会受到法律的制裁。</p>\n<p>一般来说一个拥有著作权的作者有权对自己的作品如果用语商业用途后对要使用自己作品的商人收取部分著作费。这些费用是支持和鼓励作者保持一个良好的创造力的方法。毕竟人都是这样，有奖励才会有动力继续做。（做自己喜欢的事情，本身就是一种奖励，所以我们都喜欢无私的为自己喜欢的事情做贡献）</p>\n<p>那么为什么还会有copyleft机制呢？如果说copyright是为了使得人类的创造力能够源远流长，不会乱流，那么copyleft的出现岂不是“助纣为虐”，帮助那些非法使用者们非法的使用别人辛辛苦苦的制作出来的作品。</p>\n<h3 id=\"copyleft和free-software\"><a href=\"#copyleft和free-software\" class=\"headerlink\" title=\"copyleft和free software\"></a>copyleft和free software</h3><hr>\n<p>其实copyleft的出现是和“自由软件”<sup id=\"fnref:freesw-2\"><a class=\"footnote-ref\" href=\"#fn:freesw-2\" rel=\"footnote\">2</a></sup>息息相关的。现在我们可能见到的比较多的就是“开源”“open source”这样的字样，比如我们的android系统就是（部分）开源系统，有很多大牛投入其中，并且研究出了很多类似android的衍生系统。</p>\n<p>软件是开源的，代表我们可以阅读源代码，但其实并不意味了我们可以对其进行任意的修改，复制，或者用着其他用途，开源的软件，依然享有著作权，你可以看到大大的copyright声明贴在最下方，或者一个项目的项目说明书之类的地方。</p>\n<p>那么，我说的自由软件和copyleft的关系呢？其实copyleft就是专门为自由软件而存在的。“自由软件”其实就是不仅“开源”而且“do what you want to do！”。可能说成做任意你想做的说法不是很合适，至于为什么不是很合适，我会在下文继续说明。</p>\n<p>是copyleft的软件，那么就是自由软件，您可以在获取这个软件后，对该软件进行任意的修改，分发，或者改进软件后使其变成更优秀的软件，但是你必须要让这个派生作品也是一个copyleft的软件，即自由软件，不能让其变成一个私有软件或者专有软件从而让使用这软件的人们感觉不自由，或者处于不自由的状态。</p>\n<p>如果说一个软件不是一个自由软件，那么也许就会像一个垄断一样，全世界只有你一个公司知道这个软件的源代码，你的用户对你的软件会产生极大的依赖性，从而导致你可以任意收取你想要的费用，使得你的财产越做越大！</p>\n<p>但是如果说全世界只剩下私有软件或者专有软件，那么我们作为用户的权利就会微乎其微，因为用户无法知道自己所使用的软件，是否在正确的工作。（我相信在看的读者，一定看到过一些恶意软件的新闻，比如在后台自动收集该台电脑的各项记录或者数据等，这种在背后做的恶意软件的产生和肆意妄为，都是因为用户对源代码的未知）</p>\n<p>从上述观点中，我们不难看出，如果赋予一个软件copyleft，那么这个软件就会是安全的，而且是可以健康成长的！而不会使得这个软件被不正当的人群拿去使坏，除非他们不怕坐牢。</p>\n<p>不过我们也从前面的讨论中发现，也许只是一个copyright或者copyleft无法适应软件的各方面变化需求，比如你有一个copyleft的软件，但是却希望别的人可以拿去自由使用，甚至可以拿去使用做商业用途或者做出闭源这样的做法。一般来说，用户可以通过询问作者，来获取这方面的权限，但是如果用户多，问得多，就会对作者的生活感到很大的困扰。所以就有了自由软件许可证书。目前有很多自由软件许可证书，比如GNU GPL，GNU LGPL，BSD，MIT，Apache许可证等。不同的许可证有不同的对该自由软件的要求。不过关于自由开源许可证的内容，我放到下一节来讲</p>\n<h3 id=\"自由开源许可证\"><a href=\"#自由开源许可证\" class=\"headerlink\" title=\"自由开源许可证\"></a>自由开源许可证</h3><hr>\n<p>其实copyleft的创始人也是GNU项目的创始人，所以GNU的证书都是copyleft的，和Apache开源许可证一对比，最大的差别就是，GNU GPL等证书用户修改后不能闭源，要继续保持开源，即继续作为一个自由软件为社区社会作出贡献。</p>\n<p>你能看到现在的很多软件，都会有一个copyright说明，同时还有一个自由开源许可证的保护。copyright保护了作者的著作权，而自由开源许可证则保护了软件的自由。如果一个软件没有说明自己是基于哪个自由开源许可证的，那么该软件就是基于我们的著作权保护法，你不能随意对作品进行复制，分发，修改或者改进。自由开源许可证就像是软件的保护法，保护着软件的各项行为。</p>\n<p>而关于各类许可证的作用，在网上则有很多说明文档，我这里就不重复赘述，但是也并无妨碍我说一下很常见的许可证，比如Apache自由开源许可证。这个许可证的要求是很低的，它不要求修改后的源代码必须开源，但是它要求修改过的文件，必须放置版权说明。</p>\n<h3 id=\"尾语\"><a href=\"#尾语\" class=\"headerlink\" title=\"尾语\"></a>尾语</h3><p>我估摸着想讲的好像都已经讲完了。我写这篇文章的目的主要还是在于，防止自己再未来看到许可证的时候不会一脸呆滞，至少我了解过这方面的知识，我知道这些许可证和版权的区别！</p>\n<hr>\n<p><li id=\"fn:freesw-1\">[1]可参见<a href=\"https://en.wikipedia.org/wiki/Copyright\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Copyright</a><a href=\"https://en.wikipedia.org/wiki/Copyright\" target=\"_blank\">&#8617;</a></li></p>\n<p><li id=\"fn:freesw-2\">[2]可参见<a href=\"https://fsfs-zh.readthedocs.io/zh/latest/\" target=\"_blank\" rel=\"noopener\">https://fsfs-zh.readthedocs.io/zh/latest/</a><a href=\"https://fsfs-zh.readthedocs.io/zh/latest/\" target=\"_blank\">&#8617;</a></li></p>\n"},{"title":"踩坑的Bug总集","date":"2019-04-24T05:56:48.000Z","_content":"\n\n主要纪录我面向Google编程失败后自己解决的部分值得纪录问题，为LTS版本，长期更新\n\n## Java Exceptions\n\n---\n\n### 1.java.lang.NoSuchMethodError: com.mchange.v2.async.ThreadPoolAsynchronousRunner.\n\n\n第一次遇到这种java异常，看字面意思，找不到这样的方法的错误。\n\n哇 当时看到这个错误 第一个反应就是 我是不是没导这个jar包？ 然后我排查了一次jar包后发现，明明就有，所以我就非常的无奈，一边吐槽着垃圾Eclipse 一边无奈的各种网上搜解决方案\n\n很显然，大部分回答都是，checkout your jar！ \n\n但是我检查了jar包 然后海点进去检查了此jar包的对应的此方法，都是存在的 \n\n同时我也没有使用maven 不存在maven方面的问题 \n\n所以我就开始心急如焚，因为我发现自己解决不了这个问题 面向google编程也即将失效\n\n就在我快要崩溃的时候，看到有一个人说，会不会是jar包冲突？\n\n我瞬间就反应过来，还真说不定。因为我搭建这个项目的时候，跟着教程无脑导入了大量的jar包，也许就是这个问题\n\n于是，我使用了eclispse的类搜索功能。我一搜ThreadPoolAsynchronousRunner。。\n\n发现居然有两个结果\n\n好吧 同名类。。。。\n\n于是我删除了其中一个。。。\n\n运行后 异常消失，一切正常。\n\n###### 总结：\n在java项目中导入jar包乱导入 没有自己去一个个分析每个包的作用导致的jar包冲突的问题。 就好比现实中，有病乱投医，什么药都吃。也表示我吗以后着手做事情的时候，一定要把自己的工具的作用了解清楚再做后续的事情。\n\n\n\n## Mysql Exception\n\n---\n\n### 1.  the right syntax to use near \"xxx\"\n\n当你看到sql报错\n```\nYou have an error in your SQL syntax; check the manual that corresponds to >your MySQL server version for the right syntax to use near 'desc, name) >values (2, 'Test town desc.', 'Test town')' at line 1\n```\n\n类似这样的错误\n\n第一反应便是 你使用了mysql的保留字作为了你的数据库表名或者列名","source":"_posts/踩坑的Bug总集.md","raw":"---\ntitle: 踩坑的Bug总集\ntags: Bugs\ncategories: IT\ndate: 2019-04-24 13:56:48\n---\n\n\n主要纪录我面向Google编程失败后自己解决的部分值得纪录问题，为LTS版本，长期更新\n\n## Java Exceptions\n\n---\n\n### 1.java.lang.NoSuchMethodError: com.mchange.v2.async.ThreadPoolAsynchronousRunner.\n\n\n第一次遇到这种java异常，看字面意思，找不到这样的方法的错误。\n\n哇 当时看到这个错误 第一个反应就是 我是不是没导这个jar包？ 然后我排查了一次jar包后发现，明明就有，所以我就非常的无奈，一边吐槽着垃圾Eclipse 一边无奈的各种网上搜解决方案\n\n很显然，大部分回答都是，checkout your jar！ \n\n但是我检查了jar包 然后海点进去检查了此jar包的对应的此方法，都是存在的 \n\n同时我也没有使用maven 不存在maven方面的问题 \n\n所以我就开始心急如焚，因为我发现自己解决不了这个问题 面向google编程也即将失效\n\n就在我快要崩溃的时候，看到有一个人说，会不会是jar包冲突？\n\n我瞬间就反应过来，还真说不定。因为我搭建这个项目的时候，跟着教程无脑导入了大量的jar包，也许就是这个问题\n\n于是，我使用了eclispse的类搜索功能。我一搜ThreadPoolAsynchronousRunner。。\n\n发现居然有两个结果\n\n好吧 同名类。。。。\n\n于是我删除了其中一个。。。\n\n运行后 异常消失，一切正常。\n\n###### 总结：\n在java项目中导入jar包乱导入 没有自己去一个个分析每个包的作用导致的jar包冲突的问题。 就好比现实中，有病乱投医，什么药都吃。也表示我吗以后着手做事情的时候，一定要把自己的工具的作用了解清楚再做后续的事情。\n\n\n\n## Mysql Exception\n\n---\n\n### 1.  the right syntax to use near \"xxx\"\n\n当你看到sql报错\n```\nYou have an error in your SQL syntax; check the manual that corresponds to >your MySQL server version for the right syntax to use near 'desc, name) >values (2, 'Test town desc.', 'Test town')' at line 1\n```\n\n类似这样的错误\n\n第一反应便是 你使用了mysql的保留字作为了你的数据库表名或者列名","slug":"踩坑的Bug总集","published":1,"updated":"2019-04-25T03:17:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjv3k3juv000wlk9vzm2xur2n","content":"<p>主要纪录我面向Google编程失败后自己解决的部分值得纪录问题，为LTS版本，长期更新</p>\n<h2 id=\"Java-Exceptions\"><a href=\"#Java-Exceptions\" class=\"headerlink\" title=\"Java Exceptions\"></a>Java Exceptions</h2><hr>\n<h3 id=\"1-java-lang-NoSuchMethodError-com-mchange-v2-async-ThreadPoolAsynchronousRunner\"><a href=\"#1-java-lang-NoSuchMethodError-com-mchange-v2-async-ThreadPoolAsynchronousRunner\" class=\"headerlink\" title=\"1.java.lang.NoSuchMethodError: com.mchange.v2.async.ThreadPoolAsynchronousRunner.\"></a>1.java.lang.NoSuchMethodError: com.mchange.v2.async.ThreadPoolAsynchronousRunner.</h3><p>第一次遇到这种java异常，看字面意思，找不到这样的方法的错误。</p>\n<p>哇 当时看到这个错误 第一个反应就是 我是不是没导这个jar包？ 然后我排查了一次jar包后发现，明明就有，所以我就非常的无奈，一边吐槽着垃圾Eclipse 一边无奈的各种网上搜解决方案</p>\n<p>很显然，大部分回答都是，checkout your jar！ </p>\n<p>但是我检查了jar包 然后海点进去检查了此jar包的对应的此方法，都是存在的 </p>\n<p>同时我也没有使用maven 不存在maven方面的问题 </p>\n<p>所以我就开始心急如焚，因为我发现自己解决不了这个问题 面向google编程也即将失效</p>\n<p>就在我快要崩溃的时候，看到有一个人说，会不会是jar包冲突？</p>\n<p>我瞬间就反应过来，还真说不定。因为我搭建这个项目的时候，跟着教程无脑导入了大量的jar包，也许就是这个问题</p>\n<p>于是，我使用了eclispse的类搜索功能。我一搜ThreadPoolAsynchronousRunner。。</p>\n<p>发现居然有两个结果</p>\n<p>好吧 同名类。。。。</p>\n<p>于是我删除了其中一个。。。</p>\n<p>运行后 异常消失，一切正常。</p>\n<h6 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h6><p>在java项目中导入jar包乱导入 没有自己去一个个分析每个包的作用导致的jar包冲突的问题。 就好比现实中，有病乱投医，什么药都吃。也表示我吗以后着手做事情的时候，一定要把自己的工具的作用了解清楚再做后续的事情。</p>\n<h2 id=\"Mysql-Exception\"><a href=\"#Mysql-Exception\" class=\"headerlink\" title=\"Mysql Exception\"></a>Mysql Exception</h2><hr>\n<h3 id=\"1-the-right-syntax-to-use-near-“xxx”\"><a href=\"#1-the-right-syntax-to-use-near-“xxx”\" class=\"headerlink\" title=\"1.  the right syntax to use near “xxx”\"></a>1.  the right syntax to use near “xxx”</h3><p>当你看到sql报错<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You have an error in your SQL syntax; check the manual that corresponds to &gt;your MySQL server version for the right syntax to use near &apos;desc, name) &gt;values (2, &apos;Test town desc.&apos;, &apos;Test town&apos;)&apos; at line 1</span><br></pre></td></tr></table></figure></p>\n<p>类似这样的错误</p>\n<p>第一反应便是 你使用了mysql的保留字作为了你的数据库表名或者列名</p>\n","site":{"data":{}},"excerpt":"","more":"<p>主要纪录我面向Google编程失败后自己解决的部分值得纪录问题，为LTS版本，长期更新</p>\n<h2 id=\"Java-Exceptions\"><a href=\"#Java-Exceptions\" class=\"headerlink\" title=\"Java Exceptions\"></a>Java Exceptions</h2><hr>\n<h3 id=\"1-java-lang-NoSuchMethodError-com-mchange-v2-async-ThreadPoolAsynchronousRunner\"><a href=\"#1-java-lang-NoSuchMethodError-com-mchange-v2-async-ThreadPoolAsynchronousRunner\" class=\"headerlink\" title=\"1.java.lang.NoSuchMethodError: com.mchange.v2.async.ThreadPoolAsynchronousRunner.\"></a>1.java.lang.NoSuchMethodError: com.mchange.v2.async.ThreadPoolAsynchronousRunner.</h3><p>第一次遇到这种java异常，看字面意思，找不到这样的方法的错误。</p>\n<p>哇 当时看到这个错误 第一个反应就是 我是不是没导这个jar包？ 然后我排查了一次jar包后发现，明明就有，所以我就非常的无奈，一边吐槽着垃圾Eclipse 一边无奈的各种网上搜解决方案</p>\n<p>很显然，大部分回答都是，checkout your jar！ </p>\n<p>但是我检查了jar包 然后海点进去检查了此jar包的对应的此方法，都是存在的 </p>\n<p>同时我也没有使用maven 不存在maven方面的问题 </p>\n<p>所以我就开始心急如焚，因为我发现自己解决不了这个问题 面向google编程也即将失效</p>\n<p>就在我快要崩溃的时候，看到有一个人说，会不会是jar包冲突？</p>\n<p>我瞬间就反应过来，还真说不定。因为我搭建这个项目的时候，跟着教程无脑导入了大量的jar包，也许就是这个问题</p>\n<p>于是，我使用了eclispse的类搜索功能。我一搜ThreadPoolAsynchronousRunner。。</p>\n<p>发现居然有两个结果</p>\n<p>好吧 同名类。。。。</p>\n<p>于是我删除了其中一个。。。</p>\n<p>运行后 异常消失，一切正常。</p>\n<h6 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h6><p>在java项目中导入jar包乱导入 没有自己去一个个分析每个包的作用导致的jar包冲突的问题。 就好比现实中，有病乱投医，什么药都吃。也表示我吗以后着手做事情的时候，一定要把自己的工具的作用了解清楚再做后续的事情。</p>\n<h2 id=\"Mysql-Exception\"><a href=\"#Mysql-Exception\" class=\"headerlink\" title=\"Mysql Exception\"></a>Mysql Exception</h2><hr>\n<h3 id=\"1-the-right-syntax-to-use-near-“xxx”\"><a href=\"#1-the-right-syntax-to-use-near-“xxx”\" class=\"headerlink\" title=\"1.  the right syntax to use near “xxx”\"></a>1.  the right syntax to use near “xxx”</h3><p>当你看到sql报错<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You have an error in your SQL syntax; check the manual that corresponds to &gt;your MySQL server version for the right syntax to use near &apos;desc, name) &gt;values (2, &apos;Test town desc.&apos;, &apos;Test town&apos;)&apos; at line 1</span><br></pre></td></tr></table></figure></p>\n<p>类似这样的错误</p>\n<p>第一反应便是 你使用了mysql的保留字作为了你的数据库表名或者列名</p>\n"},{"title":"Servlet的总结","date":"2019-04-24T05:52:41.000Z","_content":"\n一篇对JavaWeb的Servlet的个人理解\n\n<!-- more -->\n## 什么是Servlet\n\n---\n\nservlet是运行在web服务器上的小型Java程序（即服务器端的小应用程序），servlet通常通过HTTP接收和响应来自web客户端的要求\n\n我所熟知的是关于httpservlet的使用。不要觉得知道了http servlet，但是却不知道https的相关使用。其实https只是http的一层安全包装而已，底层使用的还是一样的东西。所以并没有https servlet这个说法\n\n本文不会阐述servlet的使用。因为会使用和懂是两码事，比如你知道枪如何使用，但是你知道枪的内部运行原理吗？\n\n所以本节将努力的将Servlet的工作原理解释清楚，希望学习web开发的读者也可以用心去理解，虽然不需要你去掌握，但至少理解是必要的。\n\n## Tomcat基本知识\n\n---\n对于学习web开发的我们来说，tomcat那是再熟悉不过的东西了。简单来说，tomcat就是一种servlet容器，就好比手枪，手枪有很多种，tomcat就像一种手枪，里面装的“子弹“就是我们要讲的servlet。这小节我会阐述下什么是tomcat，tomcat怎么样，tomcat能干什么\n\n作为web开发人员来说，知道tomcat，那么肯定也知道apache。\n\nTomcat现在是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目。由Apache、Sun 和其他一些公司及个人共同开发而成。（Java开发人员不知道Sun的人可以去死了）\n\nTomcat的特点\n\n* 免费，开源，清凉，很适合我们学习人员的使用。\n* 它内含了一个单独的Http服务器，它也可以被视作一个单独的Web服务器。但是如果说只是将Tomcat用于单独的web服务器，那么在一些有速度和事务处理有要求的情况下来说是不利的，他没有其它完备的web服务器功能那么牛逼，比如（Apache服务器？）所以Tomcat常常会讲其中的Servlet引擎配合其它web服务器使用。\n* Tomcat实现了对Servlet和JavaServer Page（JSP）的支持，所以Tomcat内部有一个Jsp编译器（Jsper模块），用以将JSP编译成一个Servlet。这里就不得不说JSP的九大隐含对象了，request，response，pageContext，session，application，config，out，page，exception\n\nTomcat简单来说就是可以作为一个简易的web服务器，你可以将你的站点放置在Tomcat上，由Tomcat进行管理。\n## Tomcat的总体架构\n\n---\n讲完了Tomcat的一些基本知识，接下来说说Tomcat的总体架构\n\n一个好的软件是需要非常模块化的，tomcat也不例外，我们先了解了Tomcat的总体架构，那么再对其中的一部分一部分进行分析，我想作为一个web开发人员，你掌握了这些，也可算是合格的一员了。\n\n先给出一张tomcat容器模型图\n{% img https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/image001.gif %}\n\n可以看到一个tomcat下可以有很多个Service服务。\n\nService可以说是一个接口，实现它的标准类是StandardService\n{% img https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/image002.png %}\n{% img https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/image003.png %}\n\n所以说一个Service服务，其实就是一个StandardService的实例进程。\n\n那么我们可以说说一个StandardService在干嘛呢？从上图的方法名就可以知道，比如setContainer,setServer,addConnector（这些Container和Connector后面会重点讲，先别急）\n这些方法其实可以说是对Container和Connector等相关初始化工作\n\n是的，Service其实就是Container和Connector的一个外部包装，专门负责Container和Connector之间的管理。比如一个Connector要将request和response传递给Container，就是需要Service的帮忙。\n\n那么Service由谁来管理呢？ 233，也许你会脱口而出，“由tomcat管理”。哈哈，tomcat其实只是一个名字而已，真正管理Service的肯定也是代码呢。\n\n细心的同学应该会发现，之前有一个setServer方法，那么Server是谁呢？ 我想聪明的你肯定猜到了，对Server就是管理Service的。Server类中有一个addService方法，用于添加Service。\n\nok，说到这里，我想大家应该对Server和Service有了大致的了解，那么接下来就来说说有关Service内部的事情。\n\n---\n\n我们知道Service里面包含有Container和Connector，简单来说Connector是负责接收浏览器的发过来的 tcp 连接请求\n，然后将其信息封装为Request和Response，将其传递给Container处理（在一个子线程中执行Container，主线程依旧等待新的tcp请求）\n\nok，我想大家应该知道Container和Connector之间的关系了吧，那么接下来说说Connector是如何工作的\n\nTomcat5 中默认的 Connector 是 Coyote，这个 Connector 是可以选择替换的.（至今也仍然在使用Coyote，此外是可以替换的，也说明了Tomcat模块化很好。是的，模块好真的很不错！其实减轻了不少开发人员的负担，可以更好的分配工作）\n\n###### 首先呢Connector如何接受tcp请求？ \n\n嗯，交给Socket呗，不多讲了\n\n###### 其次呢Connector是如何管理多个请求的？多线程体现在哪里？\n\n你可以理解为一个while循环，检测一个信号量，如果有请求来了，会改变这个信号量，从而进入while循环内部，然后就会进行一次有关操作了。\n\n同时主线程继续等待，等待新的请求进来。\n\n###### Connector如何处理一次请求的\n\nConnector处理一次请求，靠的是两个类的运作，HttpConnector和HttpProcessor\n\nHttpConnector用于等待新的请求，有新的请求后，就会转交给HttpProcessor处理，HttpProcessor的process方法，会将tcp请求的信息封装为对应的Request和Response实例\n\n最后这个Request和Response就会转递给Container，而转递的任务就是之前讲的Service的工作了。\n\n---\n\n理解了Connector的工作原理后，我们就来讲讲Container的工作原理吧\n\n我们还是先来看看container容器的内部模型图\n\n{% img https://www.ibm.com/developerworks/cn/java/j-lo-servlet/image002.jpg %}\n\n可以看到一个Container内部有Engine，Host，Context还有Wrapper。ok，还是简单之上，我们其实不需要了解的很细，只要知道其每个部分都在干什么就行了\n\n###### Engine容器\n首先一个Container里有一个Engine容器，这个容器比较简单，它只定义了一些基本的关联关系，初始化和它相关联的组件，以及一些事件的监听。一个简单的Servlet，也许根本不需要Engine这一层的管理\n\n---\n###### Host容器\n从英文单词上看就知道，host代表主机，不过host容器可以有多个，所以如果对web开发比较熟悉的人，应该就知道了，host其实就代表虚拟主机的意思。对，所以说其实一个host容器就代表一个站点哦！ 比方说，我想再建立一个站点，但是我不需要再去找一个web服务器重新设置我的站点，我只需要建立一个虚拟主机，虽然url看上去不一样，但是其实请求都是有同一个container再处理数据哦。\n\n---\n###### Context容器\nContext代表Servlet的Context，它具备了Servlet运行的基本环境，理论上只要有Context就能运行Servlet了。简单的Tomcat可以没有Engine和Host。\n\n所以简单来说，Context用于管理Servlet！\n\n---\n###### Wrapper容器\nWrapper 代表一个 Servlet，它负责管理一个 Servlet，包括的 Servlet 的装载、初始化、执行以及资源回收。Wrapper 是最底层的容器，它没有子容器了，所以调用它的 addChild 将会报错。\n\n所以说一个Context容器里可以有很多个Wrapper，我们每次在web.xml中注册一个Servlet的时候，就会相应的建立一个Wrapper哦\n\n---\n\n## Servlet的工作原理\n\n---\n\n##### Servlet的初始化流程\n\n我们之前有提到Context容器就是Servlet的居住地，里面的Wrapper就代表一个Servlet。（ps：Wrapper只是一层Servlet的封装，为了将Servlet和tomcat分开，因为tomcat是tomcat，而servlet则是另一个领域模块，意思就是说，也许今后会有更厉害的servlet改装版本，然后这个改装版本就可以直接装入wrapper类中，体现了低耦合，高内聚）\n\n要执行一个Servlet的相关方法前，我们肯定要先实例化Servlet，由Context容器来实例化Servlet，那么我们就先从Conetxt的初始化讲起\n\nContext容器的初始化可以看两大部分\n\n1.ContextConfig 的 init 方法将会主要完成以下工作：\n\n* 创建用于解析 xml 配置文件的 contextDigester 对象\n* 读取默认 context.xml 配置文件，如果存在解析它\n* 读取默认 Host 配置文件，如果存在解析它\n* 读取默认 Context 自身的配置文件，如果存在解析它\n* 设置 Context 的 DocBase\n\n2.ContextConfig 的 init 方法完成后，Context 容器的会执行 startInternal 方法，这个方法启动逻辑比较复杂，主要包括如下几个部分：\n\n* 创建读取资源文件的对象\n* 创建 ClassLoader 对象\n* 设置应用的工作目录\n* 启动相关的辅助类如：logger、realm、resources 等\n* 修改启动状态，通知感兴趣的观察者（Web 应用的配置）\n子容器的初始化\n* 获取 ServletContext 并设置必要的参数\n* 初始化“load on startup”的 Servlet\n\n这其中是很复杂的，但是我现在主要任务是让大家理解总体脉络，细节部分也不是我们应该掌握的\n\n既然Context容器的初始化工作完了，那么接下来就要解析一个web应用了。我们知道一个web应用的一个重要的配置文件叫web.xml。所以说，接下来Context容器就会去解析web.xml文件，有Servlet就想应的调用wrapper的相关方法，初始化，创建Servlet等。所以说 Context 容器才是真正运行 Servlet 的 Servlet 容器。一个 Web 应用对应一个 Context 容器。\n\n###### Servlet实例\n\n上文所讲的，我们就已经做完了所有Servlet的初始化工作，接下来我们就要在应用启动的时候，实例化对应的Servlet了。Tomcat在实例化Servlet的时候，是按照有需求再实例化的逻辑的。不过其实这样是不好的，因为如果一个servlet的内容过去庞大的话，在初始化的时候就会需要大量的时间，那么这个初始化时间对于使用这个wen应用的客户来说就是一个blank的盲等待，过场的等待会让客户很生气的，毕竟电脑上的等待10秒，相当于等地铁30分钟呢。所以说，我们要尽量设置load-on-startup属性，这个属性设置后，Context容器就会在Tomcat启动的时候对相应的Servlet进行一次实例化\n\nServlet实例化的工作由Wrapper完成，Wrapper简单的调用Servlet的init方法，对Servlet进行初始化。（当然这里还可能初始化的是一个jspServlet，不过道理一样，不多说了）\n\n---\n\n## Servlet的体系结构\n\n---\n\n{% img https://www.ibm.com/developerworks/cn/java/j-lo-servlet/image010.jpg %}\n\n从上图可以看到，和Servlet有关的类有ServletRequest，ServletResponse，ServletConfig，ServletContext\n\nRequest和Response我们就不多说了，这个学过Servlet的使用后就一定会接触的\n\nServletConfig，可以说是具有这个Servlet的相关配置信息的类\n\n而ServletConetxt，则有这个Servlet所寄居的Contetx容器的相关信息，具体信息都请查阅相关API接口\n\n---\n\n## Servlet如何工作\n\n---\n一个请求到来后，如何知道这个请求要去哪个Servlet里进行相关操作呢？\n\n这个分配去向的任务很简单\n\n将url解析，映射到对应的Container容器，Container容器获取到的request里带有mappingData属性，这个属性是mapper类根据这次请求的 hostnane 和 contextpath 将 host 和 context 容器设置到 Request 的 mappingData 属性中的。所以request进入到Conetxt容器里时候，就会知道自己该去哪个wrapper里了！\n\n---\n\n## 总结\n\nServlet的所有工作流程已经总结完毕，有对其中部分不理解的地方，可以对这个部分进行google的关键字搜索了解更多的知识！\n\n友情链接：\n\n* https://www.ibm.com/developerworks/cn/java/j-lo-servlet/\n* https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/\n* http://www.tqcto.com/article/web/51385.html\n","source":"_posts/Servlet的总结.md","raw":"---\ntitle: Servlet的总结\ntags: JavaWeb\ncategories: IT\ndate: 2019-04-24 13:52:41\n---\n\n一篇对JavaWeb的Servlet的个人理解\n\n<!-- more -->\n## 什么是Servlet\n\n---\n\nservlet是运行在web服务器上的小型Java程序（即服务器端的小应用程序），servlet通常通过HTTP接收和响应来自web客户端的要求\n\n我所熟知的是关于httpservlet的使用。不要觉得知道了http servlet，但是却不知道https的相关使用。其实https只是http的一层安全包装而已，底层使用的还是一样的东西。所以并没有https servlet这个说法\n\n本文不会阐述servlet的使用。因为会使用和懂是两码事，比如你知道枪如何使用，但是你知道枪的内部运行原理吗？\n\n所以本节将努力的将Servlet的工作原理解释清楚，希望学习web开发的读者也可以用心去理解，虽然不需要你去掌握，但至少理解是必要的。\n\n## Tomcat基本知识\n\n---\n对于学习web开发的我们来说，tomcat那是再熟悉不过的东西了。简单来说，tomcat就是一种servlet容器，就好比手枪，手枪有很多种，tomcat就像一种手枪，里面装的“子弹“就是我们要讲的servlet。这小节我会阐述下什么是tomcat，tomcat怎么样，tomcat能干什么\n\n作为web开发人员来说，知道tomcat，那么肯定也知道apache。\n\nTomcat现在是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目。由Apache、Sun 和其他一些公司及个人共同开发而成。（Java开发人员不知道Sun的人可以去死了）\n\nTomcat的特点\n\n* 免费，开源，清凉，很适合我们学习人员的使用。\n* 它内含了一个单独的Http服务器，它也可以被视作一个单独的Web服务器。但是如果说只是将Tomcat用于单独的web服务器，那么在一些有速度和事务处理有要求的情况下来说是不利的，他没有其它完备的web服务器功能那么牛逼，比如（Apache服务器？）所以Tomcat常常会讲其中的Servlet引擎配合其它web服务器使用。\n* Tomcat实现了对Servlet和JavaServer Page（JSP）的支持，所以Tomcat内部有一个Jsp编译器（Jsper模块），用以将JSP编译成一个Servlet。这里就不得不说JSP的九大隐含对象了，request，response，pageContext，session，application，config，out，page，exception\n\nTomcat简单来说就是可以作为一个简易的web服务器，你可以将你的站点放置在Tomcat上，由Tomcat进行管理。\n## Tomcat的总体架构\n\n---\n讲完了Tomcat的一些基本知识，接下来说说Tomcat的总体架构\n\n一个好的软件是需要非常模块化的，tomcat也不例外，我们先了解了Tomcat的总体架构，那么再对其中的一部分一部分进行分析，我想作为一个web开发人员，你掌握了这些，也可算是合格的一员了。\n\n先给出一张tomcat容器模型图\n{% img https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/image001.gif %}\n\n可以看到一个tomcat下可以有很多个Service服务。\n\nService可以说是一个接口，实现它的标准类是StandardService\n{% img https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/image002.png %}\n{% img https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/image003.png %}\n\n所以说一个Service服务，其实就是一个StandardService的实例进程。\n\n那么我们可以说说一个StandardService在干嘛呢？从上图的方法名就可以知道，比如setContainer,setServer,addConnector（这些Container和Connector后面会重点讲，先别急）\n这些方法其实可以说是对Container和Connector等相关初始化工作\n\n是的，Service其实就是Container和Connector的一个外部包装，专门负责Container和Connector之间的管理。比如一个Connector要将request和response传递给Container，就是需要Service的帮忙。\n\n那么Service由谁来管理呢？ 233，也许你会脱口而出，“由tomcat管理”。哈哈，tomcat其实只是一个名字而已，真正管理Service的肯定也是代码呢。\n\n细心的同学应该会发现，之前有一个setServer方法，那么Server是谁呢？ 我想聪明的你肯定猜到了，对Server就是管理Service的。Server类中有一个addService方法，用于添加Service。\n\nok，说到这里，我想大家应该对Server和Service有了大致的了解，那么接下来就来说说有关Service内部的事情。\n\n---\n\n我们知道Service里面包含有Container和Connector，简单来说Connector是负责接收浏览器的发过来的 tcp 连接请求\n，然后将其信息封装为Request和Response，将其传递给Container处理（在一个子线程中执行Container，主线程依旧等待新的tcp请求）\n\nok，我想大家应该知道Container和Connector之间的关系了吧，那么接下来说说Connector是如何工作的\n\nTomcat5 中默认的 Connector 是 Coyote，这个 Connector 是可以选择替换的.（至今也仍然在使用Coyote，此外是可以替换的，也说明了Tomcat模块化很好。是的，模块好真的很不错！其实减轻了不少开发人员的负担，可以更好的分配工作）\n\n###### 首先呢Connector如何接受tcp请求？ \n\n嗯，交给Socket呗，不多讲了\n\n###### 其次呢Connector是如何管理多个请求的？多线程体现在哪里？\n\n你可以理解为一个while循环，检测一个信号量，如果有请求来了，会改变这个信号量，从而进入while循环内部，然后就会进行一次有关操作了。\n\n同时主线程继续等待，等待新的请求进来。\n\n###### Connector如何处理一次请求的\n\nConnector处理一次请求，靠的是两个类的运作，HttpConnector和HttpProcessor\n\nHttpConnector用于等待新的请求，有新的请求后，就会转交给HttpProcessor处理，HttpProcessor的process方法，会将tcp请求的信息封装为对应的Request和Response实例\n\n最后这个Request和Response就会转递给Container，而转递的任务就是之前讲的Service的工作了。\n\n---\n\n理解了Connector的工作原理后，我们就来讲讲Container的工作原理吧\n\n我们还是先来看看container容器的内部模型图\n\n{% img https://www.ibm.com/developerworks/cn/java/j-lo-servlet/image002.jpg %}\n\n可以看到一个Container内部有Engine，Host，Context还有Wrapper。ok，还是简单之上，我们其实不需要了解的很细，只要知道其每个部分都在干什么就行了\n\n###### Engine容器\n首先一个Container里有一个Engine容器，这个容器比较简单，它只定义了一些基本的关联关系，初始化和它相关联的组件，以及一些事件的监听。一个简单的Servlet，也许根本不需要Engine这一层的管理\n\n---\n###### Host容器\n从英文单词上看就知道，host代表主机，不过host容器可以有多个，所以如果对web开发比较熟悉的人，应该就知道了，host其实就代表虚拟主机的意思。对，所以说其实一个host容器就代表一个站点哦！ 比方说，我想再建立一个站点，但是我不需要再去找一个web服务器重新设置我的站点，我只需要建立一个虚拟主机，虽然url看上去不一样，但是其实请求都是有同一个container再处理数据哦。\n\n---\n###### Context容器\nContext代表Servlet的Context，它具备了Servlet运行的基本环境，理论上只要有Context就能运行Servlet了。简单的Tomcat可以没有Engine和Host。\n\n所以简单来说，Context用于管理Servlet！\n\n---\n###### Wrapper容器\nWrapper 代表一个 Servlet，它负责管理一个 Servlet，包括的 Servlet 的装载、初始化、执行以及资源回收。Wrapper 是最底层的容器，它没有子容器了，所以调用它的 addChild 将会报错。\n\n所以说一个Context容器里可以有很多个Wrapper，我们每次在web.xml中注册一个Servlet的时候，就会相应的建立一个Wrapper哦\n\n---\n\n## Servlet的工作原理\n\n---\n\n##### Servlet的初始化流程\n\n我们之前有提到Context容器就是Servlet的居住地，里面的Wrapper就代表一个Servlet。（ps：Wrapper只是一层Servlet的封装，为了将Servlet和tomcat分开，因为tomcat是tomcat，而servlet则是另一个领域模块，意思就是说，也许今后会有更厉害的servlet改装版本，然后这个改装版本就可以直接装入wrapper类中，体现了低耦合，高内聚）\n\n要执行一个Servlet的相关方法前，我们肯定要先实例化Servlet，由Context容器来实例化Servlet，那么我们就先从Conetxt的初始化讲起\n\nContext容器的初始化可以看两大部分\n\n1.ContextConfig 的 init 方法将会主要完成以下工作：\n\n* 创建用于解析 xml 配置文件的 contextDigester 对象\n* 读取默认 context.xml 配置文件，如果存在解析它\n* 读取默认 Host 配置文件，如果存在解析它\n* 读取默认 Context 自身的配置文件，如果存在解析它\n* 设置 Context 的 DocBase\n\n2.ContextConfig 的 init 方法完成后，Context 容器的会执行 startInternal 方法，这个方法启动逻辑比较复杂，主要包括如下几个部分：\n\n* 创建读取资源文件的对象\n* 创建 ClassLoader 对象\n* 设置应用的工作目录\n* 启动相关的辅助类如：logger、realm、resources 等\n* 修改启动状态，通知感兴趣的观察者（Web 应用的配置）\n子容器的初始化\n* 获取 ServletContext 并设置必要的参数\n* 初始化“load on startup”的 Servlet\n\n这其中是很复杂的，但是我现在主要任务是让大家理解总体脉络，细节部分也不是我们应该掌握的\n\n既然Context容器的初始化工作完了，那么接下来就要解析一个web应用了。我们知道一个web应用的一个重要的配置文件叫web.xml。所以说，接下来Context容器就会去解析web.xml文件，有Servlet就想应的调用wrapper的相关方法，初始化，创建Servlet等。所以说 Context 容器才是真正运行 Servlet 的 Servlet 容器。一个 Web 应用对应一个 Context 容器。\n\n###### Servlet实例\n\n上文所讲的，我们就已经做完了所有Servlet的初始化工作，接下来我们就要在应用启动的时候，实例化对应的Servlet了。Tomcat在实例化Servlet的时候，是按照有需求再实例化的逻辑的。不过其实这样是不好的，因为如果一个servlet的内容过去庞大的话，在初始化的时候就会需要大量的时间，那么这个初始化时间对于使用这个wen应用的客户来说就是一个blank的盲等待，过场的等待会让客户很生气的，毕竟电脑上的等待10秒，相当于等地铁30分钟呢。所以说，我们要尽量设置load-on-startup属性，这个属性设置后，Context容器就会在Tomcat启动的时候对相应的Servlet进行一次实例化\n\nServlet实例化的工作由Wrapper完成，Wrapper简单的调用Servlet的init方法，对Servlet进行初始化。（当然这里还可能初始化的是一个jspServlet，不过道理一样，不多说了）\n\n---\n\n## Servlet的体系结构\n\n---\n\n{% img https://www.ibm.com/developerworks/cn/java/j-lo-servlet/image010.jpg %}\n\n从上图可以看到，和Servlet有关的类有ServletRequest，ServletResponse，ServletConfig，ServletContext\n\nRequest和Response我们就不多说了，这个学过Servlet的使用后就一定会接触的\n\nServletConfig，可以说是具有这个Servlet的相关配置信息的类\n\n而ServletConetxt，则有这个Servlet所寄居的Contetx容器的相关信息，具体信息都请查阅相关API接口\n\n---\n\n## Servlet如何工作\n\n---\n一个请求到来后，如何知道这个请求要去哪个Servlet里进行相关操作呢？\n\n这个分配去向的任务很简单\n\n将url解析，映射到对应的Container容器，Container容器获取到的request里带有mappingData属性，这个属性是mapper类根据这次请求的 hostnane 和 contextpath 将 host 和 context 容器设置到 Request 的 mappingData 属性中的。所以request进入到Conetxt容器里时候，就会知道自己该去哪个wrapper里了！\n\n---\n\n## 总结\n\nServlet的所有工作流程已经总结完毕，有对其中部分不理解的地方，可以对这个部分进行google的关键字搜索了解更多的知识！\n\n友情链接：\n\n* https://www.ibm.com/developerworks/cn/java/j-lo-servlet/\n* https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/\n* http://www.tqcto.com/article/web/51385.html\n","slug":"Servlet的总结","published":1,"updated":"2019-04-25T03:17:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjv3k3jw1001hlk9vxx65xhse","content":"<p>一篇对JavaWeb的Servlet的个人理解</p>\n<a id=\"more\"></a>\n<h2 id=\"什么是Servlet\"><a href=\"#什么是Servlet\" class=\"headerlink\" title=\"什么是Servlet\"></a>什么是Servlet</h2><hr>\n<p>servlet是运行在web服务器上的小型Java程序（即服务器端的小应用程序），servlet通常通过HTTP接收和响应来自web客户端的要求</p>\n<p>我所熟知的是关于httpservlet的使用。不要觉得知道了http servlet，但是却不知道https的相关使用。其实https只是http的一层安全包装而已，底层使用的还是一样的东西。所以并没有https servlet这个说法</p>\n<p>本文不会阐述servlet的使用。因为会使用和懂是两码事，比如你知道枪如何使用，但是你知道枪的内部运行原理吗？</p>\n<p>所以本节将努力的将Servlet的工作原理解释清楚，希望学习web开发的读者也可以用心去理解，虽然不需要你去掌握，但至少理解是必要的。</p>\n<h2 id=\"Tomcat基本知识\"><a href=\"#Tomcat基本知识\" class=\"headerlink\" title=\"Tomcat基本知识\"></a>Tomcat基本知识</h2><hr>\n<p>对于学习web开发的我们来说，tomcat那是再熟悉不过的东西了。简单来说，tomcat就是一种servlet容器，就好比手枪，手枪有很多种，tomcat就像一种手枪，里面装的“子弹“就是我们要讲的servlet。这小节我会阐述下什么是tomcat，tomcat怎么样，tomcat能干什么</p>\n<p>作为web开发人员来说，知道tomcat，那么肯定也知道apache。</p>\n<p>Tomcat现在是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目。由Apache、Sun 和其他一些公司及个人共同开发而成。（Java开发人员不知道Sun的人可以去死了）</p>\n<p>Tomcat的特点</p>\n<ul>\n<li>免费，开源，清凉，很适合我们学习人员的使用。</li>\n<li>它内含了一个单独的Http服务器，它也可以被视作一个单独的Web服务器。但是如果说只是将Tomcat用于单独的web服务器，那么在一些有速度和事务处理有要求的情况下来说是不利的，他没有其它完备的web服务器功能那么牛逼，比如（Apache服务器？）所以Tomcat常常会讲其中的Servlet引擎配合其它web服务器使用。</li>\n<li>Tomcat实现了对Servlet和JavaServer Page（JSP）的支持，所以Tomcat内部有一个Jsp编译器（Jsper模块），用以将JSP编译成一个Servlet。这里就不得不说JSP的九大隐含对象了，request，response，pageContext，session，application，config，out，page，exception</li>\n</ul>\n<p>Tomcat简单来说就是可以作为一个简易的web服务器，你可以将你的站点放置在Tomcat上，由Tomcat进行管理。</p>\n<h2 id=\"Tomcat的总体架构\"><a href=\"#Tomcat的总体架构\" class=\"headerlink\" title=\"Tomcat的总体架构\"></a>Tomcat的总体架构</h2><hr>\n<p>讲完了Tomcat的一些基本知识，接下来说说Tomcat的总体架构</p>\n<p>一个好的软件是需要非常模块化的，tomcat也不例外，我们先了解了Tomcat的总体架构，那么再对其中的一部分一部分进行分析，我想作为一个web开发人员，你掌握了这些，也可算是合格的一员了。</p>\n<p>先给出一张tomcat容器模型图<br><img src=\"https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/image001.gif\"></p>\n<p>可以看到一个tomcat下可以有很多个Service服务。</p>\n<p>Service可以说是一个接口，实现它的标准类是StandardService<br><img src=\"https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/image002.png\"><br><img src=\"https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/image003.png\"></p>\n<p>所以说一个Service服务，其实就是一个StandardService的实例进程。</p>\n<p>那么我们可以说说一个StandardService在干嘛呢？从上图的方法名就可以知道，比如setContainer,setServer,addConnector（这些Container和Connector后面会重点讲，先别急）<br>这些方法其实可以说是对Container和Connector等相关初始化工作</p>\n<p>是的，Service其实就是Container和Connector的一个外部包装，专门负责Container和Connector之间的管理。比如一个Connector要将request和response传递给Container，就是需要Service的帮忙。</p>\n<p>那么Service由谁来管理呢？ 233，也许你会脱口而出，“由tomcat管理”。哈哈，tomcat其实只是一个名字而已，真正管理Service的肯定也是代码呢。</p>\n<p>细心的同学应该会发现，之前有一个setServer方法，那么Server是谁呢？ 我想聪明的你肯定猜到了，对Server就是管理Service的。Server类中有一个addService方法，用于添加Service。</p>\n<p>ok，说到这里，我想大家应该对Server和Service有了大致的了解，那么接下来就来说说有关Service内部的事情。</p>\n<hr>\n<p>我们知道Service里面包含有Container和Connector，简单来说Connector是负责接收浏览器的发过来的 tcp 连接请求<br>，然后将其信息封装为Request和Response，将其传递给Container处理（在一个子线程中执行Container，主线程依旧等待新的tcp请求）</p>\n<p>ok，我想大家应该知道Container和Connector之间的关系了吧，那么接下来说说Connector是如何工作的</p>\n<p>Tomcat5 中默认的 Connector 是 Coyote，这个 Connector 是可以选择替换的.（至今也仍然在使用Coyote，此外是可以替换的，也说明了Tomcat模块化很好。是的，模块好真的很不错！其实减轻了不少开发人员的负担，可以更好的分配工作）</p>\n<h6 id=\"首先呢Connector如何接受tcp请求？\"><a href=\"#首先呢Connector如何接受tcp请求？\" class=\"headerlink\" title=\"首先呢Connector如何接受tcp请求？\"></a>首先呢Connector如何接受tcp请求？</h6><p>嗯，交给Socket呗，不多讲了</p>\n<h6 id=\"其次呢Connector是如何管理多个请求的？多线程体现在哪里？\"><a href=\"#其次呢Connector是如何管理多个请求的？多线程体现在哪里？\" class=\"headerlink\" title=\"其次呢Connector是如何管理多个请求的？多线程体现在哪里？\"></a>其次呢Connector是如何管理多个请求的？多线程体现在哪里？</h6><p>你可以理解为一个while循环，检测一个信号量，如果有请求来了，会改变这个信号量，从而进入while循环内部，然后就会进行一次有关操作了。</p>\n<p>同时主线程继续等待，等待新的请求进来。</p>\n<h6 id=\"Connector如何处理一次请求的\"><a href=\"#Connector如何处理一次请求的\" class=\"headerlink\" title=\"Connector如何处理一次请求的\"></a>Connector如何处理一次请求的</h6><p>Connector处理一次请求，靠的是两个类的运作，HttpConnector和HttpProcessor</p>\n<p>HttpConnector用于等待新的请求，有新的请求后，就会转交给HttpProcessor处理，HttpProcessor的process方法，会将tcp请求的信息封装为对应的Request和Response实例</p>\n<p>最后这个Request和Response就会转递给Container，而转递的任务就是之前讲的Service的工作了。</p>\n<hr>\n<p>理解了Connector的工作原理后，我们就来讲讲Container的工作原理吧</p>\n<p>我们还是先来看看container容器的内部模型图</p>\n<img src=\"https://www.ibm.com/developerworks/cn/java/j-lo-servlet/image002.jpg\">\n<p>可以看到一个Container内部有Engine，Host，Context还有Wrapper。ok，还是简单之上，我们其实不需要了解的很细，只要知道其每个部分都在干什么就行了</p>\n<h6 id=\"Engine容器\"><a href=\"#Engine容器\" class=\"headerlink\" title=\"Engine容器\"></a>Engine容器</h6><p>首先一个Container里有一个Engine容器，这个容器比较简单，它只定义了一些基本的关联关系，初始化和它相关联的组件，以及一些事件的监听。一个简单的Servlet，也许根本不需要Engine这一层的管理</p>\n<hr>\n<h6 id=\"Host容器\"><a href=\"#Host容器\" class=\"headerlink\" title=\"Host容器\"></a>Host容器</h6><p>从英文单词上看就知道，host代表主机，不过host容器可以有多个，所以如果对web开发比较熟悉的人，应该就知道了，host其实就代表虚拟主机的意思。对，所以说其实一个host容器就代表一个站点哦！ 比方说，我想再建立一个站点，但是我不需要再去找一个web服务器重新设置我的站点，我只需要建立一个虚拟主机，虽然url看上去不一样，但是其实请求都是有同一个container再处理数据哦。</p>\n<hr>\n<h6 id=\"Context容器\"><a href=\"#Context容器\" class=\"headerlink\" title=\"Context容器\"></a>Context容器</h6><p>Context代表Servlet的Context，它具备了Servlet运行的基本环境，理论上只要有Context就能运行Servlet了。简单的Tomcat可以没有Engine和Host。</p>\n<p>所以简单来说，Context用于管理Servlet！</p>\n<hr>\n<h6 id=\"Wrapper容器\"><a href=\"#Wrapper容器\" class=\"headerlink\" title=\"Wrapper容器\"></a>Wrapper容器</h6><p>Wrapper 代表一个 Servlet，它负责管理一个 Servlet，包括的 Servlet 的装载、初始化、执行以及资源回收。Wrapper 是最底层的容器，它没有子容器了，所以调用它的 addChild 将会报错。</p>\n<p>所以说一个Context容器里可以有很多个Wrapper，我们每次在web.xml中注册一个Servlet的时候，就会相应的建立一个Wrapper哦</p>\n<hr>\n<h2 id=\"Servlet的工作原理\"><a href=\"#Servlet的工作原理\" class=\"headerlink\" title=\"Servlet的工作原理\"></a>Servlet的工作原理</h2><hr>\n<h5 id=\"Servlet的初始化流程\"><a href=\"#Servlet的初始化流程\" class=\"headerlink\" title=\"Servlet的初始化流程\"></a>Servlet的初始化流程</h5><p>我们之前有提到Context容器就是Servlet的居住地，里面的Wrapper就代表一个Servlet。（ps：Wrapper只是一层Servlet的封装，为了将Servlet和tomcat分开，因为tomcat是tomcat，而servlet则是另一个领域模块，意思就是说，也许今后会有更厉害的servlet改装版本，然后这个改装版本就可以直接装入wrapper类中，体现了低耦合，高内聚）</p>\n<p>要执行一个Servlet的相关方法前，我们肯定要先实例化Servlet，由Context容器来实例化Servlet，那么我们就先从Conetxt的初始化讲起</p>\n<p>Context容器的初始化可以看两大部分</p>\n<p>1.ContextConfig 的 init 方法将会主要完成以下工作：</p>\n<ul>\n<li>创建用于解析 xml 配置文件的 contextDigester 对象</li>\n<li>读取默认 context.xml 配置文件，如果存在解析它</li>\n<li>读取默认 Host 配置文件，如果存在解析它</li>\n<li>读取默认 Context 自身的配置文件，如果存在解析它</li>\n<li>设置 Context 的 DocBase</li>\n</ul>\n<p>2.ContextConfig 的 init 方法完成后，Context 容器的会执行 startInternal 方法，这个方法启动逻辑比较复杂，主要包括如下几个部分：</p>\n<ul>\n<li>创建读取资源文件的对象</li>\n<li>创建 ClassLoader 对象</li>\n<li>设置应用的工作目录</li>\n<li>启动相关的辅助类如：logger、realm、resources 等</li>\n<li>修改启动状态，通知感兴趣的观察者（Web 应用的配置）<br>子容器的初始化</li>\n<li>获取 ServletContext 并设置必要的参数</li>\n<li>初始化“load on startup”的 Servlet</li>\n</ul>\n<p>这其中是很复杂的，但是我现在主要任务是让大家理解总体脉络，细节部分也不是我们应该掌握的</p>\n<p>既然Context容器的初始化工作完了，那么接下来就要解析一个web应用了。我们知道一个web应用的一个重要的配置文件叫web.xml。所以说，接下来Context容器就会去解析web.xml文件，有Servlet就想应的调用wrapper的相关方法，初始化，创建Servlet等。所以说 Context 容器才是真正运行 Servlet 的 Servlet 容器。一个 Web 应用对应一个 Context 容器。</p>\n<h6 id=\"Servlet实例\"><a href=\"#Servlet实例\" class=\"headerlink\" title=\"Servlet实例\"></a>Servlet实例</h6><p>上文所讲的，我们就已经做完了所有Servlet的初始化工作，接下来我们就要在应用启动的时候，实例化对应的Servlet了。Tomcat在实例化Servlet的时候，是按照有需求再实例化的逻辑的。不过其实这样是不好的，因为如果一个servlet的内容过去庞大的话，在初始化的时候就会需要大量的时间，那么这个初始化时间对于使用这个wen应用的客户来说就是一个blank的盲等待，过场的等待会让客户很生气的，毕竟电脑上的等待10秒，相当于等地铁30分钟呢。所以说，我们要尽量设置load-on-startup属性，这个属性设置后，Context容器就会在Tomcat启动的时候对相应的Servlet进行一次实例化</p>\n<p>Servlet实例化的工作由Wrapper完成，Wrapper简单的调用Servlet的init方法，对Servlet进行初始化。（当然这里还可能初始化的是一个jspServlet，不过道理一样，不多说了）</p>\n<hr>\n<h2 id=\"Servlet的体系结构\"><a href=\"#Servlet的体系结构\" class=\"headerlink\" title=\"Servlet的体系结构\"></a>Servlet的体系结构</h2><hr>\n<img src=\"https://www.ibm.com/developerworks/cn/java/j-lo-servlet/image010.jpg\">\n<p>从上图可以看到，和Servlet有关的类有ServletRequest，ServletResponse，ServletConfig，ServletContext</p>\n<p>Request和Response我们就不多说了，这个学过Servlet的使用后就一定会接触的</p>\n<p>ServletConfig，可以说是具有这个Servlet的相关配置信息的类</p>\n<p>而ServletConetxt，则有这个Servlet所寄居的Contetx容器的相关信息，具体信息都请查阅相关API接口</p>\n<hr>\n<h2 id=\"Servlet如何工作\"><a href=\"#Servlet如何工作\" class=\"headerlink\" title=\"Servlet如何工作\"></a>Servlet如何工作</h2><hr>\n<p>一个请求到来后，如何知道这个请求要去哪个Servlet里进行相关操作呢？</p>\n<p>这个分配去向的任务很简单</p>\n<p>将url解析，映射到对应的Container容器，Container容器获取到的request里带有mappingData属性，这个属性是mapper类根据这次请求的 hostnane 和 contextpath 将 host 和 context 容器设置到 Request 的 mappingData 属性中的。所以request进入到Conetxt容器里时候，就会知道自己该去哪个wrapper里了！</p>\n<hr>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>Servlet的所有工作流程已经总结完毕，有对其中部分不理解的地方，可以对这个部分进行google的关键字搜索了解更多的知识！</p>\n<p>友情链接：</p>\n<ul>\n<li><a href=\"https://www.ibm.com/developerworks/cn/java/j-lo-servlet/\" target=\"_blank\" rel=\"noopener\">https://www.ibm.com/developerworks/cn/java/j-lo-servlet/</a></li>\n<li><a href=\"https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/\" target=\"_blank\" rel=\"noopener\">https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/</a></li>\n<li><a href=\"http://www.tqcto.com/article/web/51385.html\" target=\"_blank\" rel=\"noopener\">http://www.tqcto.com/article/web/51385.html</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>一篇对JavaWeb的Servlet的个人理解</p>","more":"<h2 id=\"什么是Servlet\"><a href=\"#什么是Servlet\" class=\"headerlink\" title=\"什么是Servlet\"></a>什么是Servlet</h2><hr>\n<p>servlet是运行在web服务器上的小型Java程序（即服务器端的小应用程序），servlet通常通过HTTP接收和响应来自web客户端的要求</p>\n<p>我所熟知的是关于httpservlet的使用。不要觉得知道了http servlet，但是却不知道https的相关使用。其实https只是http的一层安全包装而已，底层使用的还是一样的东西。所以并没有https servlet这个说法</p>\n<p>本文不会阐述servlet的使用。因为会使用和懂是两码事，比如你知道枪如何使用，但是你知道枪的内部运行原理吗？</p>\n<p>所以本节将努力的将Servlet的工作原理解释清楚，希望学习web开发的读者也可以用心去理解，虽然不需要你去掌握，但至少理解是必要的。</p>\n<h2 id=\"Tomcat基本知识\"><a href=\"#Tomcat基本知识\" class=\"headerlink\" title=\"Tomcat基本知识\"></a>Tomcat基本知识</h2><hr>\n<p>对于学习web开发的我们来说，tomcat那是再熟悉不过的东西了。简单来说，tomcat就是一种servlet容器，就好比手枪，手枪有很多种，tomcat就像一种手枪，里面装的“子弹“就是我们要讲的servlet。这小节我会阐述下什么是tomcat，tomcat怎么样，tomcat能干什么</p>\n<p>作为web开发人员来说，知道tomcat，那么肯定也知道apache。</p>\n<p>Tomcat现在是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目。由Apache、Sun 和其他一些公司及个人共同开发而成。（Java开发人员不知道Sun的人可以去死了）</p>\n<p>Tomcat的特点</p>\n<ul>\n<li>免费，开源，清凉，很适合我们学习人员的使用。</li>\n<li>它内含了一个单独的Http服务器，它也可以被视作一个单独的Web服务器。但是如果说只是将Tomcat用于单独的web服务器，那么在一些有速度和事务处理有要求的情况下来说是不利的，他没有其它完备的web服务器功能那么牛逼，比如（Apache服务器？）所以Tomcat常常会讲其中的Servlet引擎配合其它web服务器使用。</li>\n<li>Tomcat实现了对Servlet和JavaServer Page（JSP）的支持，所以Tomcat内部有一个Jsp编译器（Jsper模块），用以将JSP编译成一个Servlet。这里就不得不说JSP的九大隐含对象了，request，response，pageContext，session，application，config，out，page，exception</li>\n</ul>\n<p>Tomcat简单来说就是可以作为一个简易的web服务器，你可以将你的站点放置在Tomcat上，由Tomcat进行管理。</p>\n<h2 id=\"Tomcat的总体架构\"><a href=\"#Tomcat的总体架构\" class=\"headerlink\" title=\"Tomcat的总体架构\"></a>Tomcat的总体架构</h2><hr>\n<p>讲完了Tomcat的一些基本知识，接下来说说Tomcat的总体架构</p>\n<p>一个好的软件是需要非常模块化的，tomcat也不例外，我们先了解了Tomcat的总体架构，那么再对其中的一部分一部分进行分析，我想作为一个web开发人员，你掌握了这些，也可算是合格的一员了。</p>\n<p>先给出一张tomcat容器模型图<br><img src=\"https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/image001.gif\"></p>\n<p>可以看到一个tomcat下可以有很多个Service服务。</p>\n<p>Service可以说是一个接口，实现它的标准类是StandardService<br><img src=\"https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/image002.png\"><br><img src=\"https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/image003.png\"></p>\n<p>所以说一个Service服务，其实就是一个StandardService的实例进程。</p>\n<p>那么我们可以说说一个StandardService在干嘛呢？从上图的方法名就可以知道，比如setContainer,setServer,addConnector（这些Container和Connector后面会重点讲，先别急）<br>这些方法其实可以说是对Container和Connector等相关初始化工作</p>\n<p>是的，Service其实就是Container和Connector的一个外部包装，专门负责Container和Connector之间的管理。比如一个Connector要将request和response传递给Container，就是需要Service的帮忙。</p>\n<p>那么Service由谁来管理呢？ 233，也许你会脱口而出，“由tomcat管理”。哈哈，tomcat其实只是一个名字而已，真正管理Service的肯定也是代码呢。</p>\n<p>细心的同学应该会发现，之前有一个setServer方法，那么Server是谁呢？ 我想聪明的你肯定猜到了，对Server就是管理Service的。Server类中有一个addService方法，用于添加Service。</p>\n<p>ok，说到这里，我想大家应该对Server和Service有了大致的了解，那么接下来就来说说有关Service内部的事情。</p>\n<hr>\n<p>我们知道Service里面包含有Container和Connector，简单来说Connector是负责接收浏览器的发过来的 tcp 连接请求<br>，然后将其信息封装为Request和Response，将其传递给Container处理（在一个子线程中执行Container，主线程依旧等待新的tcp请求）</p>\n<p>ok，我想大家应该知道Container和Connector之间的关系了吧，那么接下来说说Connector是如何工作的</p>\n<p>Tomcat5 中默认的 Connector 是 Coyote，这个 Connector 是可以选择替换的.（至今也仍然在使用Coyote，此外是可以替换的，也说明了Tomcat模块化很好。是的，模块好真的很不错！其实减轻了不少开发人员的负担，可以更好的分配工作）</p>\n<h6 id=\"首先呢Connector如何接受tcp请求？\"><a href=\"#首先呢Connector如何接受tcp请求？\" class=\"headerlink\" title=\"首先呢Connector如何接受tcp请求？\"></a>首先呢Connector如何接受tcp请求？</h6><p>嗯，交给Socket呗，不多讲了</p>\n<h6 id=\"其次呢Connector是如何管理多个请求的？多线程体现在哪里？\"><a href=\"#其次呢Connector是如何管理多个请求的？多线程体现在哪里？\" class=\"headerlink\" title=\"其次呢Connector是如何管理多个请求的？多线程体现在哪里？\"></a>其次呢Connector是如何管理多个请求的？多线程体现在哪里？</h6><p>你可以理解为一个while循环，检测一个信号量，如果有请求来了，会改变这个信号量，从而进入while循环内部，然后就会进行一次有关操作了。</p>\n<p>同时主线程继续等待，等待新的请求进来。</p>\n<h6 id=\"Connector如何处理一次请求的\"><a href=\"#Connector如何处理一次请求的\" class=\"headerlink\" title=\"Connector如何处理一次请求的\"></a>Connector如何处理一次请求的</h6><p>Connector处理一次请求，靠的是两个类的运作，HttpConnector和HttpProcessor</p>\n<p>HttpConnector用于等待新的请求，有新的请求后，就会转交给HttpProcessor处理，HttpProcessor的process方法，会将tcp请求的信息封装为对应的Request和Response实例</p>\n<p>最后这个Request和Response就会转递给Container，而转递的任务就是之前讲的Service的工作了。</p>\n<hr>\n<p>理解了Connector的工作原理后，我们就来讲讲Container的工作原理吧</p>\n<p>我们还是先来看看container容器的内部模型图</p>\n<img src=\"https://www.ibm.com/developerworks/cn/java/j-lo-servlet/image002.jpg\">\n<p>可以看到一个Container内部有Engine，Host，Context还有Wrapper。ok，还是简单之上，我们其实不需要了解的很细，只要知道其每个部分都在干什么就行了</p>\n<h6 id=\"Engine容器\"><a href=\"#Engine容器\" class=\"headerlink\" title=\"Engine容器\"></a>Engine容器</h6><p>首先一个Container里有一个Engine容器，这个容器比较简单，它只定义了一些基本的关联关系，初始化和它相关联的组件，以及一些事件的监听。一个简单的Servlet，也许根本不需要Engine这一层的管理</p>\n<hr>\n<h6 id=\"Host容器\"><a href=\"#Host容器\" class=\"headerlink\" title=\"Host容器\"></a>Host容器</h6><p>从英文单词上看就知道，host代表主机，不过host容器可以有多个，所以如果对web开发比较熟悉的人，应该就知道了，host其实就代表虚拟主机的意思。对，所以说其实一个host容器就代表一个站点哦！ 比方说，我想再建立一个站点，但是我不需要再去找一个web服务器重新设置我的站点，我只需要建立一个虚拟主机，虽然url看上去不一样，但是其实请求都是有同一个container再处理数据哦。</p>\n<hr>\n<h6 id=\"Context容器\"><a href=\"#Context容器\" class=\"headerlink\" title=\"Context容器\"></a>Context容器</h6><p>Context代表Servlet的Context，它具备了Servlet运行的基本环境，理论上只要有Context就能运行Servlet了。简单的Tomcat可以没有Engine和Host。</p>\n<p>所以简单来说，Context用于管理Servlet！</p>\n<hr>\n<h6 id=\"Wrapper容器\"><a href=\"#Wrapper容器\" class=\"headerlink\" title=\"Wrapper容器\"></a>Wrapper容器</h6><p>Wrapper 代表一个 Servlet，它负责管理一个 Servlet，包括的 Servlet 的装载、初始化、执行以及资源回收。Wrapper 是最底层的容器，它没有子容器了，所以调用它的 addChild 将会报错。</p>\n<p>所以说一个Context容器里可以有很多个Wrapper，我们每次在web.xml中注册一个Servlet的时候，就会相应的建立一个Wrapper哦</p>\n<hr>\n<h2 id=\"Servlet的工作原理\"><a href=\"#Servlet的工作原理\" class=\"headerlink\" title=\"Servlet的工作原理\"></a>Servlet的工作原理</h2><hr>\n<h5 id=\"Servlet的初始化流程\"><a href=\"#Servlet的初始化流程\" class=\"headerlink\" title=\"Servlet的初始化流程\"></a>Servlet的初始化流程</h5><p>我们之前有提到Context容器就是Servlet的居住地，里面的Wrapper就代表一个Servlet。（ps：Wrapper只是一层Servlet的封装，为了将Servlet和tomcat分开，因为tomcat是tomcat，而servlet则是另一个领域模块，意思就是说，也许今后会有更厉害的servlet改装版本，然后这个改装版本就可以直接装入wrapper类中，体现了低耦合，高内聚）</p>\n<p>要执行一个Servlet的相关方法前，我们肯定要先实例化Servlet，由Context容器来实例化Servlet，那么我们就先从Conetxt的初始化讲起</p>\n<p>Context容器的初始化可以看两大部分</p>\n<p>1.ContextConfig 的 init 方法将会主要完成以下工作：</p>\n<ul>\n<li>创建用于解析 xml 配置文件的 contextDigester 对象</li>\n<li>读取默认 context.xml 配置文件，如果存在解析它</li>\n<li>读取默认 Host 配置文件，如果存在解析它</li>\n<li>读取默认 Context 自身的配置文件，如果存在解析它</li>\n<li>设置 Context 的 DocBase</li>\n</ul>\n<p>2.ContextConfig 的 init 方法完成后，Context 容器的会执行 startInternal 方法，这个方法启动逻辑比较复杂，主要包括如下几个部分：</p>\n<ul>\n<li>创建读取资源文件的对象</li>\n<li>创建 ClassLoader 对象</li>\n<li>设置应用的工作目录</li>\n<li>启动相关的辅助类如：logger、realm、resources 等</li>\n<li>修改启动状态，通知感兴趣的观察者（Web 应用的配置）<br>子容器的初始化</li>\n<li>获取 ServletContext 并设置必要的参数</li>\n<li>初始化“load on startup”的 Servlet</li>\n</ul>\n<p>这其中是很复杂的，但是我现在主要任务是让大家理解总体脉络，细节部分也不是我们应该掌握的</p>\n<p>既然Context容器的初始化工作完了，那么接下来就要解析一个web应用了。我们知道一个web应用的一个重要的配置文件叫web.xml。所以说，接下来Context容器就会去解析web.xml文件，有Servlet就想应的调用wrapper的相关方法，初始化，创建Servlet等。所以说 Context 容器才是真正运行 Servlet 的 Servlet 容器。一个 Web 应用对应一个 Context 容器。</p>\n<h6 id=\"Servlet实例\"><a href=\"#Servlet实例\" class=\"headerlink\" title=\"Servlet实例\"></a>Servlet实例</h6><p>上文所讲的，我们就已经做完了所有Servlet的初始化工作，接下来我们就要在应用启动的时候，实例化对应的Servlet了。Tomcat在实例化Servlet的时候，是按照有需求再实例化的逻辑的。不过其实这样是不好的，因为如果一个servlet的内容过去庞大的话，在初始化的时候就会需要大量的时间，那么这个初始化时间对于使用这个wen应用的客户来说就是一个blank的盲等待，过场的等待会让客户很生气的，毕竟电脑上的等待10秒，相当于等地铁30分钟呢。所以说，我们要尽量设置load-on-startup属性，这个属性设置后，Context容器就会在Tomcat启动的时候对相应的Servlet进行一次实例化</p>\n<p>Servlet实例化的工作由Wrapper完成，Wrapper简单的调用Servlet的init方法，对Servlet进行初始化。（当然这里还可能初始化的是一个jspServlet，不过道理一样，不多说了）</p>\n<hr>\n<h2 id=\"Servlet的体系结构\"><a href=\"#Servlet的体系结构\" class=\"headerlink\" title=\"Servlet的体系结构\"></a>Servlet的体系结构</h2><hr>\n<img src=\"https://www.ibm.com/developerworks/cn/java/j-lo-servlet/image010.jpg\">\n<p>从上图可以看到，和Servlet有关的类有ServletRequest，ServletResponse，ServletConfig，ServletContext</p>\n<p>Request和Response我们就不多说了，这个学过Servlet的使用后就一定会接触的</p>\n<p>ServletConfig，可以说是具有这个Servlet的相关配置信息的类</p>\n<p>而ServletConetxt，则有这个Servlet所寄居的Contetx容器的相关信息，具体信息都请查阅相关API接口</p>\n<hr>\n<h2 id=\"Servlet如何工作\"><a href=\"#Servlet如何工作\" class=\"headerlink\" title=\"Servlet如何工作\"></a>Servlet如何工作</h2><hr>\n<p>一个请求到来后，如何知道这个请求要去哪个Servlet里进行相关操作呢？</p>\n<p>这个分配去向的任务很简单</p>\n<p>将url解析，映射到对应的Container容器，Container容器获取到的request里带有mappingData属性，这个属性是mapper类根据这次请求的 hostnane 和 contextpath 将 host 和 context 容器设置到 Request 的 mappingData 属性中的。所以request进入到Conetxt容器里时候，就会知道自己该去哪个wrapper里了！</p>\n<hr>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>Servlet的所有工作流程已经总结完毕，有对其中部分不理解的地方，可以对这个部分进行google的关键字搜索了解更多的知识！</p>\n<p>友情链接：</p>\n<ul>\n<li><a href=\"https://www.ibm.com/developerworks/cn/java/j-lo-servlet/\" target=\"_blank\" rel=\"noopener\">https://www.ibm.com/developerworks/cn/java/j-lo-servlet/</a></li>\n<li><a href=\"https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/\" target=\"_blank\" rel=\"noopener\">https://www.ibm.com/developerworks/cn/java/j-lo-tomcat1/</a></li>\n<li><a href=\"http://www.tqcto.com/article/web/51385.html\" target=\"_blank\" rel=\"noopener\">http://www.tqcto.com/article/web/51385.html</a></li>\n</ul>"},{"title":"使用JavaSeurity进行数字签名(一)","date":"2019-04-24T06:26:26.000Z","_content":"\nHello,my blog.好久不见.由于最近项目有些地方有涉及到数字签名,RSA加解密,数字证书等东西.虽然对其不太了解,也没有过多的影响到自己的开发,但是抱着一颗好奇的心,对其相关知识进行了网上冲浪,现在对自己所看到的相关资料,进行自我整理以及消化.在这一章,你将了解到[什么是数字签名] [什么是公钥私钥] [JAVA如何生成公钥私钥进行数字签名]\n\n## 数字签名\n\n>数字签名何时诞生? \n\n1976年，Whitfield Diffie 和 Martin Hellman 两人第一次提出了数字签名的概念，当时虽然他们并没有现成的方法去得到数据的数字签名，但是他们推测可以使用相关数学函数去进行计算获取 到数字签名，这个方案是可行的。随后不久， Ronald Rivest, Adi Shamir, 和 Len Adleman便研究出了RSA算法，这是一个可以生成数字签名的算法(虽然当时RSA算法得到的数字签名被公认为还是不安全的)最后第一个可以为指定数据生成数字签名的软件包诞生， Lotus Notes 在1989年将其发布。\n\n>数字签名是什么\n\n简单来说，数字签名就是使用公认可靠的签名算法，使用公钥加密技术，生成一段数据的一串散列值。比如<code>hello,zazalu</code>这串数据的数字签名就类似于<code>BE459576785039E8</code>，我们可以将这一串值理解为非常难以破解的东西。\n\n>数字签名的用武之地在哪里\n\n我用一个生活中的简单例子来做个比喻.\n\n当我们收到自己爱人的来信时，激动不已的你急忙打开并且进行阅读。在这个简单的环节中，人的大脑其实自动帮你做了一个简单的验签的过程，你在看到那些熟悉的字体，熟悉的称呼或者一个简单的暗号后，你就为潜在的认为这封信确实是你的爱人写的，因为只有你熟悉他(她)的写法，只有你才知道暗号的含义。\n\n数字签名其实起到的就和“暗号”“写法”这类东西类似，都是用来证明发件人确实是你爱人用的。在没有数字签名之前，我们在网上收到一封重要文件，虽然系统提示你发件人为A，但是并不代表真的是A，有可能是B正好偷偷用A的电脑发的也说不定。总而言之，在没有数字签名的时候，你无法确定发件人是谁。而数字签名就是起到证明发件人确实是A的作用的东西。\n\n>数字签名如何生成？\n\n在前面，我有说到，数字签名是使用公认可靠的签名算法，使用公钥加密技术，为数据生成一串散列值。那么具体是怎么样的呢？\n\n首先我们来简单说明下公钥加密技术，目前我们常用于数字签名的公钥加密技术有两种，一个是RSA，还有一个是DSA。不过在进行数字签名这方面，他们的行为在语言描述上是一致的，这里也就不做区分说明。\n\n不管是RSA还是DSA算法，他们都需要两个密钥，一个叫公钥，一个叫私钥。使用加密算法前，我们需要先使用相关算法库，生成一对密钥对，使用公钥加密的信息只能由私钥进行解密\n\n是的，由于公钥是公有的，谁都能获取，所以按逻辑上来说，我们不应该使用私钥进行加密。但是我们却可以利用这一点来验证这串数据是由谁加密的，因为私钥是保密的。我使用私钥生成一串数字签名，那么只要使用我的公钥解析数字签名并且使用相同算法比较数据的散列值，如果是一样的，就说明这个数据就确实是由我发出的，不会有假。这也就说明了数字签名的有效性，可靠性。\n\n>参考\n\n上面几节，不知道讲没讲明白，但是我已经把我自己的理解全部整理了一遍，如果您还是不理解，不妨可以试试下面链接，都说明的不错\n\n1. https://security.stackexchange.com/questions/66392/why-should-i-sign-data-thats-already-encrypted\n2. https://docs.oracle.com/javase/tutorial/security/apisign/step3.html\n3. https://www.jianshu.com/p/090e35989501\n\n## JAVA如何生成数字签名\n\n>获取RSA密钥对的接口方法getRSAKeyPair\n\n\n```java \npublic KeyPair getRSAKeyPair() throws NoSuchAlgorithmException{\n    //获得一个密码随机数生成器(用于密钥生成),使用SecureRandom以及SHA1PRNG \n    KeyPairGenerator keyGen = KeyPairGenerator.getInstance(\"RSA\");//获得密钥生成器,java语言使用KeyPairGenerator\n    //SHA1PRNG意思便是使用SHA1密码散列函数,来生成伪随机数,PRNG = pseudo random number generator  \n    // 有兴趣的同学可以进行深入研究, 这里不会探讨此问题        \n    //我们的示例使用SHA1,当然你也可以试试SHA-2，SHA-3       \n    SecureRandom random = SecureRandom.getInstance(\"SHA1PRNG\");\n    //初始化1024位密钥生成器       \n    keyGen.initialize(1024,random);        \n    //生成公钥私钥      \n    return keyGen.generateKeyPair();\n} \n```\n\n>使用我们刚刚生成的密钥对去生成指定文件的数字签名,getFileSignature接口参数,file为你指定的文件,keypair为你使用getRSAKeyPair生成的密钥对\n\n```java\npublic Signature getFileSignature(File file,KeyPair keyPair) throws NoSuchAlgorithmException, InvalidKeyException, IOException, SignatureException {\n        if(file == null){\n            throw new FileNotFoundException();\n        }\n        //获取一个签名器,注意：生成密钥对的时候使用的是什么非对称加密算法和什么散列函数,String参数就填写对应\"XXXXwithXXX\"\n        //e.g. DSA密钥对,使用SHA1PRNG,则为\"SHA1withDSA\"\n        Signature dsa = Signature.getInstance(\"SHA1withRSA\");\n        //使用私钥初始化签名器,注意：请不要使用公钥初始化,只有私钥才能用来生成数字签名\n        PrivateKey priv = keyPair.getPrivate();\n        dsa.initSign(priv);\n        //使用签名器的update方法将要进行签名文件的数据导入到签名器中(光看api就感觉很类似导入的感觉,所以就这么说明了,如有违和的地方请指正)\n        dsa = updateDsaSignture(dsa,file);\n        //获取数字签名\n        return dsa;\n    }\n/**\n * 将文件数据导入至签名器中\n * @param dsa 签名器\n * @param file 需进行签名的文件\n * @Return: dsa 数据导入完毕的签名器\n * @Creator: hejj\n */\nprivate Signature updateDsaSignture(Signature dsa,File file) throws IOException, SignatureException {\n        FileInputStream fis = new FileInputStream(file);\n        BufferedInputStream bufin = new BufferedInputStream(fis);\n        byte[] buffer = new byte[1024];\n        int len;\n        while ((len = bufin.read(buffer)) >= 0) {\n            dsa.update(buffer, 0, len);\n        }\n        bufin.close();\n        return dsa;\n    }\n```\n\n>把数字签名和公钥保存到本地\n\n```java\npublic void saveSignature(File signFile, Signature signature) throws IOException, SignatureException, NoSuchAlgorithmException, InvalidKeyException {\n        if(signFile == null){\n            signFile = new File(\"../resource/signFile\");\n        }\n        if(signFile.exists()){\n            signFile.delete();\n        }else{\n            signFile.createNewFile();\n        }\n        FileOutputStream sigfos = new FileOutputStream(signFile);\n        sigfos.write(signature.sign());\n        sigfos.close();\n    }\nprivate void savePublicKey(File pubKeyFile, PublicKey publicKey) throws NoSuchAlgorithmException, IOException {\n        if(pubKeyFile == null){\n            throw new FileNotFoundException();\n        }\n        if(pubKeyFile.exists()){\n            pubKeyFile.delete();\n        }else{\n            pubKeyFile.createNewFile();\n        }\n        byte[] key = publicKey.getEncoded();\n        FileOutputStream keyfos = new FileOutputStream(pubKeyFile);\n        keyfos.write(key);\n        keyfos.close();\n    }\n```\n\n>将所有接口整合，运行起来的demo\n\n```java\n@Test\npublic void signFile() throws NoSuchAlgorithmException, InvalidKeyException, IOException, SignatureException {\n    MyRsaDsaUtil rsaDsaUtil = new MyRsaDsaUtil();\n    //获取密钥对\n    KeyPair keyPair = rsaDsaUtil.getRSAKeyPair();\n    //获取文件签名(请先预创建自己的rsaSigndFile文件)\n    String signFilePath = URLDecoder.decode(MyRsaDsaUtil.class.getResource(\"../resource/rsaSignFile\")\n            .getFile(),\"utf-8\") ;\n    Signature signature = rsaDsaUtil.getFileSignature(new File(signFilePath),keyPair);\n    //保存文件签名 保存后才能发送给别人哦\n    String signDataFileUrl = \"src/test/resource/signData\" ;\n    String pubKeyDataFileUrl = \"src/test/resource/pubKeyData\";\n    rsaDsaUtil.saveSignature(new File(signDataFileUrl),signature);\n    rsaDsaUtil.savePublicKey(new File(pubKeyDataFileUrl),keyPair.getPublic());\n}\n```\n\n## 小节\n\n本章我们先从数字签名的基础知识讲起，随后用了实际代码例子进行了练习，现在我们应该都已经学会了使用java生成某个文件的数字签名！\n\n在下一章中，我们将作为文件接收者，去验证这个数字签名是否正确，从而完成一整个使用数字签名验证发件人有效性的整个流程。\n","source":"_posts/使用JavaSeurity进行数字签名-一.md","raw":"---\ntitle: 使用JavaSeurity进行数字签名(一)\ntags: signature\ncategories: IT\ndate: 2019-04-24 14:26:26\n---\n\nHello,my blog.好久不见.由于最近项目有些地方有涉及到数字签名,RSA加解密,数字证书等东西.虽然对其不太了解,也没有过多的影响到自己的开发,但是抱着一颗好奇的心,对其相关知识进行了网上冲浪,现在对自己所看到的相关资料,进行自我整理以及消化.在这一章,你将了解到[什么是数字签名] [什么是公钥私钥] [JAVA如何生成公钥私钥进行数字签名]\n\n## 数字签名\n\n>数字签名何时诞生? \n\n1976年，Whitfield Diffie 和 Martin Hellman 两人第一次提出了数字签名的概念，当时虽然他们并没有现成的方法去得到数据的数字签名，但是他们推测可以使用相关数学函数去进行计算获取 到数字签名，这个方案是可行的。随后不久， Ronald Rivest, Adi Shamir, 和 Len Adleman便研究出了RSA算法，这是一个可以生成数字签名的算法(虽然当时RSA算法得到的数字签名被公认为还是不安全的)最后第一个可以为指定数据生成数字签名的软件包诞生， Lotus Notes 在1989年将其发布。\n\n>数字签名是什么\n\n简单来说，数字签名就是使用公认可靠的签名算法，使用公钥加密技术，生成一段数据的一串散列值。比如<code>hello,zazalu</code>这串数据的数字签名就类似于<code>BE459576785039E8</code>，我们可以将这一串值理解为非常难以破解的东西。\n\n>数字签名的用武之地在哪里\n\n我用一个生活中的简单例子来做个比喻.\n\n当我们收到自己爱人的来信时，激动不已的你急忙打开并且进行阅读。在这个简单的环节中，人的大脑其实自动帮你做了一个简单的验签的过程，你在看到那些熟悉的字体，熟悉的称呼或者一个简单的暗号后，你就为潜在的认为这封信确实是你的爱人写的，因为只有你熟悉他(她)的写法，只有你才知道暗号的含义。\n\n数字签名其实起到的就和“暗号”“写法”这类东西类似，都是用来证明发件人确实是你爱人用的。在没有数字签名之前，我们在网上收到一封重要文件，虽然系统提示你发件人为A，但是并不代表真的是A，有可能是B正好偷偷用A的电脑发的也说不定。总而言之，在没有数字签名的时候，你无法确定发件人是谁。而数字签名就是起到证明发件人确实是A的作用的东西。\n\n>数字签名如何生成？\n\n在前面，我有说到，数字签名是使用公认可靠的签名算法，使用公钥加密技术，为数据生成一串散列值。那么具体是怎么样的呢？\n\n首先我们来简单说明下公钥加密技术，目前我们常用于数字签名的公钥加密技术有两种，一个是RSA，还有一个是DSA。不过在进行数字签名这方面，他们的行为在语言描述上是一致的，这里也就不做区分说明。\n\n不管是RSA还是DSA算法，他们都需要两个密钥，一个叫公钥，一个叫私钥。使用加密算法前，我们需要先使用相关算法库，生成一对密钥对，使用公钥加密的信息只能由私钥进行解密\n\n是的，由于公钥是公有的，谁都能获取，所以按逻辑上来说，我们不应该使用私钥进行加密。但是我们却可以利用这一点来验证这串数据是由谁加密的，因为私钥是保密的。我使用私钥生成一串数字签名，那么只要使用我的公钥解析数字签名并且使用相同算法比较数据的散列值，如果是一样的，就说明这个数据就确实是由我发出的，不会有假。这也就说明了数字签名的有效性，可靠性。\n\n>参考\n\n上面几节，不知道讲没讲明白，但是我已经把我自己的理解全部整理了一遍，如果您还是不理解，不妨可以试试下面链接，都说明的不错\n\n1. https://security.stackexchange.com/questions/66392/why-should-i-sign-data-thats-already-encrypted\n2. https://docs.oracle.com/javase/tutorial/security/apisign/step3.html\n3. https://www.jianshu.com/p/090e35989501\n\n## JAVA如何生成数字签名\n\n>获取RSA密钥对的接口方法getRSAKeyPair\n\n\n```java \npublic KeyPair getRSAKeyPair() throws NoSuchAlgorithmException{\n    //获得一个密码随机数生成器(用于密钥生成),使用SecureRandom以及SHA1PRNG \n    KeyPairGenerator keyGen = KeyPairGenerator.getInstance(\"RSA\");//获得密钥生成器,java语言使用KeyPairGenerator\n    //SHA1PRNG意思便是使用SHA1密码散列函数,来生成伪随机数,PRNG = pseudo random number generator  \n    // 有兴趣的同学可以进行深入研究, 这里不会探讨此问题        \n    //我们的示例使用SHA1,当然你也可以试试SHA-2，SHA-3       \n    SecureRandom random = SecureRandom.getInstance(\"SHA1PRNG\");\n    //初始化1024位密钥生成器       \n    keyGen.initialize(1024,random);        \n    //生成公钥私钥      \n    return keyGen.generateKeyPair();\n} \n```\n\n>使用我们刚刚生成的密钥对去生成指定文件的数字签名,getFileSignature接口参数,file为你指定的文件,keypair为你使用getRSAKeyPair生成的密钥对\n\n```java\npublic Signature getFileSignature(File file,KeyPair keyPair) throws NoSuchAlgorithmException, InvalidKeyException, IOException, SignatureException {\n        if(file == null){\n            throw new FileNotFoundException();\n        }\n        //获取一个签名器,注意：生成密钥对的时候使用的是什么非对称加密算法和什么散列函数,String参数就填写对应\"XXXXwithXXX\"\n        //e.g. DSA密钥对,使用SHA1PRNG,则为\"SHA1withDSA\"\n        Signature dsa = Signature.getInstance(\"SHA1withRSA\");\n        //使用私钥初始化签名器,注意：请不要使用公钥初始化,只有私钥才能用来生成数字签名\n        PrivateKey priv = keyPair.getPrivate();\n        dsa.initSign(priv);\n        //使用签名器的update方法将要进行签名文件的数据导入到签名器中(光看api就感觉很类似导入的感觉,所以就这么说明了,如有违和的地方请指正)\n        dsa = updateDsaSignture(dsa,file);\n        //获取数字签名\n        return dsa;\n    }\n/**\n * 将文件数据导入至签名器中\n * @param dsa 签名器\n * @param file 需进行签名的文件\n * @Return: dsa 数据导入完毕的签名器\n * @Creator: hejj\n */\nprivate Signature updateDsaSignture(Signature dsa,File file) throws IOException, SignatureException {\n        FileInputStream fis = new FileInputStream(file);\n        BufferedInputStream bufin = new BufferedInputStream(fis);\n        byte[] buffer = new byte[1024];\n        int len;\n        while ((len = bufin.read(buffer)) >= 0) {\n            dsa.update(buffer, 0, len);\n        }\n        bufin.close();\n        return dsa;\n    }\n```\n\n>把数字签名和公钥保存到本地\n\n```java\npublic void saveSignature(File signFile, Signature signature) throws IOException, SignatureException, NoSuchAlgorithmException, InvalidKeyException {\n        if(signFile == null){\n            signFile = new File(\"../resource/signFile\");\n        }\n        if(signFile.exists()){\n            signFile.delete();\n        }else{\n            signFile.createNewFile();\n        }\n        FileOutputStream sigfos = new FileOutputStream(signFile);\n        sigfos.write(signature.sign());\n        sigfos.close();\n    }\nprivate void savePublicKey(File pubKeyFile, PublicKey publicKey) throws NoSuchAlgorithmException, IOException {\n        if(pubKeyFile == null){\n            throw new FileNotFoundException();\n        }\n        if(pubKeyFile.exists()){\n            pubKeyFile.delete();\n        }else{\n            pubKeyFile.createNewFile();\n        }\n        byte[] key = publicKey.getEncoded();\n        FileOutputStream keyfos = new FileOutputStream(pubKeyFile);\n        keyfos.write(key);\n        keyfos.close();\n    }\n```\n\n>将所有接口整合，运行起来的demo\n\n```java\n@Test\npublic void signFile() throws NoSuchAlgorithmException, InvalidKeyException, IOException, SignatureException {\n    MyRsaDsaUtil rsaDsaUtil = new MyRsaDsaUtil();\n    //获取密钥对\n    KeyPair keyPair = rsaDsaUtil.getRSAKeyPair();\n    //获取文件签名(请先预创建自己的rsaSigndFile文件)\n    String signFilePath = URLDecoder.decode(MyRsaDsaUtil.class.getResource(\"../resource/rsaSignFile\")\n            .getFile(),\"utf-8\") ;\n    Signature signature = rsaDsaUtil.getFileSignature(new File(signFilePath),keyPair);\n    //保存文件签名 保存后才能发送给别人哦\n    String signDataFileUrl = \"src/test/resource/signData\" ;\n    String pubKeyDataFileUrl = \"src/test/resource/pubKeyData\";\n    rsaDsaUtil.saveSignature(new File(signDataFileUrl),signature);\n    rsaDsaUtil.savePublicKey(new File(pubKeyDataFileUrl),keyPair.getPublic());\n}\n```\n\n## 小节\n\n本章我们先从数字签名的基础知识讲起，随后用了实际代码例子进行了练习，现在我们应该都已经学会了使用java生成某个文件的数字签名！\n\n在下一章中，我们将作为文件接收者，去验证这个数字签名是否正确，从而完成一整个使用数字签名验证发件人有效性的整个流程。\n","slug":"使用JavaSeurity进行数字签名-一","published":1,"updated":"2019-04-25T03:17:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjv3k3jw3001ilk9ve1y2hgho","content":"<p>Hello,my blog.好久不见.由于最近项目有些地方有涉及到数字签名,RSA加解密,数字证书等东西.虽然对其不太了解,也没有过多的影响到自己的开发,但是抱着一颗好奇的心,对其相关知识进行了网上冲浪,现在对自己所看到的相关资料,进行自我整理以及消化.在这一章,你将了解到[什么是数字签名] [什么是公钥私钥] [JAVA如何生成公钥私钥进行数字签名]</p>\n<h2 id=\"数字签名\"><a href=\"#数字签名\" class=\"headerlink\" title=\"数字签名\"></a>数字签名</h2><blockquote>\n<p>数字签名何时诞生? </p>\n</blockquote>\n<p>1976年，Whitfield Diffie 和 Martin Hellman 两人第一次提出了数字签名的概念，当时虽然他们并没有现成的方法去得到数据的数字签名，但是他们推测可以使用相关数学函数去进行计算获取 到数字签名，这个方案是可行的。随后不久， Ronald Rivest, Adi Shamir, 和 Len Adleman便研究出了RSA算法，这是一个可以生成数字签名的算法(虽然当时RSA算法得到的数字签名被公认为还是不安全的)最后第一个可以为指定数据生成数字签名的软件包诞生， Lotus Notes 在1989年将其发布。</p>\n<blockquote>\n<p>数字签名是什么</p>\n</blockquote>\n<p>简单来说，数字签名就是使用公认可靠的签名算法，使用公钥加密技术，生成一段数据的一串散列值。比如<code>hello,zazalu</code>这串数据的数字签名就类似于<code>BE459576785039E8</code>，我们可以将这一串值理解为非常难以破解的东西。</p>\n<blockquote>\n<p>数字签名的用武之地在哪里</p>\n</blockquote>\n<p>我用一个生活中的简单例子来做个比喻.</p>\n<p>当我们收到自己爱人的来信时，激动不已的你急忙打开并且进行阅读。在这个简单的环节中，人的大脑其实自动帮你做了一个简单的验签的过程，你在看到那些熟悉的字体，熟悉的称呼或者一个简单的暗号后，你就为潜在的认为这封信确实是你的爱人写的，因为只有你熟悉他(她)的写法，只有你才知道暗号的含义。</p>\n<p>数字签名其实起到的就和“暗号”“写法”这类东西类似，都是用来证明发件人确实是你爱人用的。在没有数字签名之前，我们在网上收到一封重要文件，虽然系统提示你发件人为A，但是并不代表真的是A，有可能是B正好偷偷用A的电脑发的也说不定。总而言之，在没有数字签名的时候，你无法确定发件人是谁。而数字签名就是起到证明发件人确实是A的作用的东西。</p>\n<blockquote>\n<p>数字签名如何生成？</p>\n</blockquote>\n<p>在前面，我有说到，数字签名是使用公认可靠的签名算法，使用公钥加密技术，为数据生成一串散列值。那么具体是怎么样的呢？</p>\n<p>首先我们来简单说明下公钥加密技术，目前我们常用于数字签名的公钥加密技术有两种，一个是RSA，还有一个是DSA。不过在进行数字签名这方面，他们的行为在语言描述上是一致的，这里也就不做区分说明。</p>\n<p>不管是RSA还是DSA算法，他们都需要两个密钥，一个叫公钥，一个叫私钥。使用加密算法前，我们需要先使用相关算法库，生成一对密钥对，使用公钥加密的信息只能由私钥进行解密</p>\n<p>是的，由于公钥是公有的，谁都能获取，所以按逻辑上来说，我们不应该使用私钥进行加密。但是我们却可以利用这一点来验证这串数据是由谁加密的，因为私钥是保密的。我使用私钥生成一串数字签名，那么只要使用我的公钥解析数字签名并且使用相同算法比较数据的散列值，如果是一样的，就说明这个数据就确实是由我发出的，不会有假。这也就说明了数字签名的有效性，可靠性。</p>\n<blockquote>\n<p>参考</p>\n</blockquote>\n<p>上面几节，不知道讲没讲明白，但是我已经把我自己的理解全部整理了一遍，如果您还是不理解，不妨可以试试下面链接，都说明的不错</p>\n<ol>\n<li><a href=\"https://security.stackexchange.com/questions/66392/why-should-i-sign-data-thats-already-encrypted\" target=\"_blank\" rel=\"noopener\">https://security.stackexchange.com/questions/66392/why-should-i-sign-data-thats-already-encrypted</a></li>\n<li><a href=\"https://docs.oracle.com/javase/tutorial/security/apisign/step3.html\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/tutorial/security/apisign/step3.html</a></li>\n<li><a href=\"https://www.jianshu.com/p/090e35989501\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/090e35989501</a></li>\n</ol>\n<h2 id=\"JAVA如何生成数字签名\"><a href=\"#JAVA如何生成数字签名\" class=\"headerlink\" title=\"JAVA如何生成数字签名\"></a>JAVA如何生成数字签名</h2><blockquote>\n<p>获取RSA密钥对的接口方法getRSAKeyPair</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> KeyPair <span class=\"title\">getRSAKeyPair</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> NoSuchAlgorithmException</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//获得一个密码随机数生成器(用于密钥生成),使用SecureRandom以及SHA1PRNG </span></span><br><span class=\"line\">    KeyPairGenerator keyGen = KeyPairGenerator.getInstance(<span class=\"string\">\"RSA\"</span>);<span class=\"comment\">//获得密钥生成器,java语言使用KeyPairGenerator</span></span><br><span class=\"line\">    <span class=\"comment\">//SHA1PRNG意思便是使用SHA1密码散列函数,来生成伪随机数,PRNG = pseudo random number generator  </span></span><br><span class=\"line\">    <span class=\"comment\">// 有兴趣的同学可以进行深入研究, 这里不会探讨此问题        </span></span><br><span class=\"line\">    <span class=\"comment\">//我们的示例使用SHA1,当然你也可以试试SHA-2，SHA-3       </span></span><br><span class=\"line\">    SecureRandom random = SecureRandom.getInstance(<span class=\"string\">\"SHA1PRNG\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//初始化1024位密钥生成器       </span></span><br><span class=\"line\">    keyGen.initialize(<span class=\"number\">1024</span>,random);        </span><br><span class=\"line\">    <span class=\"comment\">//生成公钥私钥      </span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> keyGen.generateKeyPair();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用我们刚刚生成的密钥对去生成指定文件的数字签名,getFileSignature接口参数,file为你指定的文件,keypair为你使用getRSAKeyPair生成的密钥对</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Signature <span class=\"title\">getFileSignature</span><span class=\"params\">(File file,KeyPair keyPair)</span> <span class=\"keyword\">throws</span> NoSuchAlgorithmException, InvalidKeyException, IOException, SignatureException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(file == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> FileNotFoundException();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//获取一个签名器,注意：生成密钥对的时候使用的是什么非对称加密算法和什么散列函数,String参数就填写对应\"XXXXwithXXX\"</span></span><br><span class=\"line\">        <span class=\"comment\">//e.g. DSA密钥对,使用SHA1PRNG,则为\"SHA1withDSA\"</span></span><br><span class=\"line\">        Signature dsa = Signature.getInstance(<span class=\"string\">\"SHA1withRSA\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//使用私钥初始化签名器,注意：请不要使用公钥初始化,只有私钥才能用来生成数字签名</span></span><br><span class=\"line\">        PrivateKey priv = keyPair.getPrivate();</span><br><span class=\"line\">        dsa.initSign(priv);</span><br><span class=\"line\">        <span class=\"comment\">//使用签名器的update方法将要进行签名文件的数据导入到签名器中(光看api就感觉很类似导入的感觉,所以就这么说明了,如有违和的地方请指正)</span></span><br><span class=\"line\">        dsa = updateDsaSignture(dsa,file);</span><br><span class=\"line\">        <span class=\"comment\">//获取数字签名</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> dsa;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 将文件数据导入至签名器中</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> dsa 签名器</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> file 需进行签名的文件</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Return</span>: dsa 数据导入完毕的签名器</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Creator</span>: hejj</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Signature <span class=\"title\">updateDsaSignture</span><span class=\"params\">(Signature dsa,File file)</span> <span class=\"keyword\">throws</span> IOException, SignatureException </span>&#123;</span><br><span class=\"line\">        FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(file);</span><br><span class=\"line\">        BufferedInputStream bufin = <span class=\"keyword\">new</span> BufferedInputStream(fis);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> ((len = bufin.read(buffer)) &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            dsa.update(buffer, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        bufin.close();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dsa;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>把数字签名和公钥保存到本地</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">saveSignature</span><span class=\"params\">(File signFile, Signature signature)</span> <span class=\"keyword\">throws</span> IOException, SignatureException, NoSuchAlgorithmException, InvalidKeyException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(signFile == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            signFile = <span class=\"keyword\">new</span> File(<span class=\"string\">\"../resource/signFile\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(signFile.exists())&#123;</span><br><span class=\"line\">            signFile.delete();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            signFile.createNewFile();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        FileOutputStream sigfos = <span class=\"keyword\">new</span> FileOutputStream(signFile);</span><br><span class=\"line\">        sigfos.write(signature.sign());</span><br><span class=\"line\">        sigfos.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">savePublicKey</span><span class=\"params\">(File pubKeyFile, PublicKey publicKey)</span> <span class=\"keyword\">throws</span> NoSuchAlgorithmException, IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pubKeyFile == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> FileNotFoundException();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pubKeyFile.exists())&#123;</span><br><span class=\"line\">            pubKeyFile.delete();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            pubKeyFile.createNewFile();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] key = publicKey.getEncoded();</span><br><span class=\"line\">        FileOutputStream keyfos = <span class=\"keyword\">new</span> FileOutputStream(pubKeyFile);</span><br><span class=\"line\">        keyfos.write(key);</span><br><span class=\"line\">        keyfos.close();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>将所有接口整合，运行起来的demo</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">signFile</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> NoSuchAlgorithmException, InvalidKeyException, IOException, SignatureException </span>&#123;</span><br><span class=\"line\">    MyRsaDsaUtil rsaDsaUtil = <span class=\"keyword\">new</span> MyRsaDsaUtil();</span><br><span class=\"line\">    <span class=\"comment\">//获取密钥对</span></span><br><span class=\"line\">    KeyPair keyPair = rsaDsaUtil.getRSAKeyPair();</span><br><span class=\"line\">    <span class=\"comment\">//获取文件签名(请先预创建自己的rsaSigndFile文件)</span></span><br><span class=\"line\">    String signFilePath = URLDecoder.decode(MyRsaDsaUtil.class.getResource(<span class=\"string\">\"../resource/rsaSignFile\"</span>)</span><br><span class=\"line\">            .getFile(),<span class=\"string\">\"utf-8\"</span>) ;</span><br><span class=\"line\">    Signature signature = rsaDsaUtil.getFileSignature(<span class=\"keyword\">new</span> File(signFilePath),keyPair);</span><br><span class=\"line\">    <span class=\"comment\">//保存文件签名 保存后才能发送给别人哦</span></span><br><span class=\"line\">    String signDataFileUrl = <span class=\"string\">\"src/test/resource/signData\"</span> ;</span><br><span class=\"line\">    String pubKeyDataFileUrl = <span class=\"string\">\"src/test/resource/pubKeyData\"</span>;</span><br><span class=\"line\">    rsaDsaUtil.saveSignature(<span class=\"keyword\">new</span> File(signDataFileUrl),signature);</span><br><span class=\"line\">    rsaDsaUtil.savePublicKey(<span class=\"keyword\">new</span> File(pubKeyDataFileUrl),keyPair.getPublic());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"小节\"><a href=\"#小节\" class=\"headerlink\" title=\"小节\"></a>小节</h2><p>本章我们先从数字签名的基础知识讲起，随后用了实际代码例子进行了练习，现在我们应该都已经学会了使用java生成某个文件的数字签名！</p>\n<p>在下一章中，我们将作为文件接收者，去验证这个数字签名是否正确，从而完成一整个使用数字签名验证发件人有效性的整个流程。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Hello,my blog.好久不见.由于最近项目有些地方有涉及到数字签名,RSA加解密,数字证书等东西.虽然对其不太了解,也没有过多的影响到自己的开发,但是抱着一颗好奇的心,对其相关知识进行了网上冲浪,现在对自己所看到的相关资料,进行自我整理以及消化.在这一章,你将了解到[什么是数字签名] [什么是公钥私钥] [JAVA如何生成公钥私钥进行数字签名]</p>\n<h2 id=\"数字签名\"><a href=\"#数字签名\" class=\"headerlink\" title=\"数字签名\"></a>数字签名</h2><blockquote>\n<p>数字签名何时诞生? </p>\n</blockquote>\n<p>1976年，Whitfield Diffie 和 Martin Hellman 两人第一次提出了数字签名的概念，当时虽然他们并没有现成的方法去得到数据的数字签名，但是他们推测可以使用相关数学函数去进行计算获取 到数字签名，这个方案是可行的。随后不久， Ronald Rivest, Adi Shamir, 和 Len Adleman便研究出了RSA算法，这是一个可以生成数字签名的算法(虽然当时RSA算法得到的数字签名被公认为还是不安全的)最后第一个可以为指定数据生成数字签名的软件包诞生， Lotus Notes 在1989年将其发布。</p>\n<blockquote>\n<p>数字签名是什么</p>\n</blockquote>\n<p>简单来说，数字签名就是使用公认可靠的签名算法，使用公钥加密技术，生成一段数据的一串散列值。比如<code>hello,zazalu</code>这串数据的数字签名就类似于<code>BE459576785039E8</code>，我们可以将这一串值理解为非常难以破解的东西。</p>\n<blockquote>\n<p>数字签名的用武之地在哪里</p>\n</blockquote>\n<p>我用一个生活中的简单例子来做个比喻.</p>\n<p>当我们收到自己爱人的来信时，激动不已的你急忙打开并且进行阅读。在这个简单的环节中，人的大脑其实自动帮你做了一个简单的验签的过程，你在看到那些熟悉的字体，熟悉的称呼或者一个简单的暗号后，你就为潜在的认为这封信确实是你的爱人写的，因为只有你熟悉他(她)的写法，只有你才知道暗号的含义。</p>\n<p>数字签名其实起到的就和“暗号”“写法”这类东西类似，都是用来证明发件人确实是你爱人用的。在没有数字签名之前，我们在网上收到一封重要文件，虽然系统提示你发件人为A，但是并不代表真的是A，有可能是B正好偷偷用A的电脑发的也说不定。总而言之，在没有数字签名的时候，你无法确定发件人是谁。而数字签名就是起到证明发件人确实是A的作用的东西。</p>\n<blockquote>\n<p>数字签名如何生成？</p>\n</blockquote>\n<p>在前面，我有说到，数字签名是使用公认可靠的签名算法，使用公钥加密技术，为数据生成一串散列值。那么具体是怎么样的呢？</p>\n<p>首先我们来简单说明下公钥加密技术，目前我们常用于数字签名的公钥加密技术有两种，一个是RSA，还有一个是DSA。不过在进行数字签名这方面，他们的行为在语言描述上是一致的，这里也就不做区分说明。</p>\n<p>不管是RSA还是DSA算法，他们都需要两个密钥，一个叫公钥，一个叫私钥。使用加密算法前，我们需要先使用相关算法库，生成一对密钥对，使用公钥加密的信息只能由私钥进行解密</p>\n<p>是的，由于公钥是公有的，谁都能获取，所以按逻辑上来说，我们不应该使用私钥进行加密。但是我们却可以利用这一点来验证这串数据是由谁加密的，因为私钥是保密的。我使用私钥生成一串数字签名，那么只要使用我的公钥解析数字签名并且使用相同算法比较数据的散列值，如果是一样的，就说明这个数据就确实是由我发出的，不会有假。这也就说明了数字签名的有效性，可靠性。</p>\n<blockquote>\n<p>参考</p>\n</blockquote>\n<p>上面几节，不知道讲没讲明白，但是我已经把我自己的理解全部整理了一遍，如果您还是不理解，不妨可以试试下面链接，都说明的不错</p>\n<ol>\n<li><a href=\"https://security.stackexchange.com/questions/66392/why-should-i-sign-data-thats-already-encrypted\" target=\"_blank\" rel=\"noopener\">https://security.stackexchange.com/questions/66392/why-should-i-sign-data-thats-already-encrypted</a></li>\n<li><a href=\"https://docs.oracle.com/javase/tutorial/security/apisign/step3.html\" target=\"_blank\" rel=\"noopener\">https://docs.oracle.com/javase/tutorial/security/apisign/step3.html</a></li>\n<li><a href=\"https://www.jianshu.com/p/090e35989501\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/090e35989501</a></li>\n</ol>\n<h2 id=\"JAVA如何生成数字签名\"><a href=\"#JAVA如何生成数字签名\" class=\"headerlink\" title=\"JAVA如何生成数字签名\"></a>JAVA如何生成数字签名</h2><blockquote>\n<p>获取RSA密钥对的接口方法getRSAKeyPair</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> KeyPair <span class=\"title\">getRSAKeyPair</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> NoSuchAlgorithmException</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//获得一个密码随机数生成器(用于密钥生成),使用SecureRandom以及SHA1PRNG </span></span><br><span class=\"line\">    KeyPairGenerator keyGen = KeyPairGenerator.getInstance(<span class=\"string\">\"RSA\"</span>);<span class=\"comment\">//获得密钥生成器,java语言使用KeyPairGenerator</span></span><br><span class=\"line\">    <span class=\"comment\">//SHA1PRNG意思便是使用SHA1密码散列函数,来生成伪随机数,PRNG = pseudo random number generator  </span></span><br><span class=\"line\">    <span class=\"comment\">// 有兴趣的同学可以进行深入研究, 这里不会探讨此问题        </span></span><br><span class=\"line\">    <span class=\"comment\">//我们的示例使用SHA1,当然你也可以试试SHA-2，SHA-3       </span></span><br><span class=\"line\">    SecureRandom random = SecureRandom.getInstance(<span class=\"string\">\"SHA1PRNG\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//初始化1024位密钥生成器       </span></span><br><span class=\"line\">    keyGen.initialize(<span class=\"number\">1024</span>,random);        </span><br><span class=\"line\">    <span class=\"comment\">//生成公钥私钥      </span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> keyGen.generateKeyPair();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用我们刚刚生成的密钥对去生成指定文件的数字签名,getFileSignature接口参数,file为你指定的文件,keypair为你使用getRSAKeyPair生成的密钥对</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Signature <span class=\"title\">getFileSignature</span><span class=\"params\">(File file,KeyPair keyPair)</span> <span class=\"keyword\">throws</span> NoSuchAlgorithmException, InvalidKeyException, IOException, SignatureException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(file == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> FileNotFoundException();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//获取一个签名器,注意：生成密钥对的时候使用的是什么非对称加密算法和什么散列函数,String参数就填写对应\"XXXXwithXXX\"</span></span><br><span class=\"line\">        <span class=\"comment\">//e.g. DSA密钥对,使用SHA1PRNG,则为\"SHA1withDSA\"</span></span><br><span class=\"line\">        Signature dsa = Signature.getInstance(<span class=\"string\">\"SHA1withRSA\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//使用私钥初始化签名器,注意：请不要使用公钥初始化,只有私钥才能用来生成数字签名</span></span><br><span class=\"line\">        PrivateKey priv = keyPair.getPrivate();</span><br><span class=\"line\">        dsa.initSign(priv);</span><br><span class=\"line\">        <span class=\"comment\">//使用签名器的update方法将要进行签名文件的数据导入到签名器中(光看api就感觉很类似导入的感觉,所以就这么说明了,如有违和的地方请指正)</span></span><br><span class=\"line\">        dsa = updateDsaSignture(dsa,file);</span><br><span class=\"line\">        <span class=\"comment\">//获取数字签名</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> dsa;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 将文件数据导入至签名器中</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> dsa 签名器</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> file 需进行签名的文件</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Return</span>: dsa 数据导入完毕的签名器</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Creator</span>: hejj</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Signature <span class=\"title\">updateDsaSignture</span><span class=\"params\">(Signature dsa,File file)</span> <span class=\"keyword\">throws</span> IOException, SignatureException </span>&#123;</span><br><span class=\"line\">        FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(file);</span><br><span class=\"line\">        BufferedInputStream bufin = <span class=\"keyword\">new</span> BufferedInputStream(fis);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> ((len = bufin.read(buffer)) &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            dsa.update(buffer, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        bufin.close();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dsa;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>把数字签名和公钥保存到本地</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">saveSignature</span><span class=\"params\">(File signFile, Signature signature)</span> <span class=\"keyword\">throws</span> IOException, SignatureException, NoSuchAlgorithmException, InvalidKeyException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(signFile == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            signFile = <span class=\"keyword\">new</span> File(<span class=\"string\">\"../resource/signFile\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(signFile.exists())&#123;</span><br><span class=\"line\">            signFile.delete();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            signFile.createNewFile();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        FileOutputStream sigfos = <span class=\"keyword\">new</span> FileOutputStream(signFile);</span><br><span class=\"line\">        sigfos.write(signature.sign());</span><br><span class=\"line\">        sigfos.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">savePublicKey</span><span class=\"params\">(File pubKeyFile, PublicKey publicKey)</span> <span class=\"keyword\">throws</span> NoSuchAlgorithmException, IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pubKeyFile == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> FileNotFoundException();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pubKeyFile.exists())&#123;</span><br><span class=\"line\">            pubKeyFile.delete();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            pubKeyFile.createNewFile();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] key = publicKey.getEncoded();</span><br><span class=\"line\">        FileOutputStream keyfos = <span class=\"keyword\">new</span> FileOutputStream(pubKeyFile);</span><br><span class=\"line\">        keyfos.write(key);</span><br><span class=\"line\">        keyfos.close();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>将所有接口整合，运行起来的demo</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">signFile</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> NoSuchAlgorithmException, InvalidKeyException, IOException, SignatureException </span>&#123;</span><br><span class=\"line\">    MyRsaDsaUtil rsaDsaUtil = <span class=\"keyword\">new</span> MyRsaDsaUtil();</span><br><span class=\"line\">    <span class=\"comment\">//获取密钥对</span></span><br><span class=\"line\">    KeyPair keyPair = rsaDsaUtil.getRSAKeyPair();</span><br><span class=\"line\">    <span class=\"comment\">//获取文件签名(请先预创建自己的rsaSigndFile文件)</span></span><br><span class=\"line\">    String signFilePath = URLDecoder.decode(MyRsaDsaUtil.class.getResource(<span class=\"string\">\"../resource/rsaSignFile\"</span>)</span><br><span class=\"line\">            .getFile(),<span class=\"string\">\"utf-8\"</span>) ;</span><br><span class=\"line\">    Signature signature = rsaDsaUtil.getFileSignature(<span class=\"keyword\">new</span> File(signFilePath),keyPair);</span><br><span class=\"line\">    <span class=\"comment\">//保存文件签名 保存后才能发送给别人哦</span></span><br><span class=\"line\">    String signDataFileUrl = <span class=\"string\">\"src/test/resource/signData\"</span> ;</span><br><span class=\"line\">    String pubKeyDataFileUrl = <span class=\"string\">\"src/test/resource/pubKeyData\"</span>;</span><br><span class=\"line\">    rsaDsaUtil.saveSignature(<span class=\"keyword\">new</span> File(signDataFileUrl),signature);</span><br><span class=\"line\">    rsaDsaUtil.savePublicKey(<span class=\"keyword\">new</span> File(pubKeyDataFileUrl),keyPair.getPublic());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"小节\"><a href=\"#小节\" class=\"headerlink\" title=\"小节\"></a>小节</h2><p>本章我们先从数字签名的基础知识讲起，随后用了实际代码例子进行了练习，现在我们应该都已经学会了使用java生成某个文件的数字签名！</p>\n<p>在下一章中，我们将作为文件接收者，去验证这个数字签名是否正确，从而完成一整个使用数字签名验证发件人有效性的整个流程。</p>\n"},{"title":"我的恋爱文字冒险游戏答卷","date":"2019-04-24T05:44:13.000Z","_content":"\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"http://music.163.com/outchain/player?type=2&id=4922735&auto=1&height=66\"></iframe>\n\n恋爱文字冒险游戏影响了我一定程度的三观，所以特意也为其专门写一篇文章\n\n\n## 《clannad》如果说你认为它只是一部galgame，那么我就要生气了\n---\n\n这一礼拜重新回温了一款galgame，名叫《your diary》 （cube社的甜作）\n\n重温这款游戏的初因是9月30号晚上的一时兴起（我觉得最近自己总是一时兴起，但是真正去干好的事情却没有几个，无法彻彻底底的下定决心是我最近的一个大烦恼）\n\n在我看来，一部好的galgame真的可以改变一个人在现实生活中的处世态度和处世方式，证据就是我自己。我还记得我玩的第一部galgame的时候是高二，那时候高二暑假，临近高三，那年暑假是待在家里度过的（好像是？饿，应该没记错）我的第一部galgame名叫《clannad》，在哥哥的电脑上玩的。我对《clannad》的评价那便是\n\n>一款玩通之后会让你怀疑人生的作品\n\n也许看上去我这评价是负面的，但是毫无疑问，这是我对它的一个正面的最高的评价。爱情小说和肥皂剧我都有看过几部，但是感觉其震撼人心的程度却完全不及《clannad》的十万分之一。（不过这可能也只是我的片面评价，就像初高中女生评价自己喜欢的一个肥皂剧的时候，也会说它有多么多么的感动，不过我冷静的思考过后，我感觉我还是这么写比较好，首先这确实是我脑子里蹦出来的第一个想法，其次它确实是改变了我自身的各个方面，而前两者却没有）\n\n《clannad》牵涉到了爱情，友情，最后还有亲情，包含的东西确实是很多，我跨越了一个暑假的时间去仔细的推敲每个人说的每一句话，在感叹人心复杂外，也有很多很多对自己生活的思考。正是引发了很多对自己生活的思考，所以我觉得《clannad》是超越了小说还有电视剧的一个存在。《clannad》是一部galgame，它是galgame界的一个楷模，确实是带了一个好头，让其后的galgame中也冒出了很多经典的作品（白色相簿啊还有白色相簿啊还有白色相簿啊等等）\n\n呀，写着写着，《clannad》中的一幕幕又开始扫过自己的脑中，哎，不讲道理啊，就是这么有深度的一款galgame，不然也不会有那么多人说\n\n>读作clannad，写作人生\n\n感觉再说这作的事情，自己的情绪就要不受控了，暂且停笔吧\n\n## 《your diary》\n---\n\n所以说呢，作为大学四年最后一次国庆小长假，室友们好像也没有什么外出的安排（毕竟大二大三的时候，国庆节出去玩简直是累惨了，根本不是去看风景的，而是去看人海的吧！）好吧，我也没有什么安排，心已经沉下去了，正是整理自己足迹的时候了呢！\n\n所以说呢，我就在自己的回忆里，抽出了《your diary》这个作品，其实我玩过的galgame不多，除了《clannad》外，其余都是被一个大佬推荐后才去玩的，所有玩的galgame可以用一个手的手指数清楚。\n\n《your diary》是cube社的一个甜作，甜度确实可以，剧情也是蛮不错的，至少可以上台面的那种。\n当初选的由亚线，也是被由亚的那种性格(活泼，开朗，外表小清新，声线少女)所吸引了吧。当时的自己感觉还比较雀跃的那种，自然而然是对个性开朗，活波的女孩子比较有感觉吧。当时走入由亚线后，剧情也没有令我失望，虽然最后让由亚和男主又重新团圆的设定不是很完美，不过也算是给了一个happyend（网上很多人觉得如果由亚和男主彻底分开的结局更神，不过我感觉如果真那样了，又有一批人要致郁了吧）\n\n重新打开游戏后，一开始是想着重新重温由亚线的，重温与由亚的邂逅，让自己可以再次感受下她的温暖，勇敢面对自己的下一个阶段生活，重温下那甜甜的声音（cv满分，把握很好）剧情并不像《clannad》那么有深度，因为我不想把自己再搞的那么致郁，只是想着最后享受一次galgame的温暖，为我自己的galgame日记划上一个比较完美的句号（此处是我为自己设的flag也说不定）\n\n令我自己惊讶的是，由亚还是当时的由亚，而我玩着玩着，却走到了学姐线里去了（与由亚完全不同的女性，话少，沉稳，端庄，黑长直，御姐音：发声位置靠后且低，头腔共鸣和胸腔配合共鸣为主，声音稳重、成熟，但很有魅力）\n\n原来我已经开始憧憬起学姐这样的女性了吗？果然随着年龄的增长，心境自然而然的就发生了变化了呢。\n和声音稳重、成熟的女性聊天我会更有想深聊的想法，就如同红酒一样，可以慢慢品慢慢尝。\n\n---\n\n起初，我注意到学姐的时候，是剧情发展到由亚与学姐初次见面的时候，当时由亚应该是第一次与学姐见面的，但是我发现学姐的神情却不像是第一次与由亚见面。这就奇怪了，勾起了我想深究的欲望，等回过神来的时候，已经发现所有的分支选项我都选择了走入学姐线的选项。\n\n在真正进入学姐线之前，有一个小场景是比较触动我的心的。\n\n男主是图书馆副委员长，而学姐其实是图书馆委员长。有一次偶尔男主发现学姐在资料室的座位上靠着桌子睡着的时候，便拿自己的外套为学姐披上，防止学姐着凉。\n\n随后学姐在当晚居然亲自上门来还外套这个事件比较关键。因为，一般来讲外套其实可以在次日上学的时候顺路还给男主然后道谢就行了。但是当时学姐并没有这么做，而是选择当晚就来还外套。\n\n学姐自己陈述的原因是“外套里有你的学生手册”。学姐觉得，学生手册应该第一时间归还才行，因为如果老师在次日上学后要求检查学生手册的话，男主可能会遇到很多不必要的麻烦（其实一开始学姐的理由只是说，男主自己没有外套穿，第二天去上学也许会着凉，但是男主觉得这个理由还不足以学姐大晚上了还上门还外套的理由，学姐才说出了学生手册的原因，说实话，着凉的这个理由更能收拢男人的心啊）\n\n接下来用文字的形式重现下这个场景：\n>学姐：“早上还是很冷的”\n\n>男主：“走着走着，就会暖起来的”\n\n>学姐：“可是，穿这么薄的话...”\n\n>男主：“那么跑步就行了”\n\n>学姐：“出了汗的话，会着凉感冒的”（认真脸）\n\n>男主：“那我到时候换体育服咯”（体育服这装备那么强！？）\n\n>学姐：“那么，如果长峰同学被老师叫住，训斥的话...”（长峰是男主的姓，学姐没有直呼其名，也说明了两人关系还不够密切，也说明了虽然当了很久的副委员长，可是男主也没有和学姐走得很近这一点。同时也说明了学姐这个人人物的性格吧，难以接近？）\n\n>男主：“谁会训斥我啊，不过是没穿外套而已”（就是就是，学姐是不是想多了，我当时是这么想的）\n\n>学姐：“也许会被生活指导老师警告的”（日本学校的生活指导老师的威严还是很强的）\n\n>男主：“只要说忘记在教室之类的，就能应付过去了”\n\n>学姐：“但是如果还被要求拿出学生手册的话”（学姐的表情开始转变成略带沮丧的感觉）\n\n>男主：“这样的话，就会老老实实交出来的啊”（然后发现学生手册不在身上，哈哈）\n\n>学姐：“长峰同学的学生手册...在我这里噢？”\n\n>男主：“呃？”（男主诧异）\n\n>学姐：“在外套里，口袋里面...”（这句话有点意味，首先一般来说不会随便翻别人的衣服的吧？！然而学姐居然翻看了...如果说不是学姐的个人习惯的话，那么只能用学姐对男主也有一点在意这个理由来解释了）\n\n>男主：“...啊！”\n\n>学姐：“我以为你知道这个手册在哪里，但是为了确认一下，就...”\n\n>男主接过外套后说：“的确...是在这里呢”\n\n>学姐：“有其他丢了的东西吗”（这句话可以看出，学姐的心真的非常细腻啊，是我的话，还了就还了，怎么还会问这些有的没的。。。）\n\n\n\n学姐在这个小场景里表现是很有前辈范的，稳重，成熟，细腻的感觉透露的凌厉精致。考虑周全，思维缜密，语气稳重成熟的孩子是目前的我最喜欢的了，这也是让我决定走入学姐线的一个比较重大的原因。其实不管是学姐的第一个表面原因还是第二个的深层原因，都让我感受到人心的温暖。我在想现实生活中一定无时无刻不再发生这样的事情吧。只不过有些人不擅长把握吧。\n\n---\n\n随后，顺利的靠攻略的力量，走入了学姐线后，不得不提的第二件比较触动我心的事件发生了。\n\n但是在说明这个事件之前，有一个设定还是要说明一下的：\n\n>由亚是给人带来幸福的神明，由亚只会出现在需要幸福的人的身边，故事的开头便是由亚突然降临至男主身边，励志要为男主带来幸福。但其实男主并不是由亚服务的第一个人类，由亚服务的第一个人类，是学姐\n\n所以问题就那么来了，既然由亚服务的第一个人类是学姐，那么由亚有带给学姐幸福了。照着现状来看，是没有的。（这也是为什么之前男主向学姐介绍由亚的时候会有那个奇怪的反应了）\n\n学姐知道由亚，学姐也说过交上一个可以扯一辈子的朋友，是学姐的幸福。\n\n但是不巧的便是，随着由亚陪伴在学姐的时光增加，学姐渐渐的将由亚放在了自己心中最高的位置，有由亚在身边就是学姐最高的幸福\n\n但是有一天由亚突然从学姐身边消失了，为什么？\n\n因为由亚发现，学姐所想要的幸福，居然是和自己一直生活下去\n\n但是这对于一个神明来说，是不可能的，由亚有由亚的使命，总有一天当学姐实现愿望的时候，由亚就必须离开了。\n\n所以说，学姐在由亚消失后的日子了，一直是非常难受的，以为自己被由亚抛弃，以为自己被幸福之神抛弃，以为自己是一个不幸的人。从此不愿意和人有过多的接触。（成为图书委员长的原因也许就是这个）\n\n但是其实呢？由亚并没有真的离开学姐的身边，她只是将自己的形态隐藏了起来，然后一直默默的在学姐的身边守护了一年。每天都尝试着去说服学姐身边的同龄人，让他们和学姐友好相处，和学姐做做朋友。\n由亚只是觉得，不让学姐找到别的朋友，一直拘泥于自己，是永远得不到幸福的，因为由亚知道自己总有一天会离开学姐的。\n\n差不多就是这些原因，才导致了现在的学姐，一直认为自己是不幸的。学姐一直担心的事情便是，很少有永恒的友情，永恒的爱情。证据就是她自己的经历，友情方面便是由亚的离开，爱情方面便是自己父母的离婚。\n\n是的。确实拿着这两个强力的证据来推翻友情和爱情，是轻而易举的事情。\n\n对于友情，虽然我们全然不知自己和朋友们将来会怎么样，会不会因为一些事情而分离（比如毕业，就业），但是我想每个人应该都是想一只做朋友下去的，一直陪伴在朋友的身边。没有人会觉得分离是件好的事情。不过，总而言之生活不会如你所愿，分离在所难免。\n\n而学姐就是被这个“分离”所束缚了，当时由亚的突然离开，让她不敢和男主展开进一步的交往，怕男主也会在有一天离开自己。关于这段的学姐的怕，怕，怕，可以从下面学姐向男主袒露心声的对话中看出（即攻略成功的时候）\n\n>学姐：“不会丢下我一个人不见吧？”\n\n>男主：“跟你约定”\n\n>学姐：“不会比我先死吧？”（难为男主了，这个真不好回答啊）\n\n>男主：“为了学姐，我以后会注意身体的”\n\n>学姐：“绝对。绝对哦？”\n\n学姐说自己的父母离婚的理由是因为工作一直不能在一起，所以男主说“那么只要我们以后工作在一起不就行了，一起开个咖啡店怎么样？”\n\n呀，这个作为切入点，真的很不错。虽然我不是女生，不过我感觉我都要被男主的措辞感动了。\n\n---\n\n最后一个事件，我也想提一下。\n\n学姐在确定了与男主一起携手未来后，老师们开始埋怨起学姐了。\n\n学姐是一个超级优等生，一直是各种第一第一第一，而男主是那种成绩不怎么起眼的小角色，所以关于学姐在高三之际还进行恋爱什么的，可能会影响学业人生之类的话题\n\n当时学姐与老师争论人生未来的时候，说的理由实在是太油说服力了。加上学姐的cv强有力的配音，感觉学姐整个人的形象油然而生，不愧是学姐。我打心里佩服。。。。。\n\n----\n\n## 总结\n\n呼，总算是对自己的galgame经历有了一篇小小的交代总结。\n\n虽然感觉自己没写好，没有写出自己想表达的内容。\n\n不过，就这样吧。有这么一篇文章后，以后自己拿出来就有东西看了。我为自己的galgame日记划下一个句点，这是第一次，也是最后一次对自己体验过的galgame进行大篇幅的评价，说出来感觉心情舒畅呢～\n嘛，小长假过去了，又要开始好好工作学习，也祝自己能够顺顺利利吧，也恭祝日本的galgame越做越好！希望国人可以更加关注下正版，自己喜欢的东西一定要给点钱买个正版支持一下哦\n\n\n{% img http://i67.tinypic.com/2wciah2.png %}\n","source":"_posts/我的恋爱文字冒险游戏答卷.md","raw":"---\ntitle: 我的恋爱文字冒险游戏答卷\ntags: 回忆向\ncategories: 游戏\ndate: 2019-04-24 13:44:13\n---\n\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"http://music.163.com/outchain/player?type=2&id=4922735&auto=1&height=66\"></iframe>\n\n恋爱文字冒险游戏影响了我一定程度的三观，所以特意也为其专门写一篇文章\n\n\n## 《clannad》如果说你认为它只是一部galgame，那么我就要生气了\n---\n\n这一礼拜重新回温了一款galgame，名叫《your diary》 （cube社的甜作）\n\n重温这款游戏的初因是9月30号晚上的一时兴起（我觉得最近自己总是一时兴起，但是真正去干好的事情却没有几个，无法彻彻底底的下定决心是我最近的一个大烦恼）\n\n在我看来，一部好的galgame真的可以改变一个人在现实生活中的处世态度和处世方式，证据就是我自己。我还记得我玩的第一部galgame的时候是高二，那时候高二暑假，临近高三，那年暑假是待在家里度过的（好像是？饿，应该没记错）我的第一部galgame名叫《clannad》，在哥哥的电脑上玩的。我对《clannad》的评价那便是\n\n>一款玩通之后会让你怀疑人生的作品\n\n也许看上去我这评价是负面的，但是毫无疑问，这是我对它的一个正面的最高的评价。爱情小说和肥皂剧我都有看过几部，但是感觉其震撼人心的程度却完全不及《clannad》的十万分之一。（不过这可能也只是我的片面评价，就像初高中女生评价自己喜欢的一个肥皂剧的时候，也会说它有多么多么的感动，不过我冷静的思考过后，我感觉我还是这么写比较好，首先这确实是我脑子里蹦出来的第一个想法，其次它确实是改变了我自身的各个方面，而前两者却没有）\n\n《clannad》牵涉到了爱情，友情，最后还有亲情，包含的东西确实是很多，我跨越了一个暑假的时间去仔细的推敲每个人说的每一句话，在感叹人心复杂外，也有很多很多对自己生活的思考。正是引发了很多对自己生活的思考，所以我觉得《clannad》是超越了小说还有电视剧的一个存在。《clannad》是一部galgame，它是galgame界的一个楷模，确实是带了一个好头，让其后的galgame中也冒出了很多经典的作品（白色相簿啊还有白色相簿啊还有白色相簿啊等等）\n\n呀，写着写着，《clannad》中的一幕幕又开始扫过自己的脑中，哎，不讲道理啊，就是这么有深度的一款galgame，不然也不会有那么多人说\n\n>读作clannad，写作人生\n\n感觉再说这作的事情，自己的情绪就要不受控了，暂且停笔吧\n\n## 《your diary》\n---\n\n所以说呢，作为大学四年最后一次国庆小长假，室友们好像也没有什么外出的安排（毕竟大二大三的时候，国庆节出去玩简直是累惨了，根本不是去看风景的，而是去看人海的吧！）好吧，我也没有什么安排，心已经沉下去了，正是整理自己足迹的时候了呢！\n\n所以说呢，我就在自己的回忆里，抽出了《your diary》这个作品，其实我玩过的galgame不多，除了《clannad》外，其余都是被一个大佬推荐后才去玩的，所有玩的galgame可以用一个手的手指数清楚。\n\n《your diary》是cube社的一个甜作，甜度确实可以，剧情也是蛮不错的，至少可以上台面的那种。\n当初选的由亚线，也是被由亚的那种性格(活泼，开朗，外表小清新，声线少女)所吸引了吧。当时的自己感觉还比较雀跃的那种，自然而然是对个性开朗，活波的女孩子比较有感觉吧。当时走入由亚线后，剧情也没有令我失望，虽然最后让由亚和男主又重新团圆的设定不是很完美，不过也算是给了一个happyend（网上很多人觉得如果由亚和男主彻底分开的结局更神，不过我感觉如果真那样了，又有一批人要致郁了吧）\n\n重新打开游戏后，一开始是想着重新重温由亚线的，重温与由亚的邂逅，让自己可以再次感受下她的温暖，勇敢面对自己的下一个阶段生活，重温下那甜甜的声音（cv满分，把握很好）剧情并不像《clannad》那么有深度，因为我不想把自己再搞的那么致郁，只是想着最后享受一次galgame的温暖，为我自己的galgame日记划上一个比较完美的句号（此处是我为自己设的flag也说不定）\n\n令我自己惊讶的是，由亚还是当时的由亚，而我玩着玩着，却走到了学姐线里去了（与由亚完全不同的女性，话少，沉稳，端庄，黑长直，御姐音：发声位置靠后且低，头腔共鸣和胸腔配合共鸣为主，声音稳重、成熟，但很有魅力）\n\n原来我已经开始憧憬起学姐这样的女性了吗？果然随着年龄的增长，心境自然而然的就发生了变化了呢。\n和声音稳重、成熟的女性聊天我会更有想深聊的想法，就如同红酒一样，可以慢慢品慢慢尝。\n\n---\n\n起初，我注意到学姐的时候，是剧情发展到由亚与学姐初次见面的时候，当时由亚应该是第一次与学姐见面的，但是我发现学姐的神情却不像是第一次与由亚见面。这就奇怪了，勾起了我想深究的欲望，等回过神来的时候，已经发现所有的分支选项我都选择了走入学姐线的选项。\n\n在真正进入学姐线之前，有一个小场景是比较触动我的心的。\n\n男主是图书馆副委员长，而学姐其实是图书馆委员长。有一次偶尔男主发现学姐在资料室的座位上靠着桌子睡着的时候，便拿自己的外套为学姐披上，防止学姐着凉。\n\n随后学姐在当晚居然亲自上门来还外套这个事件比较关键。因为，一般来讲外套其实可以在次日上学的时候顺路还给男主然后道谢就行了。但是当时学姐并没有这么做，而是选择当晚就来还外套。\n\n学姐自己陈述的原因是“外套里有你的学生手册”。学姐觉得，学生手册应该第一时间归还才行，因为如果老师在次日上学后要求检查学生手册的话，男主可能会遇到很多不必要的麻烦（其实一开始学姐的理由只是说，男主自己没有外套穿，第二天去上学也许会着凉，但是男主觉得这个理由还不足以学姐大晚上了还上门还外套的理由，学姐才说出了学生手册的原因，说实话，着凉的这个理由更能收拢男人的心啊）\n\n接下来用文字的形式重现下这个场景：\n>学姐：“早上还是很冷的”\n\n>男主：“走着走着，就会暖起来的”\n\n>学姐：“可是，穿这么薄的话...”\n\n>男主：“那么跑步就行了”\n\n>学姐：“出了汗的话，会着凉感冒的”（认真脸）\n\n>男主：“那我到时候换体育服咯”（体育服这装备那么强！？）\n\n>学姐：“那么，如果长峰同学被老师叫住，训斥的话...”（长峰是男主的姓，学姐没有直呼其名，也说明了两人关系还不够密切，也说明了虽然当了很久的副委员长，可是男主也没有和学姐走得很近这一点。同时也说明了学姐这个人人物的性格吧，难以接近？）\n\n>男主：“谁会训斥我啊，不过是没穿外套而已”（就是就是，学姐是不是想多了，我当时是这么想的）\n\n>学姐：“也许会被生活指导老师警告的”（日本学校的生活指导老师的威严还是很强的）\n\n>男主：“只要说忘记在教室之类的，就能应付过去了”\n\n>学姐：“但是如果还被要求拿出学生手册的话”（学姐的表情开始转变成略带沮丧的感觉）\n\n>男主：“这样的话，就会老老实实交出来的啊”（然后发现学生手册不在身上，哈哈）\n\n>学姐：“长峰同学的学生手册...在我这里噢？”\n\n>男主：“呃？”（男主诧异）\n\n>学姐：“在外套里，口袋里面...”（这句话有点意味，首先一般来说不会随便翻别人的衣服的吧？！然而学姐居然翻看了...如果说不是学姐的个人习惯的话，那么只能用学姐对男主也有一点在意这个理由来解释了）\n\n>男主：“...啊！”\n\n>学姐：“我以为你知道这个手册在哪里，但是为了确认一下，就...”\n\n>男主接过外套后说：“的确...是在这里呢”\n\n>学姐：“有其他丢了的东西吗”（这句话可以看出，学姐的心真的非常细腻啊，是我的话，还了就还了，怎么还会问这些有的没的。。。）\n\n\n\n学姐在这个小场景里表现是很有前辈范的，稳重，成熟，细腻的感觉透露的凌厉精致。考虑周全，思维缜密，语气稳重成熟的孩子是目前的我最喜欢的了，这也是让我决定走入学姐线的一个比较重大的原因。其实不管是学姐的第一个表面原因还是第二个的深层原因，都让我感受到人心的温暖。我在想现实生活中一定无时无刻不再发生这样的事情吧。只不过有些人不擅长把握吧。\n\n---\n\n随后，顺利的靠攻略的力量，走入了学姐线后，不得不提的第二件比较触动我心的事件发生了。\n\n但是在说明这个事件之前，有一个设定还是要说明一下的：\n\n>由亚是给人带来幸福的神明，由亚只会出现在需要幸福的人的身边，故事的开头便是由亚突然降临至男主身边，励志要为男主带来幸福。但其实男主并不是由亚服务的第一个人类，由亚服务的第一个人类，是学姐\n\n所以问题就那么来了，既然由亚服务的第一个人类是学姐，那么由亚有带给学姐幸福了。照着现状来看，是没有的。（这也是为什么之前男主向学姐介绍由亚的时候会有那个奇怪的反应了）\n\n学姐知道由亚，学姐也说过交上一个可以扯一辈子的朋友，是学姐的幸福。\n\n但是不巧的便是，随着由亚陪伴在学姐的时光增加，学姐渐渐的将由亚放在了自己心中最高的位置，有由亚在身边就是学姐最高的幸福\n\n但是有一天由亚突然从学姐身边消失了，为什么？\n\n因为由亚发现，学姐所想要的幸福，居然是和自己一直生活下去\n\n但是这对于一个神明来说，是不可能的，由亚有由亚的使命，总有一天当学姐实现愿望的时候，由亚就必须离开了。\n\n所以说，学姐在由亚消失后的日子了，一直是非常难受的，以为自己被由亚抛弃，以为自己被幸福之神抛弃，以为自己是一个不幸的人。从此不愿意和人有过多的接触。（成为图书委员长的原因也许就是这个）\n\n但是其实呢？由亚并没有真的离开学姐的身边，她只是将自己的形态隐藏了起来，然后一直默默的在学姐的身边守护了一年。每天都尝试着去说服学姐身边的同龄人，让他们和学姐友好相处，和学姐做做朋友。\n由亚只是觉得，不让学姐找到别的朋友，一直拘泥于自己，是永远得不到幸福的，因为由亚知道自己总有一天会离开学姐的。\n\n差不多就是这些原因，才导致了现在的学姐，一直认为自己是不幸的。学姐一直担心的事情便是，很少有永恒的友情，永恒的爱情。证据就是她自己的经历，友情方面便是由亚的离开，爱情方面便是自己父母的离婚。\n\n是的。确实拿着这两个强力的证据来推翻友情和爱情，是轻而易举的事情。\n\n对于友情，虽然我们全然不知自己和朋友们将来会怎么样，会不会因为一些事情而分离（比如毕业，就业），但是我想每个人应该都是想一只做朋友下去的，一直陪伴在朋友的身边。没有人会觉得分离是件好的事情。不过，总而言之生活不会如你所愿，分离在所难免。\n\n而学姐就是被这个“分离”所束缚了，当时由亚的突然离开，让她不敢和男主展开进一步的交往，怕男主也会在有一天离开自己。关于这段的学姐的怕，怕，怕，可以从下面学姐向男主袒露心声的对话中看出（即攻略成功的时候）\n\n>学姐：“不会丢下我一个人不见吧？”\n\n>男主：“跟你约定”\n\n>学姐：“不会比我先死吧？”（难为男主了，这个真不好回答啊）\n\n>男主：“为了学姐，我以后会注意身体的”\n\n>学姐：“绝对。绝对哦？”\n\n学姐说自己的父母离婚的理由是因为工作一直不能在一起，所以男主说“那么只要我们以后工作在一起不就行了，一起开个咖啡店怎么样？”\n\n呀，这个作为切入点，真的很不错。虽然我不是女生，不过我感觉我都要被男主的措辞感动了。\n\n---\n\n最后一个事件，我也想提一下。\n\n学姐在确定了与男主一起携手未来后，老师们开始埋怨起学姐了。\n\n学姐是一个超级优等生，一直是各种第一第一第一，而男主是那种成绩不怎么起眼的小角色，所以关于学姐在高三之际还进行恋爱什么的，可能会影响学业人生之类的话题\n\n当时学姐与老师争论人生未来的时候，说的理由实在是太油说服力了。加上学姐的cv强有力的配音，感觉学姐整个人的形象油然而生，不愧是学姐。我打心里佩服。。。。。\n\n----\n\n## 总结\n\n呼，总算是对自己的galgame经历有了一篇小小的交代总结。\n\n虽然感觉自己没写好，没有写出自己想表达的内容。\n\n不过，就这样吧。有这么一篇文章后，以后自己拿出来就有东西看了。我为自己的galgame日记划下一个句点，这是第一次，也是最后一次对自己体验过的galgame进行大篇幅的评价，说出来感觉心情舒畅呢～\n嘛，小长假过去了，又要开始好好工作学习，也祝自己能够顺顺利利吧，也恭祝日本的galgame越做越好！希望国人可以更加关注下正版，自己喜欢的东西一定要给点钱买个正版支持一下哦\n\n\n{% img http://i67.tinypic.com/2wciah2.png %}\n","slug":"我的恋爱文字冒险游戏答卷","published":1,"updated":"2019-04-25T03:17:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjv3k3jw6001klk9v6a4niqvd","content":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"http://music.163.com/outchain/player?type=2&id=4922735&auto=1&height=66\"></iframe>\n\n<p>恋爱文字冒险游戏影响了我一定程度的三观，所以特意也为其专门写一篇文章</p>\n<h2 id=\"《clannad》如果说你认为它只是一部galgame，那么我就要生气了\"><a href=\"#《clannad》如果说你认为它只是一部galgame，那么我就要生气了\" class=\"headerlink\" title=\"《clannad》如果说你认为它只是一部galgame，那么我就要生气了\"></a>《clannad》如果说你认为它只是一部galgame，那么我就要生气了</h2><hr>\n<p>这一礼拜重新回温了一款galgame，名叫《your diary》 （cube社的甜作）</p>\n<p>重温这款游戏的初因是9月30号晚上的一时兴起（我觉得最近自己总是一时兴起，但是真正去干好的事情却没有几个，无法彻彻底底的下定决心是我最近的一个大烦恼）</p>\n<p>在我看来，一部好的galgame真的可以改变一个人在现实生活中的处世态度和处世方式，证据就是我自己。我还记得我玩的第一部galgame的时候是高二，那时候高二暑假，临近高三，那年暑假是待在家里度过的（好像是？饿，应该没记错）我的第一部galgame名叫《clannad》，在哥哥的电脑上玩的。我对《clannad》的评价那便是</p>\n<blockquote>\n<p>一款玩通之后会让你怀疑人生的作品</p>\n</blockquote>\n<p>也许看上去我这评价是负面的，但是毫无疑问，这是我对它的一个正面的最高的评价。爱情小说和肥皂剧我都有看过几部，但是感觉其震撼人心的程度却完全不及《clannad》的十万分之一。（不过这可能也只是我的片面评价，就像初高中女生评价自己喜欢的一个肥皂剧的时候，也会说它有多么多么的感动，不过我冷静的思考过后，我感觉我还是这么写比较好，首先这确实是我脑子里蹦出来的第一个想法，其次它确实是改变了我自身的各个方面，而前两者却没有）</p>\n<p>《clannad》牵涉到了爱情，友情，最后还有亲情，包含的东西确实是很多，我跨越了一个暑假的时间去仔细的推敲每个人说的每一句话，在感叹人心复杂外，也有很多很多对自己生活的思考。正是引发了很多对自己生活的思考，所以我觉得《clannad》是超越了小说还有电视剧的一个存在。《clannad》是一部galgame，它是galgame界的一个楷模，确实是带了一个好头，让其后的galgame中也冒出了很多经典的作品（白色相簿啊还有白色相簿啊还有白色相簿啊等等）</p>\n<p>呀，写着写着，《clannad》中的一幕幕又开始扫过自己的脑中，哎，不讲道理啊，就是这么有深度的一款galgame，不然也不会有那么多人说</p>\n<blockquote>\n<p>读作clannad，写作人生</p>\n</blockquote>\n<p>感觉再说这作的事情，自己的情绪就要不受控了，暂且停笔吧</p>\n<h2 id=\"《your-diary》\"><a href=\"#《your-diary》\" class=\"headerlink\" title=\"《your diary》\"></a>《your diary》</h2><hr>\n<p>所以说呢，作为大学四年最后一次国庆小长假，室友们好像也没有什么外出的安排（毕竟大二大三的时候，国庆节出去玩简直是累惨了，根本不是去看风景的，而是去看人海的吧！）好吧，我也没有什么安排，心已经沉下去了，正是整理自己足迹的时候了呢！</p>\n<p>所以说呢，我就在自己的回忆里，抽出了《your diary》这个作品，其实我玩过的galgame不多，除了《clannad》外，其余都是被一个大佬推荐后才去玩的，所有玩的galgame可以用一个手的手指数清楚。</p>\n<p>《your diary》是cube社的一个甜作，甜度确实可以，剧情也是蛮不错的，至少可以上台面的那种。<br>当初选的由亚线，也是被由亚的那种性格(活泼，开朗，外表小清新，声线少女)所吸引了吧。当时的自己感觉还比较雀跃的那种，自然而然是对个性开朗，活波的女孩子比较有感觉吧。当时走入由亚线后，剧情也没有令我失望，虽然最后让由亚和男主又重新团圆的设定不是很完美，不过也算是给了一个happyend（网上很多人觉得如果由亚和男主彻底分开的结局更神，不过我感觉如果真那样了，又有一批人要致郁了吧）</p>\n<p>重新打开游戏后，一开始是想着重新重温由亚线的，重温与由亚的邂逅，让自己可以再次感受下她的温暖，勇敢面对自己的下一个阶段生活，重温下那甜甜的声音（cv满分，把握很好）剧情并不像《clannad》那么有深度，因为我不想把自己再搞的那么致郁，只是想着最后享受一次galgame的温暖，为我自己的galgame日记划上一个比较完美的句号（此处是我为自己设的flag也说不定）</p>\n<p>令我自己惊讶的是，由亚还是当时的由亚，而我玩着玩着，却走到了学姐线里去了（与由亚完全不同的女性，话少，沉稳，端庄，黑长直，御姐音：发声位置靠后且低，头腔共鸣和胸腔配合共鸣为主，声音稳重、成熟，但很有魅力）</p>\n<p>原来我已经开始憧憬起学姐这样的女性了吗？果然随着年龄的增长，心境自然而然的就发生了变化了呢。<br>和声音稳重、成熟的女性聊天我会更有想深聊的想法，就如同红酒一样，可以慢慢品慢慢尝。</p>\n<hr>\n<p>起初，我注意到学姐的时候，是剧情发展到由亚与学姐初次见面的时候，当时由亚应该是第一次与学姐见面的，但是我发现学姐的神情却不像是第一次与由亚见面。这就奇怪了，勾起了我想深究的欲望，等回过神来的时候，已经发现所有的分支选项我都选择了走入学姐线的选项。</p>\n<p>在真正进入学姐线之前，有一个小场景是比较触动我的心的。</p>\n<p>男主是图书馆副委员长，而学姐其实是图书馆委员长。有一次偶尔男主发现学姐在资料室的座位上靠着桌子睡着的时候，便拿自己的外套为学姐披上，防止学姐着凉。</p>\n<p>随后学姐在当晚居然亲自上门来还外套这个事件比较关键。因为，一般来讲外套其实可以在次日上学的时候顺路还给男主然后道谢就行了。但是当时学姐并没有这么做，而是选择当晚就来还外套。</p>\n<p>学姐自己陈述的原因是“外套里有你的学生手册”。学姐觉得，学生手册应该第一时间归还才行，因为如果老师在次日上学后要求检查学生手册的话，男主可能会遇到很多不必要的麻烦（其实一开始学姐的理由只是说，男主自己没有外套穿，第二天去上学也许会着凉，但是男主觉得这个理由还不足以学姐大晚上了还上门还外套的理由，学姐才说出了学生手册的原因，说实话，着凉的这个理由更能收拢男人的心啊）</p>\n<p>接下来用文字的形式重现下这个场景：</p>\n<blockquote>\n<p>学姐：“早上还是很冷的”</p>\n</blockquote>\n<blockquote>\n<p>男主：“走着走着，就会暖起来的”</p>\n</blockquote>\n<blockquote>\n<p>学姐：“可是，穿这么薄的话…”</p>\n</blockquote>\n<blockquote>\n<p>男主：“那么跑步就行了”</p>\n</blockquote>\n<blockquote>\n<p>学姐：“出了汗的话，会着凉感冒的”（认真脸）</p>\n</blockquote>\n<blockquote>\n<p>男主：“那我到时候换体育服咯”（体育服这装备那么强！？）</p>\n</blockquote>\n<blockquote>\n<p>学姐：“那么，如果长峰同学被老师叫住，训斥的话…”（长峰是男主的姓，学姐没有直呼其名，也说明了两人关系还不够密切，也说明了虽然当了很久的副委员长，可是男主也没有和学姐走得很近这一点。同时也说明了学姐这个人人物的性格吧，难以接近？）</p>\n</blockquote>\n<blockquote>\n<p>男主：“谁会训斥我啊，不过是没穿外套而已”（就是就是，学姐是不是想多了，我当时是这么想的）</p>\n</blockquote>\n<blockquote>\n<p>学姐：“也许会被生活指导老师警告的”（日本学校的生活指导老师的威严还是很强的）</p>\n</blockquote>\n<blockquote>\n<p>男主：“只要说忘记在教室之类的，就能应付过去了”</p>\n</blockquote>\n<blockquote>\n<p>学姐：“但是如果还被要求拿出学生手册的话”（学姐的表情开始转变成略带沮丧的感觉）</p>\n</blockquote>\n<blockquote>\n<p>男主：“这样的话，就会老老实实交出来的啊”（然后发现学生手册不在身上，哈哈）</p>\n</blockquote>\n<blockquote>\n<p>学姐：“长峰同学的学生手册…在我这里噢？”</p>\n</blockquote>\n<blockquote>\n<p>男主：“呃？”（男主诧异）</p>\n</blockquote>\n<blockquote>\n<p>学姐：“在外套里，口袋里面…”（这句话有点意味，首先一般来说不会随便翻别人的衣服的吧？！然而学姐居然翻看了…如果说不是学姐的个人习惯的话，那么只能用学姐对男主也有一点在意这个理由来解释了）</p>\n</blockquote>\n<blockquote>\n<p>男主：“…啊！”</p>\n</blockquote>\n<blockquote>\n<p>学姐：“我以为你知道这个手册在哪里，但是为了确认一下，就…”</p>\n</blockquote>\n<blockquote>\n<p>男主接过外套后说：“的确…是在这里呢”</p>\n</blockquote>\n<blockquote>\n<p>学姐：“有其他丢了的东西吗”（这句话可以看出，学姐的心真的非常细腻啊，是我的话，还了就还了，怎么还会问这些有的没的。。。）</p>\n</blockquote>\n<p>学姐在这个小场景里表现是很有前辈范的，稳重，成熟，细腻的感觉透露的凌厉精致。考虑周全，思维缜密，语气稳重成熟的孩子是目前的我最喜欢的了，这也是让我决定走入学姐线的一个比较重大的原因。其实不管是学姐的第一个表面原因还是第二个的深层原因，都让我感受到人心的温暖。我在想现实生活中一定无时无刻不再发生这样的事情吧。只不过有些人不擅长把握吧。</p>\n<hr>\n<p>随后，顺利的靠攻略的力量，走入了学姐线后，不得不提的第二件比较触动我心的事件发生了。</p>\n<p>但是在说明这个事件之前，有一个设定还是要说明一下的：</p>\n<blockquote>\n<p>由亚是给人带来幸福的神明，由亚只会出现在需要幸福的人的身边，故事的开头便是由亚突然降临至男主身边，励志要为男主带来幸福。但其实男主并不是由亚服务的第一个人类，由亚服务的第一个人类，是学姐</p>\n</blockquote>\n<p>所以问题就那么来了，既然由亚服务的第一个人类是学姐，那么由亚有带给学姐幸福了。照着现状来看，是没有的。（这也是为什么之前男主向学姐介绍由亚的时候会有那个奇怪的反应了）</p>\n<p>学姐知道由亚，学姐也说过交上一个可以扯一辈子的朋友，是学姐的幸福。</p>\n<p>但是不巧的便是，随着由亚陪伴在学姐的时光增加，学姐渐渐的将由亚放在了自己心中最高的位置，有由亚在身边就是学姐最高的幸福</p>\n<p>但是有一天由亚突然从学姐身边消失了，为什么？</p>\n<p>因为由亚发现，学姐所想要的幸福，居然是和自己一直生活下去</p>\n<p>但是这对于一个神明来说，是不可能的，由亚有由亚的使命，总有一天当学姐实现愿望的时候，由亚就必须离开了。</p>\n<p>所以说，学姐在由亚消失后的日子了，一直是非常难受的，以为自己被由亚抛弃，以为自己被幸福之神抛弃，以为自己是一个不幸的人。从此不愿意和人有过多的接触。（成为图书委员长的原因也许就是这个）</p>\n<p>但是其实呢？由亚并没有真的离开学姐的身边，她只是将自己的形态隐藏了起来，然后一直默默的在学姐的身边守护了一年。每天都尝试着去说服学姐身边的同龄人，让他们和学姐友好相处，和学姐做做朋友。<br>由亚只是觉得，不让学姐找到别的朋友，一直拘泥于自己，是永远得不到幸福的，因为由亚知道自己总有一天会离开学姐的。</p>\n<p>差不多就是这些原因，才导致了现在的学姐，一直认为自己是不幸的。学姐一直担心的事情便是，很少有永恒的友情，永恒的爱情。证据就是她自己的经历，友情方面便是由亚的离开，爱情方面便是自己父母的离婚。</p>\n<p>是的。确实拿着这两个强力的证据来推翻友情和爱情，是轻而易举的事情。</p>\n<p>对于友情，虽然我们全然不知自己和朋友们将来会怎么样，会不会因为一些事情而分离（比如毕业，就业），但是我想每个人应该都是想一只做朋友下去的，一直陪伴在朋友的身边。没有人会觉得分离是件好的事情。不过，总而言之生活不会如你所愿，分离在所难免。</p>\n<p>而学姐就是被这个“分离”所束缚了，当时由亚的突然离开，让她不敢和男主展开进一步的交往，怕男主也会在有一天离开自己。关于这段的学姐的怕，怕，怕，可以从下面学姐向男主袒露心声的对话中看出（即攻略成功的时候）</p>\n<blockquote>\n<p>学姐：“不会丢下我一个人不见吧？”</p>\n</blockquote>\n<blockquote>\n<p>男主：“跟你约定”</p>\n</blockquote>\n<blockquote>\n<p>学姐：“不会比我先死吧？”（难为男主了，这个真不好回答啊）</p>\n</blockquote>\n<blockquote>\n<p>男主：“为了学姐，我以后会注意身体的”</p>\n</blockquote>\n<blockquote>\n<p>学姐：“绝对。绝对哦？”</p>\n</blockquote>\n<p>学姐说自己的父母离婚的理由是因为工作一直不能在一起，所以男主说“那么只要我们以后工作在一起不就行了，一起开个咖啡店怎么样？”</p>\n<p>呀，这个作为切入点，真的很不错。虽然我不是女生，不过我感觉我都要被男主的措辞感动了。</p>\n<hr>\n<p>最后一个事件，我也想提一下。</p>\n<p>学姐在确定了与男主一起携手未来后，老师们开始埋怨起学姐了。</p>\n<p>学姐是一个超级优等生，一直是各种第一第一第一，而男主是那种成绩不怎么起眼的小角色，所以关于学姐在高三之际还进行恋爱什么的，可能会影响学业人生之类的话题</p>\n<p>当时学姐与老师争论人生未来的时候，说的理由实在是太油说服力了。加上学姐的cv强有力的配音，感觉学姐整个人的形象油然而生，不愧是学姐。我打心里佩服。。。。。</p>\n<hr>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>呼，总算是对自己的galgame经历有了一篇小小的交代总结。</p>\n<p>虽然感觉自己没写好，没有写出自己想表达的内容。</p>\n<p>不过，就这样吧。有这么一篇文章后，以后自己拿出来就有东西看了。我为自己的galgame日记划下一个句点，这是第一次，也是最后一次对自己体验过的galgame进行大篇幅的评价，说出来感觉心情舒畅呢～<br>嘛，小长假过去了，又要开始好好工作学习，也祝自己能够顺顺利利吧，也恭祝日本的galgame越做越好！希望国人可以更加关注下正版，自己喜欢的东西一定要给点钱买个正版支持一下哦</p>\n<img src=\"http://i67.tinypic.com/2wciah2.png\">\n","site":{"data":{}},"excerpt":"","more":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"http://music.163.com/outchain/player?type=2&id=4922735&auto=1&height=66\"></iframe>\n\n<p>恋爱文字冒险游戏影响了我一定程度的三观，所以特意也为其专门写一篇文章</p>\n<h2 id=\"《clannad》如果说你认为它只是一部galgame，那么我就要生气了\"><a href=\"#《clannad》如果说你认为它只是一部galgame，那么我就要生气了\" class=\"headerlink\" title=\"《clannad》如果说你认为它只是一部galgame，那么我就要生气了\"></a>《clannad》如果说你认为它只是一部galgame，那么我就要生气了</h2><hr>\n<p>这一礼拜重新回温了一款galgame，名叫《your diary》 （cube社的甜作）</p>\n<p>重温这款游戏的初因是9月30号晚上的一时兴起（我觉得最近自己总是一时兴起，但是真正去干好的事情却没有几个，无法彻彻底底的下定决心是我最近的一个大烦恼）</p>\n<p>在我看来，一部好的galgame真的可以改变一个人在现实生活中的处世态度和处世方式，证据就是我自己。我还记得我玩的第一部galgame的时候是高二，那时候高二暑假，临近高三，那年暑假是待在家里度过的（好像是？饿，应该没记错）我的第一部galgame名叫《clannad》，在哥哥的电脑上玩的。我对《clannad》的评价那便是</p>\n<blockquote>\n<p>一款玩通之后会让你怀疑人生的作品</p>\n</blockquote>\n<p>也许看上去我这评价是负面的，但是毫无疑问，这是我对它的一个正面的最高的评价。爱情小说和肥皂剧我都有看过几部，但是感觉其震撼人心的程度却完全不及《clannad》的十万分之一。（不过这可能也只是我的片面评价，就像初高中女生评价自己喜欢的一个肥皂剧的时候，也会说它有多么多么的感动，不过我冷静的思考过后，我感觉我还是这么写比较好，首先这确实是我脑子里蹦出来的第一个想法，其次它确实是改变了我自身的各个方面，而前两者却没有）</p>\n<p>《clannad》牵涉到了爱情，友情，最后还有亲情，包含的东西确实是很多，我跨越了一个暑假的时间去仔细的推敲每个人说的每一句话，在感叹人心复杂外，也有很多很多对自己生活的思考。正是引发了很多对自己生活的思考，所以我觉得《clannad》是超越了小说还有电视剧的一个存在。《clannad》是一部galgame，它是galgame界的一个楷模，确实是带了一个好头，让其后的galgame中也冒出了很多经典的作品（白色相簿啊还有白色相簿啊还有白色相簿啊等等）</p>\n<p>呀，写着写着，《clannad》中的一幕幕又开始扫过自己的脑中，哎，不讲道理啊，就是这么有深度的一款galgame，不然也不会有那么多人说</p>\n<blockquote>\n<p>读作clannad，写作人生</p>\n</blockquote>\n<p>感觉再说这作的事情，自己的情绪就要不受控了，暂且停笔吧</p>\n<h2 id=\"《your-diary》\"><a href=\"#《your-diary》\" class=\"headerlink\" title=\"《your diary》\"></a>《your diary》</h2><hr>\n<p>所以说呢，作为大学四年最后一次国庆小长假，室友们好像也没有什么外出的安排（毕竟大二大三的时候，国庆节出去玩简直是累惨了，根本不是去看风景的，而是去看人海的吧！）好吧，我也没有什么安排，心已经沉下去了，正是整理自己足迹的时候了呢！</p>\n<p>所以说呢，我就在自己的回忆里，抽出了《your diary》这个作品，其实我玩过的galgame不多，除了《clannad》外，其余都是被一个大佬推荐后才去玩的，所有玩的galgame可以用一个手的手指数清楚。</p>\n<p>《your diary》是cube社的一个甜作，甜度确实可以，剧情也是蛮不错的，至少可以上台面的那种。<br>当初选的由亚线，也是被由亚的那种性格(活泼，开朗，外表小清新，声线少女)所吸引了吧。当时的自己感觉还比较雀跃的那种，自然而然是对个性开朗，活波的女孩子比较有感觉吧。当时走入由亚线后，剧情也没有令我失望，虽然最后让由亚和男主又重新团圆的设定不是很完美，不过也算是给了一个happyend（网上很多人觉得如果由亚和男主彻底分开的结局更神，不过我感觉如果真那样了，又有一批人要致郁了吧）</p>\n<p>重新打开游戏后，一开始是想着重新重温由亚线的，重温与由亚的邂逅，让自己可以再次感受下她的温暖，勇敢面对自己的下一个阶段生活，重温下那甜甜的声音（cv满分，把握很好）剧情并不像《clannad》那么有深度，因为我不想把自己再搞的那么致郁，只是想着最后享受一次galgame的温暖，为我自己的galgame日记划上一个比较完美的句号（此处是我为自己设的flag也说不定）</p>\n<p>令我自己惊讶的是，由亚还是当时的由亚，而我玩着玩着，却走到了学姐线里去了（与由亚完全不同的女性，话少，沉稳，端庄，黑长直，御姐音：发声位置靠后且低，头腔共鸣和胸腔配合共鸣为主，声音稳重、成熟，但很有魅力）</p>\n<p>原来我已经开始憧憬起学姐这样的女性了吗？果然随着年龄的增长，心境自然而然的就发生了变化了呢。<br>和声音稳重、成熟的女性聊天我会更有想深聊的想法，就如同红酒一样，可以慢慢品慢慢尝。</p>\n<hr>\n<p>起初，我注意到学姐的时候，是剧情发展到由亚与学姐初次见面的时候，当时由亚应该是第一次与学姐见面的，但是我发现学姐的神情却不像是第一次与由亚见面。这就奇怪了，勾起了我想深究的欲望，等回过神来的时候，已经发现所有的分支选项我都选择了走入学姐线的选项。</p>\n<p>在真正进入学姐线之前，有一个小场景是比较触动我的心的。</p>\n<p>男主是图书馆副委员长，而学姐其实是图书馆委员长。有一次偶尔男主发现学姐在资料室的座位上靠着桌子睡着的时候，便拿自己的外套为学姐披上，防止学姐着凉。</p>\n<p>随后学姐在当晚居然亲自上门来还外套这个事件比较关键。因为，一般来讲外套其实可以在次日上学的时候顺路还给男主然后道谢就行了。但是当时学姐并没有这么做，而是选择当晚就来还外套。</p>\n<p>学姐自己陈述的原因是“外套里有你的学生手册”。学姐觉得，学生手册应该第一时间归还才行，因为如果老师在次日上学后要求检查学生手册的话，男主可能会遇到很多不必要的麻烦（其实一开始学姐的理由只是说，男主自己没有外套穿，第二天去上学也许会着凉，但是男主觉得这个理由还不足以学姐大晚上了还上门还外套的理由，学姐才说出了学生手册的原因，说实话，着凉的这个理由更能收拢男人的心啊）</p>\n<p>接下来用文字的形式重现下这个场景：</p>\n<blockquote>\n<p>学姐：“早上还是很冷的”</p>\n</blockquote>\n<blockquote>\n<p>男主：“走着走着，就会暖起来的”</p>\n</blockquote>\n<blockquote>\n<p>学姐：“可是，穿这么薄的话…”</p>\n</blockquote>\n<blockquote>\n<p>男主：“那么跑步就行了”</p>\n</blockquote>\n<blockquote>\n<p>学姐：“出了汗的话，会着凉感冒的”（认真脸）</p>\n</blockquote>\n<blockquote>\n<p>男主：“那我到时候换体育服咯”（体育服这装备那么强！？）</p>\n</blockquote>\n<blockquote>\n<p>学姐：“那么，如果长峰同学被老师叫住，训斥的话…”（长峰是男主的姓，学姐没有直呼其名，也说明了两人关系还不够密切，也说明了虽然当了很久的副委员长，可是男主也没有和学姐走得很近这一点。同时也说明了学姐这个人人物的性格吧，难以接近？）</p>\n</blockquote>\n<blockquote>\n<p>男主：“谁会训斥我啊，不过是没穿外套而已”（就是就是，学姐是不是想多了，我当时是这么想的）</p>\n</blockquote>\n<blockquote>\n<p>学姐：“也许会被生活指导老师警告的”（日本学校的生活指导老师的威严还是很强的）</p>\n</blockquote>\n<blockquote>\n<p>男主：“只要说忘记在教室之类的，就能应付过去了”</p>\n</blockquote>\n<blockquote>\n<p>学姐：“但是如果还被要求拿出学生手册的话”（学姐的表情开始转变成略带沮丧的感觉）</p>\n</blockquote>\n<blockquote>\n<p>男主：“这样的话，就会老老实实交出来的啊”（然后发现学生手册不在身上，哈哈）</p>\n</blockquote>\n<blockquote>\n<p>学姐：“长峰同学的学生手册…在我这里噢？”</p>\n</blockquote>\n<blockquote>\n<p>男主：“呃？”（男主诧异）</p>\n</blockquote>\n<blockquote>\n<p>学姐：“在外套里，口袋里面…”（这句话有点意味，首先一般来说不会随便翻别人的衣服的吧？！然而学姐居然翻看了…如果说不是学姐的个人习惯的话，那么只能用学姐对男主也有一点在意这个理由来解释了）</p>\n</blockquote>\n<blockquote>\n<p>男主：“…啊！”</p>\n</blockquote>\n<blockquote>\n<p>学姐：“我以为你知道这个手册在哪里，但是为了确认一下，就…”</p>\n</blockquote>\n<blockquote>\n<p>男主接过外套后说：“的确…是在这里呢”</p>\n</blockquote>\n<blockquote>\n<p>学姐：“有其他丢了的东西吗”（这句话可以看出，学姐的心真的非常细腻啊，是我的话，还了就还了，怎么还会问这些有的没的。。。）</p>\n</blockquote>\n<p>学姐在这个小场景里表现是很有前辈范的，稳重，成熟，细腻的感觉透露的凌厉精致。考虑周全，思维缜密，语气稳重成熟的孩子是目前的我最喜欢的了，这也是让我决定走入学姐线的一个比较重大的原因。其实不管是学姐的第一个表面原因还是第二个的深层原因，都让我感受到人心的温暖。我在想现实生活中一定无时无刻不再发生这样的事情吧。只不过有些人不擅长把握吧。</p>\n<hr>\n<p>随后，顺利的靠攻略的力量，走入了学姐线后，不得不提的第二件比较触动我心的事件发生了。</p>\n<p>但是在说明这个事件之前，有一个设定还是要说明一下的：</p>\n<blockquote>\n<p>由亚是给人带来幸福的神明，由亚只会出现在需要幸福的人的身边，故事的开头便是由亚突然降临至男主身边，励志要为男主带来幸福。但其实男主并不是由亚服务的第一个人类，由亚服务的第一个人类，是学姐</p>\n</blockquote>\n<p>所以问题就那么来了，既然由亚服务的第一个人类是学姐，那么由亚有带给学姐幸福了。照着现状来看，是没有的。（这也是为什么之前男主向学姐介绍由亚的时候会有那个奇怪的反应了）</p>\n<p>学姐知道由亚，学姐也说过交上一个可以扯一辈子的朋友，是学姐的幸福。</p>\n<p>但是不巧的便是，随着由亚陪伴在学姐的时光增加，学姐渐渐的将由亚放在了自己心中最高的位置，有由亚在身边就是学姐最高的幸福</p>\n<p>但是有一天由亚突然从学姐身边消失了，为什么？</p>\n<p>因为由亚发现，学姐所想要的幸福，居然是和自己一直生活下去</p>\n<p>但是这对于一个神明来说，是不可能的，由亚有由亚的使命，总有一天当学姐实现愿望的时候，由亚就必须离开了。</p>\n<p>所以说，学姐在由亚消失后的日子了，一直是非常难受的，以为自己被由亚抛弃，以为自己被幸福之神抛弃，以为自己是一个不幸的人。从此不愿意和人有过多的接触。（成为图书委员长的原因也许就是这个）</p>\n<p>但是其实呢？由亚并没有真的离开学姐的身边，她只是将自己的形态隐藏了起来，然后一直默默的在学姐的身边守护了一年。每天都尝试着去说服学姐身边的同龄人，让他们和学姐友好相处，和学姐做做朋友。<br>由亚只是觉得，不让学姐找到别的朋友，一直拘泥于自己，是永远得不到幸福的，因为由亚知道自己总有一天会离开学姐的。</p>\n<p>差不多就是这些原因，才导致了现在的学姐，一直认为自己是不幸的。学姐一直担心的事情便是，很少有永恒的友情，永恒的爱情。证据就是她自己的经历，友情方面便是由亚的离开，爱情方面便是自己父母的离婚。</p>\n<p>是的。确实拿着这两个强力的证据来推翻友情和爱情，是轻而易举的事情。</p>\n<p>对于友情，虽然我们全然不知自己和朋友们将来会怎么样，会不会因为一些事情而分离（比如毕业，就业），但是我想每个人应该都是想一只做朋友下去的，一直陪伴在朋友的身边。没有人会觉得分离是件好的事情。不过，总而言之生活不会如你所愿，分离在所难免。</p>\n<p>而学姐就是被这个“分离”所束缚了，当时由亚的突然离开，让她不敢和男主展开进一步的交往，怕男主也会在有一天离开自己。关于这段的学姐的怕，怕，怕，可以从下面学姐向男主袒露心声的对话中看出（即攻略成功的时候）</p>\n<blockquote>\n<p>学姐：“不会丢下我一个人不见吧？”</p>\n</blockquote>\n<blockquote>\n<p>男主：“跟你约定”</p>\n</blockquote>\n<blockquote>\n<p>学姐：“不会比我先死吧？”（难为男主了，这个真不好回答啊）</p>\n</blockquote>\n<blockquote>\n<p>男主：“为了学姐，我以后会注意身体的”</p>\n</blockquote>\n<blockquote>\n<p>学姐：“绝对。绝对哦？”</p>\n</blockquote>\n<p>学姐说自己的父母离婚的理由是因为工作一直不能在一起，所以男主说“那么只要我们以后工作在一起不就行了，一起开个咖啡店怎么样？”</p>\n<p>呀，这个作为切入点，真的很不错。虽然我不是女生，不过我感觉我都要被男主的措辞感动了。</p>\n<hr>\n<p>最后一个事件，我也想提一下。</p>\n<p>学姐在确定了与男主一起携手未来后，老师们开始埋怨起学姐了。</p>\n<p>学姐是一个超级优等生，一直是各种第一第一第一，而男主是那种成绩不怎么起眼的小角色，所以关于学姐在高三之际还进行恋爱什么的，可能会影响学业人生之类的话题</p>\n<p>当时学姐与老师争论人生未来的时候，说的理由实在是太油说服力了。加上学姐的cv强有力的配音，感觉学姐整个人的形象油然而生，不愧是学姐。我打心里佩服。。。。。</p>\n<hr>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>呼，总算是对自己的galgame经历有了一篇小小的交代总结。</p>\n<p>虽然感觉自己没写好，没有写出自己想表达的内容。</p>\n<p>不过，就这样吧。有这么一篇文章后，以后自己拿出来就有东西看了。我为自己的galgame日记划下一个句点，这是第一次，也是最后一次对自己体验过的galgame进行大篇幅的评价，说出来感觉心情舒畅呢～<br>嘛，小长假过去了，又要开始好好工作学习，也祝自己能够顺顺利利吧，也恭祝日本的galgame越做越好！希望国人可以更加关注下正版，自己喜欢的东西一定要给点钱买个正版支持一下哦</p>\n<img src=\"http://i67.tinypic.com/2wciah2.png\">\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjv3k3jue0008lk9vhw5e6bfh","category_id":"cjv3k3jua0004lk9vdnqxsegd","_id":"cjv3k3jup000glk9v2p1oa1pw"},{"post_id":"cjv3k3ju20000lk9vfiwhefkb","category_id":"cjv3k3jua0004lk9vdnqxsegd","_id":"cjv3k3jur000llk9vqijckm86"},{"post_id":"cjv3k3juh000alk9vnfg9lrng","category_id":"cjv3k3jua0004lk9vdnqxsegd","_id":"cjv3k3jus000nlk9va6jyg5sc"},{"post_id":"cjv3k3jum000elk9vuaionh0f","category_id":"cjv3k3jua0004lk9vdnqxsegd","_id":"cjv3k3jut000qlk9vf9dw4oo1"},{"post_id":"cjv3k3ju70002lk9v54f56w13","category_id":"cjv3k3jua0004lk9vdnqxsegd","_id":"cjv3k3juu000tlk9v8kwbh2wp"},{"post_id":"cjv3k3juo000flk9v8zkd9wmx","category_id":"cjv3k3jua0004lk9vdnqxsegd","_id":"cjv3k3juv000xlk9v167nlzbr"},{"post_id":"cjv3k3juq000klk9vwt4gci9i","category_id":"cjv3k3jup000hlk9v60xer5wa","_id":"cjv3k3juw0010lk9vzewzde2c"},{"post_id":"cjv3k3juc0006lk9v62yo131b","category_id":"cjv3k3jup000hlk9v60xer5wa","_id":"cjv3k3juw0012lk9vx9vy2xhw"},{"post_id":"cjv3k3jur000mlk9vdl6l6men","category_id":"cjv3k3jup000hlk9v60xer5wa","_id":"cjv3k3jux0014lk9vjnbyeqm4"},{"post_id":"cjv3k3jus000plk9vy3ot4car","category_id":"cjv3k3jua0004lk9vdnqxsegd","_id":"cjv3k3jux0015lk9v4ty3aff5"},{"post_id":"cjv3k3juv000wlk9vzm2xur2n","category_id":"cjv3k3jua0004lk9vdnqxsegd","_id":"cjv3k3jux0018lk9vcu00bha0"},{"post_id":"cjv3k3jut000slk9vi2s45qk1","category_id":"cjv3k3juw000ylk9vakpaifhf","_id":"cjv3k3jux0019lk9vu7v8dhql"},{"post_id":"cjv3k3jw1001hlk9vxx65xhse","category_id":"cjv3k3jua0004lk9vdnqxsegd","_id":"cjv3k3jw8001mlk9vrrdhkyp7"},{"post_id":"cjv3k3jw3001ilk9ve1y2hgho","category_id":"cjv3k3jua0004lk9vdnqxsegd","_id":"cjv3k3jw9001plk9v820wi71b"},{"post_id":"cjv3k3jw6001klk9v6a4niqvd","category_id":"cjv3k3jw8001nlk9vpvjs4th9","_id":"cjv3k3jwa001rlk9vz9qdfhka"}],"PostTag":[{"post_id":"cjv3k3ju20000lk9vfiwhefkb","tag_id":"cjv3k3juc0005lk9v9b809xt2","_id":"cjv3k3jul000dlk9vobndcrx4"},{"post_id":"cjv3k3ju70002lk9v54f56w13","tag_id":"cjv3k3juc0005lk9v9b809xt2","_id":"cjv3k3juq000jlk9vtn1saqgd"},{"post_id":"cjv3k3juc0006lk9v62yo131b","tag_id":"cjv3k3jup000ilk9v9l8vjq71","_id":"cjv3k3jut000rlk9vjuau0j58"},{"post_id":"cjv3k3jus000plk9vy3ot4car","tag_id":"cjv3k3juc0005lk9v9b809xt2","_id":"cjv3k3juu000vlk9vfa53zy1x"},{"post_id":"cjv3k3jue0008lk9vhw5e6bfh","tag_id":"cjv3k3jus000olk9vcyfamh6s","_id":"cjv3k3juw000zlk9v7ijxco2i"},{"post_id":"cjv3k3juh000alk9vnfg9lrng","tag_id":"cjv3k3juu000ulk9vl16m8qg9","_id":"cjv3k3jux0013lk9vp19flhyp"},{"post_id":"cjv3k3juo000flk9v8zkd9wmx","tag_id":"cjv3k3juw0011lk9vpd1k9wij","_id":"cjv3k3jux0017lk9v5l89egdu"},{"post_id":"cjv3k3juq000klk9vwt4gci9i","tag_id":"cjv3k3jux0016lk9vb75lmf1j","_id":"cjv3k3juy001blk9vm2wmuhj9"},{"post_id":"cjv3k3jur000mlk9vdl6l6men","tag_id":"cjv3k3jux0016lk9vb75lmf1j","_id":"cjv3k3juy001dlk9vrzrd6dql"},{"post_id":"cjv3k3jut000slk9vi2s45qk1","tag_id":"cjv3k3juy001clk9vvvnk5cyy","_id":"cjv3k3juz001flk9v3t01xql1"},{"post_id":"cjv3k3juv000wlk9vzm2xur2n","tag_id":"cjv3k3juy001clk9vvvnk5cyy","_id":"cjv3k3juz001glk9vc110lkel"},{"post_id":"cjv3k3jw3001ilk9ve1y2hgho","tag_id":"cjv3k3juu000ulk9vl16m8qg9","_id":"cjv3k3jw8001llk9vxjdiy438"},{"post_id":"cjv3k3jw6001klk9v6a4niqvd","tag_id":"cjv3k3jux0016lk9vb75lmf1j","_id":"cjv3k3jw9001olk9vfr2efw1f"},{"post_id":"cjv3k3jw1001hlk9vxx65xhse","tag_id":"cjv3k3jw5001jlk9vnvbqa6kc","_id":"cjv3k3jw9001qlk9voz7z0g92"}],"Tag":[{"name":"hexo","_id":"cjv3k3juc0005lk9v9b809xt2"},{"name":"随笔","_id":"cjv3k3jup000ilk9v9l8vjq71"},{"name":"ubuntu","_id":"cjv3k3jus000olk9vcyfamh6s"},{"name":"signature","_id":"cjv3k3juu000ulk9vl16m8qg9"},{"name":"编码","_id":"cjv3k3juw0011lk9vpd1k9wij"},{"name":"回忆向","_id":"cjv3k3jux0016lk9vb75lmf1j"},{"name":"Bugs","_id":"cjv3k3juy001clk9vvvnk5cyy"},{"name":"JavaWeb","_id":"cjv3k3jw5001jlk9vnvbqa6kc"}]}}